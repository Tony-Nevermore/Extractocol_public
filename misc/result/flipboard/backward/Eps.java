(1/20) Printing..
+ DP Stmt : $r10 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()
+ DP SootMethod : <com.helpshift.HSMessagesFragment: java.lang.String a(java.lang.String,java.lang.String,int)>
+ EPs (10) :
	+<com.helpshift.HSMessagesFragment$20: void handleMessage(android.os.Message)>
	+<com.helpshift.HSMessagesFragment$16: void handleMessage(android.os.Message)>
	+<com.helpshift.HSMessagesFragment$5: void handleMessage(android.os.Message)>
	+<com.helpshift.HSMessagesFragment$6: void handleMessage(android.os.Message)>
	+<com.helpshift.HSMessagesFragment: void a(android.view.View,android.os.Bundle)>
	+<com.helpshift.HSMessagesFragment$18: void handleMessage(android.os.Message)>
	+<com.helpshift.HSMessagesFragment$14: void handleMessage(android.os.Message)>
	+<com.helpshift.HSMessagesFragment$1: void onReceive(android.content.Context,android.content.Intent)>
	+<dummyMainClass: void dummyMainMethod(java.lang.String[])>
	+<com.helpshift.HSMessagesFragment$3: void handleMessage(android.os.Message)>
+ Taint Methods : 
	++ <com.helpshift.HSMessagesFragment$DownloadImagesTask: void <init>(com.helpshift.HSMessagesFragment,byte)>
	++ <com.helpshift.HSApiData: org.json.JSONArray e(java.lang.String)>
	++ <com.helpshift.HSMessagesFragment: void a(java.lang.String)>
	++ <org.json.JSONArray: void <init>(java.lang.String)>
	++ <com.helpshift.HSMessagesFragment$DownloadImagesTask: java.util.HashMap a(java.util.HashMap[])>
	++ <com.helpshift.HSStorage: void a(org.json.JSONObject)>
	++ <com.helpshift.HSMessagesFragment$20: void handleMessage(android.os.Message)>
	++ <flipboard.util.SocialHelper: void <clinit>()>
	++ <org.json.JSONArray: org.json.JSONObject optJSONObject(int)>
	++ <flipboard.gui.toc.TOCCoverPage: void onClick(android.view.View)>
	++ <com.helpshift.HSStorage: org.json.JSONArray a(org.json.JSONArray,org.json.JSONArray)>
	++ <com.helpshift.HSMessagesFragment$16: void handleMessage(android.os.Message)>
	++ <com.helpshift.HSMessagesFragment$5: void handleMessage(android.os.Message)>
	++ <com.helpshift.HSMessagesFragment: void x()>
	++ <com.helpshift.customadapters.MessagesAdapter$1: void onClick(android.view.View)>
	++ <com.helpshift.HSMessagesFragment: void a(android.content.res.Configuration)>
	++ <com.helpshift.HSMessagesFragment: void w()>
	++ <org.json.JSONArray: int length()>
	++ <com.helpshift.HSMessagesFragment$6: void handleMessage(android.os.Message)>
	++ <org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
	++ <com.helpshift.HSMessagesFragment: void <init>()>
	++ <com.helpshift.HSApiData: void a(java.lang.String,java.lang.String,java.lang.Boolean)>
	++ <com.helpshift.HSMessagesFragment: void a(org.json.JSONArray)>
	++ <com.helpshift.app.ActionBarHelperBase$1: void onClick(android.view.View)>
	++ <com.helpshift.HSMessagesFragment: void e(int)>
	++ <com.helpshift.HSApiData: void a(java.lang.String,java.lang.String)>
	++ <flipboard.util.SocialHelper: flipboard.gui.InlineFlipUIController a(flipboard.activities.FlipboardActivity,android.view.View,flipboard.service.Section,flipboard.model.FeedItem,flipboard.model.UsageEventV2$FlipItemNavFrom)>
	++ <com.helpshift.HSMessagesFragment: void b(java.lang.String)>
	++ <flipboard.io.UsageEvent: void a(java.lang.String,long,flipboard.service.Section,flipboard.model.FeedItem,flipboard.model.UserState$TargetAuthor)>
	++ <com.helpshift.HSMessagesFragment$DownloadImagesTask: java.lang.Object doInBackground(java.lang.Object[])>
	++ <com.helpshift.HSStorage: void b(java.lang.String,java.lang.String)>
	++ <flipboard.activities.FlipboardActivity: void startActivityForResult(android.content.Intent,int)>
	++ <com.helpshift.HSApiData: void b(java.lang.String,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSMessagesFragment: void a(android.view.View,android.os.Bundle)>
	++ <flipboard.service.FlipboardManager: void i(java.lang.String)>
	++ <com.helpshift.HSMessagesFragment$18: void handleMessage(android.os.Message)>
	++ <org.json.JSONArray: void <init>()>
	++ <com.helpshift.HSMessagesFragment: void a(com.helpshift.HSMessagesFragment,android.os.Message)>
	++ <com.helpshift.HSMessagesFragment$14: void handleMessage(android.os.Message)>
	++ <flipboard.activities.ReadLaterActivity$ReadLaterAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.util.Log: flipboard.util.Log a(java.lang.String)>
	++ <flipboard.util.SocialHelper: boolean a(flipboard.activities.FlipboardActivity)>
	++ <com.helpshift.HSStorage: org.json.JSONArray b(java.lang.String)>
	++ <com.helpshift.HSStorage: org.json.JSONObject i(java.lang.String)>
	++ <com.helpshift.HSMessagesFragment$1: void onReceive(android.content.Context,android.content.Intent)>
	++ <com.helpshift.HSMessagesFragment$9: void <init>(com.helpshift.HSMessagesFragment)>
	++ <com.helpshift.HSMessagesFragment: void a(com.helpshift.HSMessagesFragment)>
	++ <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
	++ <flipboard.activities.FlipboardActivity: void a(android.content.Intent,int,flipboard.activities.FlipboardActivity$ActivityResultListener)>
	++ <com.helpshift.util.HSJSONUtils: java.lang.String[] a(org.json.JSONObject)>
	++ <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	++ <com.helpshift.HSMessagesFragment$3: void handleMessage(android.os.Message)>
	++ <org.json.JSONArray: java.lang.Object get(int)>
	++ <flipboard.gui.dialog.ShareDialog$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.gui.dialog.FLDialogFragment: void a(android.support.v4.app.FragmentManager,java.lang.String)>
	++ <com.helpshift.HSApiData: void c(java.lang.String)>
	++ <flipboard.gui.section.SectionFragment$25: void onClick(android.view.View)>
	++ <flipboard.io.UsageEvent: void <clinit>()>
	++ <com.helpshift.HSMessagesFragment$9: void onClick(android.view.View)>
	++ <com.helpshift.HSStorage: void b(java.lang.String,org.json.JSONArray)>
	++ <com.helpshift.HSMessagesFragment: java.lang.String a(java.lang.String,java.lang.String,int)>
	++ <flipboard.gui.personal.TocGridFragment$2: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <com.helpshift.HSMessagesFragment: void d()>
	++ <com.helpshift.customadapters.MessagesAdapter: com.helpshift.HSMessagesFragment a(com.helpshift.customadapters.MessagesAdapter)>
	++ <flipboard.gui.personal.NotificationsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.helpshift.HSStorage: org.json.JSONArray b(org.json.JSONArray,org.json.JSONArray)>
Graph Visualizing for this DP...

(2/20) Printing..
+ DP Stmt : $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()
+ DP SootMethod : <net.hockeyapp.android.tasks.CheckUpdateTask: org.json.JSONArray a()>
+ EPs (1) :
	+<flipboard.activities.FlipboardActivity: void onCreate(android.os.Bundle)>
+ Taint Methods : 
	++ <net.hockeyapp.android.Constants: void a(android.content.Context)>
	++ <flipboard.activities.FlipboardActivity: void onCreate(android.os.Bundle)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask: void <init>(java.lang.ref.WeakReference,java.lang.String,java.lang.String)>
	++ <net.hockeyapp.android.Tracking: long a(android.content.Context)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask: java.lang.String a(java.lang.String)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>
	++ <net.hockeyapp.android.UpdateManager: void a(android.app.Activity,java.lang.String)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask: java.lang.String b(java.lang.String)>
	++ <net.hockeyapp.android.Constants: int a(android.content.Context,android.content.pm.PackageManager)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask: boolean a(org.json.JSONArray,int)>
	++ <net.hockeyapp.android.UpdateManager: boolean b(java.lang.ref.WeakReference)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask: org.json.JSONArray a()>
Graph Visualizing for this DP...

(3/20) Printing..
+ DP Stmt : $r7 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>()
+ DP SootMethod : <com.facebook.Request: java.net.HttpURLConnection c(com.facebook.RequestBatch)>
+ EPs (1) :
	+<com.facebook.Request: java.net.HttpURLConnection c(com.facebook.RequestBatch)>
+ Taint Methods : 
	++ <com.facebook.Request: java.net.HttpURLConnection c(com.facebook.RequestBatch)>
Graph Visualizing for this DP...

(4/20) Printing..
+ DP Stmt : $r18 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
+ DP SootMethod : <com.helpshift.HSApiClient$1: void run()>
+ EPs (15) :
	+<com.helpshift.HSApiClient$1: void run()>
	+<com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
	+<com.google.android.gms.tagmanager.ay: void b(android.content.Context,java.lang.String)>
	+<com.helpshift.HSApiData$1: void handleMessage(android.os.Message)>
	+<com.google.android.gms.tagmanager.ay: void a(android.content.Context,java.lang.String)>
	+<com.google.android.gms.tagmanager.d: void a(java.util.Map)>
	+<com.helpshift.HSMessagesFragment: void b()>
	+<com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	+<com.android.debug.hv.ViewServer: boolean a()>
	+<com.google.android.gms.tagmanager.cz: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
	+<com.helpshift.HSActivity: void e()>
	+<com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	+<com.helpshift.HSApiData: void j()>
	+<com.helpshift.HSSearch: void a()>
	+<com.google.android.gms.tagmanager.InstallReferrerService: void onHandleIntent(android.content.Intent)>
+ Taint Methods : 
	++ <com.helpshift.HSActivity$1: void <init>(com.helpshift.HSActivity)>
	++ <com.helpshift.HSApiClient: java.lang.String a(java.lang.Object)>
	++ <com.helpshift.HSApiClient: java.util.HashMap a(java.util.HashMap,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.util.HashMap a(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String c(java.lang.String)>
	++ <com.helpshift.exceptions.InstallException: void <init>(java.lang.String)>
	++ <com.helpshift.HSApiClient$1: void run()>
	++ <com.helpshift.util.HSTimeUtil: java.lang.String a(java.lang.Float)>
	++ <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
	++ <org.apache.http.client.methods.HttpRequestBase: void <init>()>
	++ <com.helpshift.HSMessagesFragment$7: void <init>(com.helpshift.HSMessagesFragment)>
	++ <com.google.android.gms.tagmanager.ay: void b(android.content.Context,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String a(com.helpshift.HSApiClient,java.lang.String)>
	++ <com.helpshift.HSApiData$1: void handleMessage(android.os.Message)>
	++ <com.helpshift.HSStorage: java.lang.String h(java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String a(java.util.HashMap)>
	++ <com.helpshift.HSStorage: java.lang.Float j()>
	++ <org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
	++ <com.google.android.gms.tagmanager.ay: void a(android.content.Context,java.lang.String)>
	++ <com.google.android.gms.tagmanager.d: void a(java.util.Map)>
	++ <org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.util.List b(java.util.HashMap)>
	++ <com.helpshift.HSApiData$14: void <init>(com.helpshift.HSApiData)>
	++ <com.helpshift.HSMessagesFragment: void b()>
	++ <org.json.JSONArray: void <init>(java.util.Collection)>
	++ <com.squareup.okhttp.internal.Util: java.util.concurrent.ThreadFactory a(java.lang.String,boolean)>
	++ <com.helpshift.HSApiClient: java.lang.String b(java.lang.String)>
	++ <com.squareup.okhttp.internal.Util$1: void <init>(java.lang.String,boolean)>
	++ <com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	++ <org.apache.http.message.AbstractHttpMessage: void <init>()>
	++ <com.android.debug.hv.ViewServer: boolean a()>
	++ <com.helpshift.HSApiClient: java.lang.String a(byte[])>
	++ <com.google.android.gms.tagmanager.cz: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSActivity: void e()>
	++ <com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
	++ <com.helpshift.HSApiData$1$1: void <init>(com.helpshift.HSApiData$1)>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection: void <clinit>()>
	++ <com.squareup.okhttp.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>
	++ <com.helpshift.HSApiClient$1: void <init>(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String,android.os.Handler,android.os.Handler)>
	++ <java.lang.Thread: void run()>
	++ <org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>
	++ <com.helpshift.HSApiData: void j()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection)>
	++ <com.helpshift.HSSearch: void a()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,byte)>
	++ <com.helpshift.HSApiClient$2: void <init>(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String,android.os.Handler,android.os.Handler)>
	++ <com.google.android.gms.tagmanager.InstallReferrerService: void onHandleIntent(android.content.Intent)>
	++ <com.helpshift.HSSearch$1: void <init>()>
Graph Visualizing for this DP...

(5/20) Printing..
+ DP Stmt : $r14 = virtualinvoke $r13.<java.net.URL: java.net.URLConnection openConnection()>()
+ DP SootMethod : <com.helpshift.HSApiClient$2: void run()>
+ EPs (15) :
	+<com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	+<com.android.debug.hv.ViewServer: boolean a()>
	+<com.google.android.gms.tagmanager.cz: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
	+<com.helpshift.HSActivity: void e()>
	+<com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	+<com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
	+<com.helpshift.HSApiClient$2: void run()>
	+<com.google.android.gms.tagmanager.ay: void b(android.content.Context,java.lang.String)>
	+<com.helpshift.HSApiData$1: void handleMessage(android.os.Message)>
	+<com.google.android.gms.tagmanager.ay: void a(android.content.Context,java.lang.String)>
	+<com.helpshift.HSApiData: void j()>
	+<com.google.android.gms.tagmanager.d: void a(java.util.Map)>
	+<com.helpshift.HSMessagesFragment: void b()>
	+<com.helpshift.HSSearch: void a()>
	+<com.google.android.gms.tagmanager.InstallReferrerService: void onHandleIntent(android.content.Intent)>
+ Taint Methods : 
	++ <com.helpshift.HSApiClient: java.lang.String b(java.lang.String)>
	++ <com.helpshift.HSActivity$1: void <init>(com.helpshift.HSActivity)>
	++ <com.squareup.okhttp.internal.Util$1: void <init>(java.lang.String,boolean)>
	++ <com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	++ <com.android.debug.hv.ViewServer: boolean a()>
	++ <com.helpshift.HSApiClient: java.util.HashMap a(java.util.HashMap,java.lang.String,java.lang.String)>
	++ <com.google.android.gms.tagmanager.cz: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String c(java.lang.String)>
	++ <com.helpshift.HSApiClient: java.util.HashMap a(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String)>
	++ <com.helpshift.exceptions.InstallException: void <init>(java.lang.String)>
	++ <com.helpshift.HSActivity: void e()>
	++ <com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
	++ <com.helpshift.HSApiData$1$1: void <init>(com.helpshift.HSApiData$1)>
	++ <com.helpshift.HSMessagesFragment$7: void <init>(com.helpshift.HSMessagesFragment)>
	++ <com.helpshift.HSApiClient$2: void run()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection: void <clinit>()>
	++ <com.google.android.gms.tagmanager.ay: void b(android.content.Context,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String a(com.helpshift.HSApiClient,java.lang.String)>
	++ <com.helpshift.HSApiData$1: void handleMessage(android.os.Message)>
	++ <com.squareup.okhttp.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>
	++ <com.helpshift.HSApiClient$1: void <init>(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String,android.os.Handler,android.os.Handler)>
	++ <java.lang.Thread: void run()>
	++ <com.google.android.gms.tagmanager.ay: void a(android.content.Context,java.lang.String)>
	++ <com.helpshift.HSApiData: void j()>
	++ <com.google.android.gms.tagmanager.d: void a(java.util.Map)>
	++ <com.helpshift.HSApiData$14: void <init>(com.helpshift.HSApiData)>
	++ <com.helpshift.HSMessagesFragment: void b()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection)>
	++ <com.helpshift.HSSearch: void a()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,byte)>
	++ <com.helpshift.HSApiClient$2: void <init>(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String,android.os.Handler,android.os.Handler)>
	++ <com.helpshift.HSApiClient: java.lang.String a(java.lang.String)>
	++ <com.google.android.gms.tagmanager.InstallReferrerService: void onHandleIntent(android.content.Intent)>
	++ <com.squareup.okhttp.internal.Util: java.util.concurrent.ThreadFactory a(java.lang.String,boolean)>
	++ <com.helpshift.HSSearch$1: void <init>()>
Graph Visualizing for this DP...

(6/20) Printing..
+ DP Stmt : $r10 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r3)
+ DP SootMethod : <net.hockeyapp.android.tasks.SendFeedbackTask: java.util.HashMap a(org.apache.http.client.HttpClient)>
+ EPs (1) :
	+<dummyMainClass: void dummyMainMethod(java.lang.String[])>
+ Taint Methods : 
	++ <flipboard.service.FlipboardManager: flipboard.service.Flap$FlapRequest createAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,flipboard.util.Observer)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.List,boolean,boolean)>
	++ <com.helpshift.HSFunnel: void a(java.lang.String,org.json.JSONObject)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.Map)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter$1: void onClick(android.view.View)>
	++ <flipboard.util.SocialHelper: void a(android.view.View,flipboard.service.Section,flipboard.model.FeedItem,flipboard.model.FeedItem,flipboard.model.UsageEventV2$SocialCardNavFrom)>
	++ <flipboard.gui.FLImageView: void <clinit>()>
	++ <flipboard.gui.NoContentView$1: void onClick(android.view.View)>
	++ <flipboard.util.SocialHelper: void <clinit>()>
	++ <com.facebook.Session: void a(com.facebook.Session$OpenRequest,com.facebook.internal.SessionAuthorizationType)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud$CategoryPickerListAdapter: void <init>(flipboard.gui.firstrun.CategoryPickerCloud,android.content.Context,java.util.List,boolean)>
	++ <flipboard.util.AndroidUtil: boolean a(android.content.Context,android.content.Intent)>
	++ <flipboard.gui.SocialBarTablet: void onClick(android.view.View)>
	++ <com.facebook.Session$OpenRequest: void <init>(android.support.v4.app.Fragment)>
	++ <flipboard.activities.FlipboardActivity: void startActivity(android.content.Intent)>
	++ <org.apache.http.client.methods.HttpRequestBase: void <init>()>
	++ <com.helpshift.HSFunnel: void b(java.lang.String)>
	++ <flipboard.gui.FLEditText: void a(boolean)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager: void b(java.lang.Runnable)>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()>
	++ <flipboard.gui.section.UserListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.facebook.AppEventsLogger: com.facebook.AppEventsLogger a(android.content.Context)>
	++ <com.facebook.Session: void b(com.facebook.Session$OpenRequest)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: java.lang.Object doInBackground(java.lang.Object[])>
	++ <flipboard.service.Section: void <clinit>()>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,java.lang.String,android.os.Bundle)>
	++ <net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <flipboard.util.SocialHelper: void a(flipboard.service.Section,android.content.Context,android.os.Bundle)>
	++ <flipboard.gui.FLEditText: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.service.audio.MediaPlayerService: boolean onError(android.media.MediaPlayer,int,int)>
	++ <flipboard.activities.FlipboardActivity: void startActivityForResult(android.content.Intent,int)>
	++ <com.facebook.Session: void a(com.facebook.Session)>
	++ <flipboard.activities.DetailActivity: void startActivity(android.content.Intent)>
	++ <com.facebook.Session$OpenRequest: void <init>(android.app.Activity)>
	++ <com.facebook.FacebookException: void <init>(java.lang.String)>
	++ <flipboard.util.Log: void <clinit>()>
	++ <com.helpshift.HSReviewFragment$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.gui.personal.TabStripStatic$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager: void i(java.lang.String)>
	++ <flipboard.util.Log: void b(java.lang.String,java.lang.Object[])>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,android.os.Bundle)>
	++ <org.apache.http.message.AbstractHttpMessage: void <init>()>
	++ <flipboard.gui.toc.TOCPage$SearchBoxOnClickListener: void onClick(android.view.View)>
	++ <com.facebook.Session: void a(com.facebook.Session$OpenRequest)>
	++ <com.facebook.widget.LoginButton$LoginClickListener: void onClick(android.view.View)>
	++ <flipboard.activities.VideoAdActivity: void onConfigurationChanged(android.content.res.Configuration)>
	++ <net.hockeyapp.android.FeedbackActivity: void a()>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,java.lang.String)>
	++ <com.facebook.AppEventsLogger$AppEvent: void <init>(java.lang.String,android.os.Bundle)>
	++ <flipboard.util.Log: flipboard.util.Log a(java.lang.String)>
	++ <flipboard.util.SocialHelper: void a(flipboard.activities.FlipboardActivity,flipboard.model.ConfigService,flipboard.util.SocialHelper$ServiceLoginObserver)>
	++ <net.hockeyapp.android.Constants: void a(android.content.Context)>
	++ <flipboard.gui.FLToast: void b(flipboard.activities.FlipboardActivity,java.lang.String)>
	++ <com.facebook.AppEventsLogger: void a(java.lang.String,android.os.Bundle)>
	++ <flipboard.activities.ChooseAccountActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.service.User: flipboard.service.Section d(java.lang.String)>
	++ <flipboard.gui.personal.UserProfile$1: void onClick(android.view.View)>
	++ <net.hockeyapp.android.FeedbackActivity: void <init>()>
	++ <flipboard.activities.CreateAccountActivity$9: void onClick(android.view.View)>
	++ <flipboard.gui.section.scrolling.header.ProfileCover$MagazineCarouselTileHolder: void onClick(android.view.View)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <flipboard.activities.FlipboardActivity: void a(android.content.Intent,int,flipboard.activities.FlipboardActivity$ActivityResultListener)>
	++ <flipboard.gui.FLImageView$6: void onClick(android.view.View)>
	++ <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	++ <net.hockeyapp.android.FeedbackActivity: void onClick(android.view.View)>
	++ <com.facebook.AppEventsLogger: com.facebook.AppEventsLogger$SessionEventsState a(android.content.Context,com.facebook.AppEventsLogger$AccessTokenAppIdPair)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: java.util.HashMap a(org.apache.http.client.HttpClient)>
	++ <net.hockeyapp.android.FeedbackActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	++ <flipboard.gui.dialog.FLDialogFragment: void a(android.support.v4.app.FragmentManager,java.lang.String)>
	++ <flipboard.gui.item.InFeedExpandableModuleHead$1: void onClick(android.view.View)>
	++ <com.helpshift.HSReviewFragment$2: void onClick(android.content.DialogInterface,int)>
	++ <org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(java.lang.String)>
	++ <net.hockeyapp.android.FeedbackActivity$5: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.Flap: void <clinit>()>
	++ <com.helpshift.HSReviewFragment$3: void onClick(android.content.DialogInterface,int)>
	++ <org.apache.http.client.methods.HttpPut: void <init>(java.lang.String)>
Graph Visualizing for this DP...

(7/20) Printing..
+ DP Stmt : $r7 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()
+ DP SootMethod : <com.facebook.internal.ImageDownloader: void a(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context)>
+ EPs (0) :
+ Taint Methods : 
	++ <com.facebook.internal.ImageDownloader: void a(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context,boolean)>
	++ <com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode a(com.facebook.internal.WorkQueue$WorkNode)>
	++ <com.facebook.internal.ImageDownloader$DownloadImageWorkItem: void run()>
	++ <com.facebook.internal.WorkQueue: void a(com.facebook.internal.WorkQueue$WorkNode)>
	++ <com.facebook.internal.ImageDownloader$DownloadImageWorkItem: void <init>(android.content.Context,com.facebook.internal.ImageDownloader$RequestKey)>
	++ <com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode a(com.facebook.internal.WorkQueue$WorkNode,boolean)>
	++ <com.facebook.internal.ImageDownloader: void a(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context)>
	++ <com.facebook.internal.WorkQueue$WorkNode: void <init>(com.facebook.internal.WorkQueue,java.lang.Runnable)>
	++ <com.facebook.internal.WorkQueue: void a(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode)>
	++ <com.facebook.internal.WorkQueue$1: void run()>
	++ <com.facebook.internal.WorkQueue: com.facebook.internal.WorkQueue$WorkItem a(java.lang.Runnable)>
	++ <com.facebook.internal.WorkQueue$1: void <init>(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode)>
	++ <com.facebook.internal.ImageDownloader: void a(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey,com.facebook.internal.WorkQueue,java.lang.Runnable)>
Graph Visualizing for this DP...

(8/20) Printing..
+ DP Stmt : $r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
+ DP SootMethod : <com.facebook.Response: java.util.List a(java.net.HttpURLConnection,com.facebook.RequestBatch)>
+ EPs (1) :
	+<com.facebook.Request: com.facebook.RequestAsyncTask b(com.facebook.RequestBatch)>
+ Taint Methods : 
	++ <com.facebook.Response: java.util.List a(java.net.HttpURLConnection,com.facebook.RequestBatch)>
	++ <com.facebook.internal.Logger: void a(java.lang.String,java.lang.String)>
	++ <com.facebook.Request: java.lang.String b(java.lang.String)>
	++ <com.facebook.Session: java.lang.String d()>
	++ <com.facebook.internal.FileLruCache$StreamHeader: org.json.JSONObject a(java.io.InputStream)>
	++ <com.facebook.Request: void c()>
	++ <com.facebook.internal.ServerProtocol: java.lang.String d()>
	++ <org.json.JSONTokener: void <init>(java.lang.String)>
	++ <com.facebook.Request: void a(android.os.Bundle,com.facebook.Request$Serializer,com.facebook.Request)>
	++ <com.facebook.RequestAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
	++ <com.facebook.internal.FileLruCache: java.io.InputStream a(java.lang.String,java.lang.String)>
	++ <com.facebook.Request: java.net.HttpURLConnection c(com.facebook.RequestBatch)>
	++ <com.facebook.Request: void a(com.facebook.RequestBatch,com.facebook.internal.Logger,int,java.net.URL,java.io.OutputStream)>
	++ <org.json.JSONArray: int length()>
	++ <com.facebook.Request$Serializer: void a(java.lang.String,java.lang.String)>
	++ <com.facebook.internal.Logger: void <init>(com.facebook.LoggingBehavior,java.lang.String)>
	++ <com.facebook.Request: java.lang.String b()>
	++ <com.facebook.internal.Validate: void a(java.util.Collection,java.lang.String)>
	++ <com.facebook.Session: boolean a()>
	++ <com.facebook.internal.Validate: void a(java.lang.String,java.lang.String)>
	++ <com.facebook.Request$5: void a(java.lang.String,java.lang.String)>
	++ <com.facebook.Request: java.util.List a(com.facebook.RequestBatch)>
	++ <com.facebook.Request: void <clinit>()>
	++ <com.facebook.Request: com.facebook.RequestAsyncTask b(com.facebook.RequestBatch)>
	++ <com.facebook.internal.Utility: java.lang.String b(java.lang.String)>
	++ <com.facebook.internal.FileLruCache$BufferFile: void a(java.io.File)>
	++ <com.facebook.ProgressOutputStream: void <init>(java.io.OutputStream,com.facebook.RequestBatch,java.util.Map,long)>
	++ <com.facebook.RequestBatch: int size()>
	++ <com.facebook.Request: boolean a(java.lang.Object)>
	++ <com.facebook.FacebookException: void <init>(java.lang.String)>
	++ <com.facebook.Request: void a(com.facebook.Request$Serializer,java.util.Collection,java.util.Map)>
	++ <com.facebook.internal.Validate: void a(java.lang.Object,java.lang.String)>
	++ <com.facebook.Request: void a(org.json.JSONArray,java.util.Map)>
	++ <com.facebook.internal.Utility: boolean a(java.lang.String)>
	++ <com.facebook.RequestAsyncTask: java.util.List b()>
	++ <com.facebook.RequestBatch: com.facebook.Request a(int)>
	++ <com.facebook.Request: java.lang.String d()>
	++ <com.facebook.RequestAsyncTask: com.facebook.RequestAsyncTask a()>
	++ <org.json.JSONArray: java.lang.Object opt(int)>
	++ <com.facebook.Request$Serializer: void a(java.lang.String,java.lang.Object[])>
	++ <com.facebook.internal.ServerProtocol: java.lang.String c()>
	++ <com.facebook.internal.Logger: void a(java.lang.String)>
	++ <com.facebook.Request$Serializer: void a(java.lang.String,java.lang.Object,com.facebook.Request)>
	++ <com.facebook.Request: void a(java.util.Map,com.facebook.Request$Serializer)>
	++ <com.facebook.Request: java.lang.String e()>
	++ <com.facebook.Request: java.lang.String e(com.facebook.RequestBatch)>
	++ <com.facebook.RequestAsyncTask: void <init>(com.facebook.RequestBatch,byte)>
	++ <com.facebook.Request$Attachment: void <init>(com.facebook.Request,java.lang.Object)>
	++ <com.facebook.Request$Serializer: void a(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String)>
	++ <com.facebook.Request: boolean d(com.facebook.RequestBatch)>
	++ <com.facebook.Request: java.lang.String f()>
	++ <com.facebook.Request: java.util.List a(java.net.HttpURLConnection,com.facebook.RequestBatch)>
	++ <com.facebook.internal.Utility: java.lang.String a(java.lang.String,byte[])>
	++ <com.facebook.RequestAsyncTask: void <init>(com.facebook.RequestBatch)>
	++ <com.facebook.internal.FileLruCache: void <init>(android.content.Context,java.lang.String,com.facebook.internal.FileLruCache$Limits)>
	++ <com.facebook.Request: java.lang.String e(java.lang.Object)>
	++ <com.facebook.Request: void a(java.lang.String,java.lang.Object,com.facebook.Request$KeyValueSerializer,boolean)>
	++ <com.facebook.Request$Serializer: void a()>
	++ <com.facebook.Request$Serializer: void a(java.lang.String,org.json.JSONArray,java.util.Collection)>
	++ <com.facebook.Request$Serializer: void b(java.lang.String,java.lang.Object[])>
	++ <com.facebook.Request$Serializer: void a(java.lang.String,java.lang.String,java.lang.String)>
	++ <com.facebook.internal.ServerProtocol: java.lang.String b()>
	++ <com.facebook.internal.Utility: java.lang.String a(java.lang.String,java.lang.String)>
	++ <com.facebook.Request: void a(com.facebook.model.GraphObject,java.lang.String,com.facebook.Request$KeyValueSerializer)>
Graph Visualizing for this DP...

(9/20) Printing..
+ DP Stmt : $r8 = interfaceinvoke $r7.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
+ DP SootMethod : <net.hockeyapp.android.tasks.SendFeedbackTask: java.util.HashMap b(org.apache.http.client.HttpClient)>
+ EPs (1) :
	+<dummyMainClass: void dummyMainMethod(java.lang.String[])>
+ Taint Methods : 
	++ <flipboard.service.audio.MediaPlayerService: void b(boolean)>
	++ <com.facebook.Session$OpenRequest: com.facebook.Session$OpenRequest b(com.facebook.SessionDefaultAudience)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.List,boolean,boolean)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.Map)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter$1: void onClick(android.view.View)>
	++ <flipboard.service.Flap$AccountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.app.FlipboardApplication: void attachBaseContext(android.content.Context)>
	++ <com.facebook.Session: void a(com.facebook.SessionState,com.facebook.SessionState,java.lang.Exception)>
	++ <flipboard.service.FlipboardManager: flipboard.model.ConfigService f(java.lang.String)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud$CategoryPickerListAdapter: void <init>(flipboard.gui.firstrun.CategoryPickerCloud,android.content.Context,java.util.List,boolean)>
	++ <flipboard.model.FLObject: void set(java.lang.String,java.lang.String)>
	++ <flipboard.model.UsageEventV2: void set(java.lang.String,java.lang.Object)>
	++ <flipboard.activities.CategoryPickerFragment$2: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.activities.FlipboardActivity: void startActivity(android.content.Intent)>
	++ <flipboard.gui.item.CoverSectionItemTablet$4: void onClick(android.view.View)>
	++ <flipboard.gui.FLEditText: void a(boolean)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud$1: void onClick(android.view.View)>
	++ <flipboard.gui.section.UserListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.facebook.AppEventsLogger: com.facebook.AppEventsLogger a(android.content.Context)>
	++ <flipboard.gui.toc.TileContainer$2$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.User: void a(flipboard.service.User$StateChanger)>
	++ <flipboard.util.Format: void <clinit>()>
	++ <flipboard.gui.FLEditText: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.activities.SearchTabletActivity: void m()>
	++ <flipboard.service.audio.MediaPlayerService: boolean onError(android.media.MediaPlayer,int,int)>
	++ <com.facebook.Session: void a(com.facebook.Session)>
	++ <flipboard.activities.DetailActivity: void startActivity(android.content.Intent)>
	++ <flipboard.service.Flap$SearchRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.facebook.Session$OpenRequest: void <init>(android.app.Activity)>
	++ <flipboard.activities.ReportIssueActivity: void <clinit>()>
	++ <com.helpshift.HSReviewFragment$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.FlipboardManager: void i(java.lang.String)>
	++ <flipboard.io.UsageEvent: flipboard.model.FLObject a(java.lang.String,java.lang.Number,boolean)>
	++ <com.facebook.Session: void a(com.facebook.Session$OpenRequest)>
	++ <com.facebook.widget.LoginButton$LoginClickListener: void onClick(android.view.View)>
	++ <net.hockeyapp.android.FeedbackActivity: void a()>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,java.lang.String)>
	++ <flipboard.util.Log: flipboard.util.Log a(java.lang.String)>
	++ <net.hockeyapp.android.Constants: void a(android.content.Context)>
	++ <flipboard.activities.VideoAdActivity: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>
	++ <flipboard.gui.personal.UserProfile$1: void onClick(android.view.View)>
	++ <flipboard.activities.FlipboardActivity: void finish()>
	++ <net.hockeyapp.android.FeedbackActivity: void <init>()>
	++ <flipboard.activities.ReportIssueActivity$5: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.model.UsageEventV2: flipboard.model.UsageEventV2 set(flipboard.model.UsageEventV2$CommonEventData,java.lang.Object)>
	++ <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	++ <com.facebook.AppEventsLogger: com.facebook.AppEventsLogger$SessionEventsState a(android.content.Context,com.facebook.AppEventsLogger$AccessTokenAppIdPair)>
	++ <flipboard.activities.FlipboardActivity: void <clinit>()>
	++ <flipboard.util.Format: java.lang.String toString()>
	++ <flipboard.service.FlipboardManager: java.lang.String h(java.lang.String)>
	++ <net.hockeyapp.android.FeedbackActivity$5: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.audio.MediaPlayerService: void onPrepared(android.media.MediaPlayer)>
	++ <com.facebook.Session$OpenRequest: com.facebook.Session$OpenRequest b(java.util.List)>
	++ <flipboard.util.Format$CharBuf: java.lang.String toString()>
	++ <net.hockeyapp.android.UpdateFragment: void a(android.app.Activity)>
	++ <flipboard.util.SocialHelper: void a(android.view.View,flipboard.service.Section,flipboard.model.FeedItem,flipboard.model.FeedItem,flipboard.model.UsageEventV2$SocialCardNavFrom)>
	++ <com.helpshift.widget.CSATDialog: void onDismiss(android.content.DialogInterface)>
	++ <flipboard.gui.FLImageView: void <clinit>()>
	++ <flipboard.util.SocialHelper: void <clinit>()>
	++ <flipboard.util.Format$CharBuf: void b(int)>
	++ <flipboard.util.AndroidUtil: boolean a(android.content.Context,android.content.Intent)>
	++ <flipboard.gui.SocialBarTablet: void onClick(android.view.View)>
	++ <com.facebook.AppEventsLogger$AppEvent: void a(java.lang.String)>
	++ <flipboard.util.Format: void a(java.lang.RuntimeException)>
	++ <net.hockeyapp.android.UpdateFragment: void onClick(android.view.View)>
	++ <flipboard.gui.FLSearchView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.gui.ProfilePage$1: void onClick(android.view.View)>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <flipboard.io.UsageManager: void a(java.lang.String)>
	++ <com.facebook.widget.LoginButton: void <clinit>()>
	++ <net.hockeyapp.android.utils.PrefsUtil: java.lang.String a(android.content.Context)>
	++ <flipboard.gui.item.CoverSectionItemTablet: void a(flipboard.model.FeedSectionLink,flipboard.service.Section)>
	++ <com.facebook.Session$AuthorizationRequest: void <init>(android.support.v4.app.Fragment)>
	++ <flipboard.activities.FlipboardFragment: void a(android.content.Intent,int)>
	++ <flipboard.activities.FlipboardActivity: void startActivityForResult(android.content.Intent,int)>
	++ <com.facebook.FacebookException: void <init>(java.lang.String)>
	++ <flipboard.gui.personal.TabStripStatic$1: void onClick(android.view.View)>
	++ <flipboard.activities.ReportIssueActivity$4: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.util.Format$Exception: void <init>(java.lang.String,java.lang.Object[])>
	++ <com.facebook.AppEventsLogger$AppEvent: void <init>(java.lang.String,android.os.Bundle)>
	++ <flipboard.model.FeedItem: java.lang.String getIdString()>
	++ <flipboard.io.UsageEvent: float f()>
	++ <flipboard.service.User: flipboard.service.Section d(java.lang.String)>
	++ <flipboard.util.Format: void <init>(java.lang.String,java.lang.Object[])>
	++ <flipboard.activities.SettingsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <net.hockeyapp.android.FeedbackActivity: void onClick(android.view.View)>
	++ <net.hockeyapp.android.FeedbackActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	++ <flipboard.util.Format: java.lang.String a(java.lang.String,java.lang.Object[])>
	++ <flipboard.service.FlipboardManager: void <clinit>()>
	++ <com.facebook.internal.Utility: java.lang.String a(android.content.Context)>
	++ <flipboard.activities.ReportIssueActivity: void sendIssue(android.view.View)>
	++ <flipboard.service.Flap$CreateAccountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.activities.UpdateAccountActivity$5: void onClick(android.view.View)>
	++ <flipboard.service.Flap: flipboard.service.Flap$SearchRequest a(flipboard.service.User,java.lang.String,flipboard.service.Flap$SearchType,flipboard.service.Flap$SearchObserver,java.lang.String,int)>
	++ <com.helpshift.HSReviewFragment$3: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter: int getItemViewType(int)>
	++ <flipboard.gui.section.item.ProfileSummaryItem$2: void onClick(android.view.View)>
	++ <flipboard.activities.ContentDrawerTabletActivity: void m()>
	++ <com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers a(android.content.Context)>
	++ <flipboard.gui.item.CoverSectionItemTablet$3: void onClick(android.view.View)>
	++ <flipboard.activities.ReportIssueActivity$10: void onClick(android.view.View)>
	++ <flipboard.util.Log: void a(flipboard.util.Log$Level,java.lang.String)>
	++ <flipboard.service.Flap$FlapRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.facebook.Session: void a(com.facebook.Session$OpenRequest,com.facebook.internal.SessionAuthorizationType)>
	++ <flipboard.util.Format: void <init>(java.lang.String,java.lang.Object[],byte)>
	++ <flipboard.io.UsageEvent: void e(java.lang.String)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.String,java.lang.Runnable)>
	++ <flipboard.util.Log: void a(java.lang.String,java.lang.Object[])>
	++ <com.helpshift.HSFunnel: void b(java.lang.String)>
	++ <flipboard.service.Section: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
	++ <com.facebook.Session$OpenRequest: com.facebook.Session$OpenRequest b(com.facebook.SessionLoginBehavior)>
	++ <flipboard.model.UserState: void <init>(flipboard.model.UserState)>
	++ <flipboard.util.SocialHelper: void a(flipboard.model.FeedItem,flipboard.service.Section,flipboard.activities.FlipboardActivity,flipboard.model.UsageEventV2$SocialCardNavFrom)>
	++ <flipboard.activities.ContentDrawerActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: java.lang.Object doInBackground(java.lang.Object[])>
	++ <net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <flipboard.activities.ReportIssueActivity: android.widget.EditText i(flipboard.activities.ReportIssueActivity)>
	++ <flipboard.util.Log: void <clinit>()>
	++ <flipboard.service.Section: flipboard.service.User E()>
	++ <flipboard.service.FlipboardManager: flipboard.model.ConfigSetting w()>
	++ <org.apache.http.message.AbstractHttpMessage: void <init>()>
	++ <flipboard.gui.item.CoverSectionItemTablet$1: void onClick(android.view.View)>
	++ <flipboard.gui.section.MagazineConversationThreadDetailFragment$5: void onClick(android.view.View)>
	++ <flipboard.gui.FLToast: void b(flipboard.activities.FlipboardActivity,java.lang.String)>
	++ <com.facebook.AppEventsLogger: void a(java.lang.String,android.os.Bundle)>
	++ <flipboard.activities.ChooseAccountActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.service.User: flipboard.service.Section m(java.lang.String)>
	++ <com.facebook.widget.LoginButton: java.lang.String h(com.facebook.widget.LoginButton)>
	++ <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
	++ <flipboard.gui.section.scrolling.header.ProfileCover$MagazineCarouselTileHolder: void onClick(android.view.View)>
	++ <flipboard.activities.FlipboardActivity: void a(android.content.Intent,int,flipboard.activities.FlipboardActivity$ActivityResultListener)>
	++ <flipboard.gui.FLImageView$6: void onClick(android.view.View)>
	++ <flipboard.service.Flap: void a(flipboard.model.CommentaryResult$CommentType,flipboard.service.User,flipboard.service.Section,flipboard.model.FeedItem,java.lang.String,flipboard.service.ServiceReloginObserver)>
	++ <flipboard.gui.section.SectionFragment: void onSubsectionClicked(android.view.View)>
	++ <flipboard.util.Format$CharBuf: void a(char)>
	++ <flipboard.gui.dialog.FLDialogFragment: void a(android.support.v4.app.FragmentManager,java.lang.String)>
	++ <flipboard.gui.item.InFeedExpandableModuleHead$1: void onClick(android.view.View)>
	++ <com.helpshift.HSReviewFragment$2: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.ReportIssueActivity$11: void onClick(android.view.View)>
	++ <flipboard.gui.section.MagazineConversationThreadDetailFragment: void e(flipboard.gui.section.MagazineConversationThreadDetailFragment)>
	++ <flipboard.gui.section.AttributionServiceInfo$3: void onClick(android.view.View)>
	++ <com.facebook.AppEventsLogger: void <init>(android.content.Context,java.lang.String)>
	++ <com.facebook.internal.Utility: java.lang.reflect.Method a(java.lang.String,java.lang.String,java.lang.Class[])>
	++ <com.facebook.internal.Utility: java.lang.String a(android.content.Context,java.lang.String)>
	++ <flipboard.service.Flap: void <clinit>()>
	++ <flipboard.activities.LoginActivity$9$2$1: void onClick(android.content.DialogInterface,int)>
	++ <com.facebook.AppEventsLogger$AccessTokenAppIdPair: void <init>(com.facebook.Session)>
	++ <com.facebook.internal.Utility: java.lang.String a(java.lang.String,java.lang.String)>
	++ <flipboard.util.Format$CharBuf: void a(java.lang.String)>
	++ <flipboard.util.Format$CharBuf: void a(int)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter: flipboard.activities.SettingsFragment$RowItem a(int)>
	++ <flipboard.service.FlipboardManager: flipboard.service.Flap$FlapRequest createAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,flipboard.util.Observer)>
	++ <flipboard.gui.item.CoverSectionItemTablet$2: void onClick(android.view.View)>
	++ <com.helpshift.HSFunnel: void a(java.lang.String,org.json.JSONObject)>
	++ <flipboard.util.Format$CharBuf: void <init>(flipboard.util.Format,int)>
	++ <com.helpshift.HSFunnel: void a(java.lang.String)>
	++ <flipboard.gui.NoContentView$1: void onClick(android.view.View)>
	++ <flipboard.util.Format$CharBuf: void a(char,java.lang.Object)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: java.util.HashMap b(org.apache.http.client.HttpClient)>
	++ <com.facebook.Session$OpenRequest: void <init>(android.support.v4.app.Fragment)>
	++ <flipboard.activities.ReportIssueActivity: java.io.File j(flipboard.activities.ReportIssueActivity)>
	++ <org.apache.http.client.methods.HttpRequestBase: void <init>()>
	++ <flipboard.gui.toc.TileContainer$2$2: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.SocialCardFragment$1: void onClick(android.view.View)>
	++ <com.facebook.Session$AuthorizationRequest: void <init>(android.app.Activity)>
	++ <flipboard.service.Flap$UpdateAccountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.activities.SectionTabletActivity: void onSubsectionClicked(android.view.View)>
	++ <flipboard.util.JavaUtil: boolean a(java.lang.String)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.FlipboardManager: void b(java.lang.Runnable)>
	++ <flipboard.service.Flap: flipboard.service.Flap$CreateAccountRequest createAccount(flipboard.service.User,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,flipboard.service.Flap$AccountRequestObserver)>
	++ <flipboard.util.Format: void b(java.lang.String,java.lang.Object[])>
	++ <com.facebook.Session: void b(com.facebook.Session$OpenRequest)>
	++ <flipboard.service.Section: void <clinit>()>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,java.lang.String,android.os.Bundle)>
	++ <flipboard.activities.ContentDrawerActivity: void a(flipboard.service.Section,android.os.Bundle)>
	++ <flipboard.util.Format: void a(flipboard.util.Format,java.lang.String,java.lang.Object[])>
	++ <flipboard.util.SocialHelper: void a(flipboard.service.Section,android.content.Context,android.os.Bundle)>
	++ <flipboard.activities.ContentDrawerPhoneActivity: void m()>
	++ <flipboard.gui.personal.TocSubEmptyStateView: void onClick(android.view.View)>
	++ <flipboard.service.Flap: void a(flipboard.model.CommentaryResult$CommentType,flipboard.service.User,java.lang.String,java.lang.String,flipboard.service.ServiceReloginObserver)>
	++ <flipboard.util.JavaUtil: float a(float,float,float)>
	++ <flipboard.gui.section.AttributionServiceInfo$1: void onClick(android.view.View)>
	++ <com.facebook.internal.SessionTracker: void a(com.facebook.Session)>
	++ <flipboard.model.FLObject: void set(java.lang.String,java.lang.Object)>
	++ <flipboard.util.Log: void b(java.lang.String,java.lang.Object[])>
	++ <flipboard.service.FLSearchManager: void a(java.lang.String,flipboard.service.Flap$SearchType,flipboard.service.Flap$SearchObserver,java.lang.String,int)>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,android.os.Bundle)>
	++ <flipboard.gui.toc.TOCPage$SearchBoxOnClickListener: void onClick(android.view.View)>
	++ <flipboard.util.Format: boolean a(int,int)>
	++ <flipboard.activities.VideoAdActivity: void onConfigurationChanged(android.content.res.Configuration)>
	++ <flipboard.util.SocialHelper: void a(flipboard.activities.FlipboardActivity,flipboard.model.ConfigService,flipboard.util.SocialHelper$ServiceLoginObserver)>
	++ <com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers b(android.content.Context)>
	++ <net.hockeyapp.android.utils.Util: java.lang.String a(java.lang.String)>
	++ <flipboard.util.Log: void <init>(java.lang.String,flipboard.util.Log$Level,boolean)>
	++ <flipboard.util.Log: void b(flipboard.util.Log$Level,java.lang.String,java.lang.Object[])>
	++ <flipboard.activities.CreateAccountActivity$9: void onClick(android.view.View)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <flipboard.util.Format$CharBuf: boolean a(java.lang.Throwable,boolean,int)>
	++ <flipboard.activities.DebugLayoutActivity$Adapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.activities.ReportIssueActivity$6: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.FlipboardManager$SearchUserRequest: void <init>(flipboard.service.FlipboardManager)>
	++ <com.facebook.AppEventsLogger$AccessTokenAppIdPair: void <init>(java.lang.String,java.lang.String)>
	++ <com.facebook.AuthorizationClient: void a(com.facebook.AuthorizationClient$AuthorizationRequest)>
	++ <flipboard.service.Section: java.lang.String f()>
	++ <flipboard.io.UsageEvent: void <clinit>()>
	++ <flipboard.activities.CategoryPickerFragment$1: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.gui.section.item.ProfileSummaryItem$1: void onClick(android.view.View)>
Graph Visualizing for this DP...

(10/20) Printing..
+ DP Stmt : $r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
+ DP SootMethod : <com.facebook.internal.ImageResponseCache: java.io.InputStream a(android.content.Context,java.net.HttpURLConnection)>
+ EPs (0) :
+ Taint Methods : 
	++ <com.facebook.internal.ImageResponseCache: java.io.InputStream a(android.content.Context,java.net.HttpURLConnection)>
	++ <com.facebook.internal.ImageDownloader: void a(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context,boolean)>
	++ <com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode a(com.facebook.internal.WorkQueue$WorkNode)>
	++ <com.facebook.internal.ImageDownloader$DownloadImageWorkItem: void run()>
	++ <com.facebook.internal.WorkQueue: void a(com.facebook.internal.WorkQueue$WorkNode)>
	++ <com.facebook.internal.ImageDownloader$DownloadImageWorkItem: void <init>(android.content.Context,com.facebook.internal.ImageDownloader$RequestKey)>
	++ <com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode a(com.facebook.internal.WorkQueue$WorkNode,boolean)>
	++ <com.facebook.internal.ImageDownloader: void a(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context)>
	++ <com.facebook.internal.WorkQueue$WorkNode: void <init>(com.facebook.internal.WorkQueue,java.lang.Runnable)>
	++ <com.facebook.internal.WorkQueue: void a(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode)>
	++ <com.facebook.internal.WorkQueue$1: void run()>
	++ <com.facebook.internal.WorkQueue: com.facebook.internal.WorkQueue$WorkItem a(java.lang.Runnable)>
	++ <com.facebook.internal.WorkQueue$1: void <init>(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode)>
	++ <com.facebook.internal.ImageDownloader: void a(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey,com.facebook.internal.WorkQueue,java.lang.Runnable)>
Graph Visualizing for this DP...

(11/20) Printing..
+ DP Stmt : $r4 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()
+ DP SootMethod : <com.helpshift.util.HSHTML5WebView: boolean b(java.net.URL)>
+ EPs (1) :
	+<com.helpshift.util.HSHTML5WebView$MyWebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)>
+ Taint Methods : 
	++ <com.helpshift.util.HSHTML5WebView: boolean b(java.net.URL)>
	++ <com.helpshift.util.HSHTML5WebView$MyWebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)>
	++ <com.helpshift.util.HSHTML5WebView: boolean a(java.net.URL)>
Graph Visualizing for this DP...

(12/20) Printing..
+ DP Stmt : $r5 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>()
+ DP SootMethod : <net.hockeyapp.android.tasks.DownloadFileTask: java.lang.Boolean a()>
+ EPs (1) :
	+<dummyMainClass: void dummyMainMethod(java.lang.String[])>
+ Taint Methods : 
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void e(java.lang.String)>
	++ <flipboard.model.FLObject: java.util.List getList(java.lang.String)>
	++ <com.fasterxml.jackson.databind.node.IntNode: com.fasterxml.jackson.databind.node.IntNode a(int)>
	++ <com.helpshift.HSRetryService: int onStartCommand(android.content.Intent,int,int)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: void b(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[])>
	++ <com.fasterxml.jackson.databind.deser.SettableAnyProperty: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud$CategoryPickerListAdapter: void <init>(flipboard.gui.firstrun.CategoryPickerCloud,android.content.Context,java.util.List,boolean)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object b(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment a(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.section.SectionFragment: boolean onLongClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findStdJdkCollectionDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment a(int,com.fasterxml.jackson.core.JsonToken)>
	++ <flipboard.activities.ContentDrawerPhoneActivity$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.item.RssDetailView$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.remoteservice.FLFeedItemContentProvider$ContentType: flipboard.remoteservice.FLFeedItemContentProvider$ContentType valueOf(java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer: void e(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.activities.ContentDrawerActivity$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.model.Image: java.lang.String getImage()>
	++ <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object a(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <net.hockeyapp.android.ExceptionHandler: void a(java.lang.String,java.lang.String)>
	++ <flipboard.service.FlipboardManager$31: void a(java.lang.String)>
	++ <com.facebook.AppEventsLogger: com.facebook.AppEventsLogger a(android.content.Context)>
	++ <flipboard.service.Section: void c(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: java.lang.String a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>
	++ <flipboard.gui.IconBar$ToggleImageButton: void onClick(android.view.View)>
	++ <flipboard.model.FLObject: boolean getBoolean(java.lang.String)>
	++ <flipboard.gui.FLEditText: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode a()>
	++ <flipboard.service.Flap$SearchRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.gui.section.SectionFragment: void <clinit>()>
	++ <com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.jsontype.TypeDeserializer d(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.gui.personal.TocGridFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.service.Section: java.util.List k()>
	++ <flipboard.io.UsageEvent: flipboard.model.FLObject a(java.lang.String,java.lang.Number,boolean)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: java.lang.String c(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Constructor b(java.lang.Class,boolean)>
	++ <flipboard.activities.SwitchContentGuideActivity$EditionsAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.service.Flap$LoginRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.activities.UpdateAccountActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,flipboard.service.Flap$JSONResultObserver)>
	++ <flipboard.util.HttpUtil: void <clinit>()>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.type.MapType j(java.lang.Object)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: java.lang.Object C()>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.util.Collection b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)>
	++ <com.fasterxml.jackson.core.Base64Variant: java.lang.String a(byte[],boolean)>
	++ <flipboard.service.SyncJob$6: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: java.lang.Object d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <flipboard.gui.section.ProfileFragmentScrolling: void <init>()>
	++ <flipboard.service.Section: flipboard.model.SidebarGroup d(flipboard.model.FeedItem)>
	++ <flipboard.gui.ProfilePage$4: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.type.MapType m(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object e(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] b(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <flipboard.util.AndroidUtil: void a(android.os.AsyncTask)>
	++ <flipboard.activities.DetailActivity$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.Section: boolean a(boolean,flipboard.util.Callback,boolean,android.os.Bundle)>
	++ <com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>
	++ <flipboard.service.Flap$UserStateRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.gui.item.PageboxPaginatedCarousel: void a(flipboard.gui.item.PageboxPaginatedCarousel,java.lang.String)>
	++ <net.hockeyapp.android.FeedbackActivity$5: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.deser.impl.NullProvider: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void h(java.lang.String)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void b(char[],int,int)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: void <init>(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.activities.YouTubePlayerActivity: void finish()>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)>
	++ <com.fasterxml.jackson.core.util.JsonParserSequence: void <init>(com.fasterxml.jackson.core.JsonParser[])>
	++ <flipboard.service.audio.MediaPlayerService: void onPrepared(android.media.MediaPlayer)>
	++ <flipboard.gui.section.AttributionServiceInfo$4: void onClick(android.view.View)>
	++ <flipboard.gui.section.AttributionSimple$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.util.Log: java.lang.String a(int,java.lang.String)>
	++ <com.helpshift.HSMessagesFragment: void a(java.lang.String)>
	++ <flipboard.util.SocialHelper$18: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.ContentDrawerListItemAdapter$3: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig a(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer a(com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.json.JsonSerializationWrapper$PreserveUnknownElementsDeserializer: void <init>(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap a(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.type.TypeBase: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.node.DecimalNode: com.fasterxml.jackson.databind.node.DecimalNode a(java.math.BigDecimal)>
	++ <com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken c()>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSerializer: void <init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean)>
	++ <flipboard.activities.FirstRunActivity$3: void onClick(android.view.View)>
	++ <flipboard.service.RemoteWatchedFile: byte[] c()>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <flipboard.activities.FeedActivity: void a(flipboard.gui.actionbar.FLActionBarMenu,flipboard.model.FeedItem,flipboard.model.ConfigService,boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: double w(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.introspect.BasicBeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[])>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(java.lang.String)>
	++ <flipboard.io.UsageEvent: void a(flipboard.model.FeedItem)>
	++ <flipboard.gui.FLImageView: void a(java.lang.String,boolean,boolean)>
	++ <com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.JavaType c(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.JsonValueSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean)>
	++ <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.type.ArrayType a(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken c()>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void a(float)>
	++ <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.gui.dialog.FLAlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
	++ <com.fasterxml.jackson.databind.ser.std.StdSerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer: java.lang.String nextToken()>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer,java.text.DateFormat,java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.type.MapType a(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>
	++ <org.askerov.dynamicgrid.DynamicGridView$7: void onScrollStateChanged(android.widget.AbsListView,int)>
	++ <flipboard.service.FlipboardUrlHandler: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void d(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer a(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer b(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.StdSerializer: com.fasterxml.jackson.databind.ser.PropertyFilter a(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.JavaType a(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.activities.ReportIssueActivity$4: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void a(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.service.FlipboardUrlHandler: void <clinit>()>
	++ <flipboard.activities.ContentDrawerTabletActivity: void b(android.content.Intent)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(java.math.BigInteger)>
	++ <flipboard.activities.ProfileActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.widget.FlipboardWidgetManager: flipboard.service.Section a(flipboard.widget.FlipboardWidgetManager)>
	++ <flipboard.service.DialogHandler: void a(flipboard.activities.FlipboardActivity,java.lang.String,java.lang.String,java.lang.String)>
	++ <flipboard.service.User: flipboard.service.Section d(java.lang.String)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Class findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.service.audio.MediaPlayerService: boolean onUnbind(android.content.Intent)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.JavaType,java.lang.String)>
	++ <flipboard.service.User: void a(flipboard.service.Flap$TypedResultObserver)>
	++ <flipboard.gui.flipping.FlipTransitionViews$10: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.core.SerializableString a(java.lang.String)>
	++ <flipboard.activities.GenericDialogFragmentActivity$3: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: void c(flipboard.service.Flap$JSONResultObserver)>
	++ <flipboard.model.ContentDrawerListItemBase: void <init>()>
	++ <flipboard.activities.ReportIssueActivity: void sendIssue(android.view.View)>
	++ <flipboard.service.FlipboardManager$18$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>
	++ <com.fasterxml.jackson.databind.JsonSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.core.json.JsonWriteContext: int a(java.lang.String)>
	++ <flipboard.gui.ContentDrawerView: void a(android.content.res.Resources,flipboard.service.Section,flipboard.gui.ContentDrawerListItemAdapter,java.util.List)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void b(com.fasterxml.jackson.core.JsonParser)>
	++ <com.fasterxml.jackson.core.base.ParserBase: java.lang.Number s()>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BinaryNode a(byte[])>
	++ <com.fasterxml.jackson.databind.PropertyName: void <clinit>()>
	++ <com.fasterxml.jackson.core.util.ByteArrayBuilder: void c(int)>
	++ <flipboard.gui.FLLabelTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
	++ <com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.core.Base64Variant: void a(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder)>
	++ <com.fasterxml.jackson.databind.deser.impl.InnerClassProperty: com.fasterxml.jackson.databind.deser.SettableBeanProperty b(com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.service.User: java.lang.String k(java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.JavaType d(java.lang.Object)>
	++ <flipboard.io.UsageEvent: void c(java.lang.String)>
	++ <com.fasterxml.jackson.core.io.IOContext: void c(byte[])>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>
	++ <com.fasterxml.jackson.databind.ser.std.StdKeySerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: short o(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.math.BigInteger y()>
	++ <com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void a(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.String,java.lang.Runnable)>
	++ <com.fasterxml.jackson.databind.ser.std.SerializableSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(java.lang.String)>
	++ <flipboard.activities.LaunchActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.JavaType c(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: void b(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: void a(com.fasterxml.jackson.databind.jsontype.NamedType[])>
	++ <com.facebook.Session$OpenRequest: com.facebook.Session$OpenRequest b(com.facebook.SessionLoginBehavior)>
	++ <com.helpshift.Helpshift: void a(android.content.Context,java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(boolean)>
	++ <com.fasterxml.jackson.core.base.ParserMinimalBase: void b(int,java.lang.String)>
	++ <com.squareup.otto.Bus: void a(java.lang.Object)>
	++ <flipboard.gui.InlineFlipUIController: void a(boolean)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void <clinit>()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.activities.FirstRunActivity$PhoneFirstRunPagerAdapter$1: void a(java.util.Set,android.view.View)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember)>
	++ <fr.castorflex.android.verticalviewpager.VerticalViewPager: void setScrollState(int)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object _findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <flipboard.util.SocialHelper: void d(flipboard.model.ConfigService,flipboard.model.FeedItem,boolean,flipboard.activities.FlipboardActivity,flipboard.service.Section)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.service.User: flipboard.service.Section a(flipboard.service.Section,int,boolean,boolean,boolean,java.lang.String)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void a(double)>
	++ <com.fasterxml.jackson.core.base.GeneratorBase: void d(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[])>
	++ <com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>
	++ <flipboard.service.FlipboardManager: flipboard.model.ConfigSetting w()>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object y(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: void a(flipboard.service.FlipboardManager,flipboard.activities.FlipboardActivity)>
	++ <flipboard.service.User: flipboard.model.UserState k()>
	++ <com.helpshift.app.ActionBarHelperBase: void d(android.view.MenuItem)>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.facebook.AppEventsLogger: void a(java.lang.String,android.os.Bundle)>
	++ <flipboard.service.Flap$UpdateRequest: boolean a(flipboard.service.Section,java.lang.String,android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.exc.InvalidFormatException: com.fasterxml.jackson.databind.exc.InvalidFormatException a(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>
	++ <flipboard.activities.FlipboardFragment: void <init>()>
	++ <com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: void a(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void a(boolean)>
	++ <com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: boolean a(java.lang.Object)>
	++ <flipboard.io.NetworkManager: void <clinit>()>
	++ <com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <flipboard.gui.flipping.ViewScreenshotCreator: void a(android.graphics.Bitmap,java.io.File)>
	++ <com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig b(com.fasterxml.jackson.databind.ser.Serializers)>
	++ <flipboard.gui.dialog.ShareDialog$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.util.Format$CharBuf: void a(char)>
	++ <com.helpshift.util.AttachmentUtil: java.lang.String a(android.app.Activity,android.content.Intent)>
	++ <com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig a(com.fasterxml.jackson.databind.deser.ValueInstantiators)>
	++ <com.fasterxml.jackson.databind.node.POJONode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.DeserializationConfig: void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.BaseSettings)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken c()>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,boolean)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken T()>
	++ <flipboard.gui.personal.SocialNetworksFragment: void <init>()>
	++ <com.fasterxml.jackson.databind.deser.impl.CreatorCollector$Vanilla: java.lang.String a()>
	++ <com.facebook.internal.Utility: java.lang.String a(android.content.Context,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl: void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void a(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: int a(java.io.InputStream,byte[],int,int,int)>
	++ <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object a(java.lang.Class,boolean)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void b(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: boolean g()>
	++ <flipboard.service.SamsungHelper: void b(android.app.Activity)>
	++ <com.fasterxml.jackson.databind.deser.impl.FailingDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap a(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <flipboard.io.UsageManager$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.FlipboardManager: flipboard.service.Flap$FlapRequest createAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,flipboard.util.Observer)>
	++ <flipboard.gui.toc.DynamicGridLayout$DragManager: void a(boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: void b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>
	++ <flipboard.activities.ServiceListActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.node.LongNode: com.fasterxml.jackson.databind.node.LongNode a(long)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.core.JsonParser: java.lang.String D()>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.type.MapType l(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer d(java.lang.Object)>
	++ <flipboard.util.JavaUtil: boolean a(java.lang.String)>
	++ <flipboard.util.SocialHelper: void b(flipboard.activities.FlipboardActivity,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.service.Flap$StaticFileRequest: void <init>(flipboard.service.Flap,flipboard.service.User,boolean)>
	++ <com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException a(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: void a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] a(java.lang.Object[],int)>
	++ <com.helpshift.HSReviewFragment: void b(com.helpshift.HSReviewFragment,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Object a(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)>
	++ <flipboard.activities.SubsectionActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer: java.lang.String[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.helpshift.app.ActionBarHelperBase$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)>
	++ <com.helpshift.customadapters.MessagesAdapter$2: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult a(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.helpshift.util.HSIcons: void a(android.graphics.drawable.Drawable,int)>
	++ <flipboard.util.SocialHelper: flipboard.gui.InlineFlipUIController a(flipboard.activities.FlipboardActivity,android.view.View,flipboard.service.Section,flipboard.model.FeedItem,flipboard.model.UsageEventV2$FlipItemNavFrom)>
	++ <flipboard.activities.ContentDrawerPhoneActivity: void m()>
	++ <flipboard.io.Download: void a(flipboard.io.Download$Status,flipboard.io.Download$Data)>
	++ <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.model.FLObject: void <init>(java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: java.lang.Object f()>
	++ <flipboard.gui.personal.NotificationsFragment$AccountLoginViewClickHandler$$ViewInjector$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager$29: void a(java.lang.String,byte[],boolean)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.jsontype.NamedType[])>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer b(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>
	++ <flipboard.util.JavaUtil: float a(float,float,float)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser c(com.fasterxml.jackson.core.JsonParser)>
	++ <com.facebook.internal.SessionTracker: void a(com.facebook.Session)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void a(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase f()>
	++ <com.fasterxml.jackson.databind.type.CollectionType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)>
	++ <com.helpshift.HSStorage: org.json.JSONArray b(java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer: void e(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.gui.FLImageView$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.DeserializationConfig: void a(com.fasterxml.jackson.core.JsonParser)>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.JavaType d(java.lang.Class)>
	++ <flipboard.activities.DetailActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase d()>
	++ <com.helpshift.app.ActionBarHelperBase: void a(boolean)>
	++ <flipboard.activities.GenericFragmentActivity: android.content.Intent a(android.content.Context,java.lang.String,int)>
	++ <flipboard.activities.CategoryPickerFragment: flipboard.activities.CategoryPickerFragment$CategoryPickerListener g(flipboard.activities.CategoryPickerFragment)>
	++ <flipboard.activities.DebugLayoutActivity$Adapter: void <init>(flipboard.activities.DebugLayoutActivity,byte)>
	++ <com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(com.fasterxml.jackson.databind.ser.ContainerSerializer)>
	++ <flipboard.activities.ChooseAccountActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: java.lang.Object a(java.lang.Object,int)>
	++ <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void a(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: boolean a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Class findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.service.FlipboardManager: flipboard.service.RemoteWatchedFile a(java.lang.String,flipboard.service.RemoteWatchedFile$Observer)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: java.lang.Object z(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.base.ParserMinimalBase: int g()>
	++ <com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.gui.section.scrolling.SectionLinkItemView$1: void onClick(android.view.View)>
	++ <flipboard.io.BitmapManager$DownloadHandle: void <init>(flipboard.io.BitmapManager,java.lang.String,flipboard.io.Download,boolean)>
	++ <flipboard.activities.CreateAccountActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.activities.JsonExplorer: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.helpshift.HSMessagesFragment: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>
	++ <flipboard.activities.FlipboardActivity: void b(flipboard.activities.FlipboardActivity$OnBackPressedListener)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer c(java.lang.Object)>
	++ <com.facebook.Session$OpenRequest: com.facebook.Session$OpenRequest b(com.facebook.SessionDefaultAudience)>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: void <init>(java.lang.Class)>
	++ <net.hockeyapp.android.UpdateFragment: void a(net.hockeyapp.android.UpdateFragment,android.app.Activity)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: void a(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.facebook.Session: void a(com.facebook.SessionState,com.facebook.SessionState,java.lang.Exception)>
	++ <com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.core.base.ParserBase: long x()>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.helpshift.ScreenshotPreviewActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: java.lang.String a(java.lang.String)>
	++ <flipboard.service.audio.MediaPlayerService: void a(boolean)>
	++ <flipboard.model.FeedItem: flipboard.model.FeedItem getPrimaryItem()>
	++ <com.fasterxml.jackson.databind.SerializerProvider: void b(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.model.FeedItem: void likeUnlike(boolean,flipboard.service.Section,java.lang.ref.WeakReference)>
	++ <com.helpshift.customadapters.MessagesAdapter$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.SerializerFactory a(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>
	++ <flipboard.service.audio.FLAudioManager: void a(boolean)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer b(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.service.ContentDrawerHandler: void <clinit>()>
	++ <flipboard.gui.FLImageView: void a(flipboard.gui.FLImageView,java.lang.String,boolean,boolean)>
	++ <com.fasterxml.jackson.databind.jsontype.TypeSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase b(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object z(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <flipboard.util.Format: void <clinit>()>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.math.BigDecimal B()>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(java.lang.String,boolean)>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.ser.SerializerFactory a(com.fasterxml.jackson.databind.ser.Serializers)>
	++ <flipboard.service.Flap$FollowRequest: void <init>(flipboard.service.Flap,flipboard.service.User,java.util.List,java.lang.String)>
	++ <com.fasterxml.jackson.annotation.JsonFormat$Value: void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.introspect.BasicBeanDescription: com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.deser.ValueInstantiator a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)>
	++ <com.fasterxml.jackson.databind.ser.std.DateSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: void i(java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: byte[] a(com.fasterxml.jackson.core.Base64Variant)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)>
	++ <com.helpshift.HSSectionDb: void <init>(android.content.Context)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException c(java.lang.String)>
	++ <flipboard.activities.SettingsFragment$RowItem: void <init>(java.lang.String)>
	++ <com.facebook.Session: void a(com.facebook.Session$OpenRequest)>
	++ <flipboard.util.Log: flipboard.util.Log a(java.lang.String)>
	++ <com.squareup.otto.Bus: void a(java.lang.Object,com.squareup.otto.EventHandler)>
	++ <com.squareup.otto.EventHandler: java.lang.String toString()>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID a(byte[],com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.io.NetworkManager$1: void onReceive(android.content.Context,android.content.Intent)>
	++ <flipboard.gui.section.ProfileFragmentScrolling$SectionsAndAccountObserver: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <net.hockeyapp.android.UpdateManager: void a(android.app.Activity,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.SettableBeanProperty: com.fasterxml.jackson.databind.JavaType a()>
	++ <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser: short[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.cfg.BaseSettings a(com.fasterxml.jackson.databind.PropertyNamingStrategy)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Byte m(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer,java.text.DateFormat,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer b(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.JavaType a(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>
	++ <flipboard.activities.WidgetConfigActivity$1: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.node.ArrayNode b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>
	++ <flipboard.activities.GenericDialogFragmentActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.service.FlipboardManager: void d(flipboard.service.User)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException a(java.lang.String,java.lang.Class,java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer,java.text.DateFormat,java.lang.String)>
	++ <com.fasterxml.jackson.core.JsonGenerator: void a(byte[])>
	++ <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase d()>
	++ <flipboard.io.NetworkManager: void a(boolean,boolean,boolean)>
	++ <flipboard.gui.FLSearchView: void b(flipboard.gui.FLSearchView$Input,java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.KeyDeserializer b(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: int p(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.JavaType c(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType c(java.lang.Class)>
	++ <flipboard.util.HelpshiftHelper$GCMReceiver: void onReceive(android.content.Context,android.content.Intent)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer a(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.SettableAnyProperty: void a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>
	++ <flipboard.gui.FLSearchView: void h()>
	++ <com.fasterxml.jackson.databind.SerializerProvider: void a(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <net.hockeyapp.android.UpdateFragment: void a(android.app.Activity)>
	++ <com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl: void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.deser.DeserializerFactory)>
	++ <com.fasterxml.jackson.databind.ser.std.CalendarSerializer: long b(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer b(java.lang.Object)>
	++ <flipboard.activities.FirstRunActivity: void a(android.content.Context,java.lang.Runnable)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(com.fasterxml.jackson.core.JsonParser)>
	++ <flipboard.service.User: void a(flipboard.service.User$Message)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.JsonGenerator: void d(com.fasterxml.jackson.core.SerializableString)>
	++ <flipboard.model.FLObject: boolean getBoolean(java.lang.String,boolean)>
	++ <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.introspect.BasicBeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>
	++ <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.helpshift.app.ActionBarHelperNative: android.content.Context c()>
	++ <flipboard.activities.CreateAccountActivity$2: void onClick(android.view.View)>
	++ <flipboard.sstream.SstreamBroadcastReceiver: void <clinit>()>
	++ <com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.service.FlipboardManager$11$1: java.lang.String a()>
	++ <com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.JsonStreamContext l()>
	++ <flipboard.gui.item.CoverSectionItemTablet: void a(boolean)>
	++ <flipboard.gui.FLImageView: void setBitmap(int)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.notifications.FLNotification: void <clinit>()>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Class _classIfExplicit(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.node.BinaryNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.gui.section.SectionPage$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.LoginActivity: void a(flipboard.activities.LoginActivity,flipboard.gui.dialog.FLProgressDialogFragment)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.service.Section: void F()>
	++ <flipboard.activities.ServiceSettingsActivity: java.lang.String a(flipboard.activities.ServiceSettingsActivity,java.lang.Class,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>
	++ <flipboard.service.User: boolean b(flipboard.service.Section,boolean,java.lang.String)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void b(com.fasterxml.jackson.core.SerializableString)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void d(com.fasterxml.jackson.core.SerializableString)>
	++ <flipboard.io.Download: void c()>
	++ <flipboard.activities.FlipboardFragment: void a(android.content.Intent,int)>
	++ <flipboard.io.NetworkManager: void c(java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class a(java.lang.String)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: int a(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty: void a(java.lang.Object,java.lang.Object)>
	++ <flipboard.model.ConfigFolder: void <init>()>
	++ <flipboard.activities.DetailActivity: java.lang.String l()>
	++ <flipboard.util.Observable$Proxy: java.lang.Object D()>
	++ <com.fasterxml.jackson.databind.ObjectReader: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,java.lang.Object)>
	++ <flipboard.service.FlipboardManager: void a(flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.gui.IconBar$ToggleImageButton: void setSelected(boolean)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: void c(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: int a(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)>
	++ <flipboard.activities.GenericFragmentActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.ser.std.EnumSerializer a(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.annotation.JsonFormat$Value)>
	++ <com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.BeanDescription c(java.lang.Class)>
	++ <com.helpshift.customadapters.MessagesAdapter$4: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void c(com.fasterxml.jackson.core.SerializableString)>
	++ <flipboard.service.FlipboardManager: flipboard.util.Observable$Proxy c(flipboard.service.FlipboardManager)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: void a(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
	++ <com.helpshift.HSMessagesFragment: void a(com.helpshift.HSMessagesFragment,java.lang.Boolean)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.HashSet)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase a(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>
	++ <flipboard.gui.FLExpandableLayout$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.util.JsonParserSequence a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void c(java.lang.Object)>
	++ <flipboard.activities.ChooseAccountActivity$ChooseAccountViewFlipper: void a(android.view.View,flipboard.activities.ChooseAccountActivity$Adapter)>
	++ <flipboard.activities.CreateMagazineFragment$$ViewInjector$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.util.EnumResolver: com.fasterxml.jackson.databind.util.EnumResolver a(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector)>
	++ <flipboard.service.Flap$CreateAccountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.gui.FLSearchView: void f()>
	++ <flipboard.activities.UpdateAccountActivity$5: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)>
	++ <com.fasterxml.jackson.databind.ser.AnyGetterWriter: void a(com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.activities.SearchTabletActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <flipboard.service.FlipboardManager: void b(flipboard.service.FlipboardManager)>
	++ <flipboard.sstream.SstreamBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
	++ <flipboard.activities.SettingsFragment: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.impl.InnerClassProperty: void a(java.lang.Object,java.lang.Object)>
	++ <flipboard.service.FlipboardManager$24: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.core.io.SerializedString: int a(byte[],int)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Class findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: java.util.Collection b_(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.widget.FlipboardWidgetManager$AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
	++ <flipboard.gui.toc.TileContainer$2: void onClick(android.view.View)>
	++ <com.facebook.Session: void a(com.facebook.Session$OpenRequest,com.facebook.internal.SessionAuthorizationType)>
	++ <com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object b()>
	++ <flipboard.service.Flap: void a(flipboard.service.User,java.util.List,java.lang.String,flipboard.service.Flap$JSONResultObserver)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String D()>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String n()>
	++ <com.fasterxml.jackson.databind.node.ArrayNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>
	++ <flipboard.service.Flap: void a(boolean,flipboard.service.Flap$TypedResultObserver)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.io.Download: void a(flipboard.io.Download$Observer)>
	++ <com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer: java.lang.String a()>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer c(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>
	++ <com.fasterxml.jackson.core.base.ParserMinimalBase: void a(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)>
	++ <flipboard.gui.section.MagazineGridFragment: flipboard.gui.section.MagazineGridFragment a(java.lang.String)>
	++ <flipboard.service.Flap$ConvertTokenRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.service.FlipboardManager: void <init>(android.content.Context)>
	++ <flipboard.service.RemoteWatchedFile: void d(boolean)>
	++ <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class a(java.util.EnumMap)>
	++ <flipboard.util.SocialHelper$17: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper a(com.fasterxml.jackson.databind.Module)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty: java.lang.Object b(java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void a(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.impl.InnerClassProperty: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ObjectReader: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)>
	++ <flipboard.activities.ReportIssueActivity$2: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.ser.std.DateSerializer: void <init>(java.lang.Boolean,java.text.DateFormat)>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver a(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: void a(java.lang.String[])>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,boolean)>
	++ <com.fasterxml.jackson.databind.deser.impl.InnerClassProperty: java.lang.Object b(java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.FLStaticTextView: void setText(java.lang.CharSequence)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.ChooseAvatarActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.activities.SocialCardFragment: void onClick(android.view.View)>
	++ <flipboard.gui.section.MagazineConversationThreadDetailFragment$5: void onClick(android.view.View)>
	++ <flipboard.notifications.FLNotification: void a(android.content.Context,int)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)>
	++ <com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer d(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase a(java.util.HashSet)>
	++ <flipboard.activities.FlipboardActivity: void a(android.content.Intent,int,flipboard.activities.FlipboardActivity$ActivityResultListener)>
	++ <flipboard.activities.SharePromoteActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.Number s()>
	++ <flipboard.util.SocialHelper: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void c(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer c(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.core.JsonGenerator: void a(short)>
	++ <com.fasterxml.jackson.databind.node.ValueNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)>
	++ <flipboard.service.Flap: void <init>(android.content.Context)>
	++ <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void a(com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.helpshift.HSMessagesFragment: java.lang.String q(com.helpshift.HSMessagesFragment)>
	++ <com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.SimpleType g(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer c(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.introspect.ObjectIdInfo: void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,java.lang.Class)>
	++ <flipboard.service.User: boolean a(flipboard.model.FeedItem,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: void a(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.facebook.AppEventsLogger$AccessTokenAppIdPair: void <init>(com.facebook.Session)>
	++ <com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer: void a(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: void <init>(com.fasterxml.jackson.databind.JavaType,boolean)>
	++ <flipboard.service.Section: flipboard.model.FeedItem a(flipboard.model.FeedItem,java.lang.String)>
	++ <flipboard.activities.ContentDrawerTabletActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <flipboard.gui.toc.DynamicGridLayout$DragManager$3: void a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer a(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>
	++ <fr.castorflex.android.verticalviewpager.VerticalViewPager: void a(int,float,int)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void c(java.lang.String)>
	++ <flipboard.model.FeedItem: java.lang.String getActivityId()>
	++ <flipboard.activities.BriefingProfileShim: void <init>()>
	++ <flipboard.service.Flap$SectionListRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.util.Format$CharBuf: void <init>(flipboard.util.Format,int)>
	++ <com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer: java.lang.String[] d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase a(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <flipboard.activities.LoginActivity$13: void <init>(flipboard.activities.LoginActivity,flipboard.gui.dialog.FLProgressDialogFragment)>
	++ <com.fasterxml.jackson.databind.SerializationConfig: void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.cfg.BaseSettings)>
	++ <com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: boolean a(java.lang.Object)>
	++ <flipboard.gui.NoContentView$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class,com.fasterxml.jackson.annotation.JsonTypeInfo$As)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String n()>
	++ <flipboard.gui.dialog.FLAlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer: void f(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void b(com.fasterxml.jackson.databind.JsonSerializer)>
	++ <net.hockeyapp.android.UpdateActivity: android.app.Dialog onCreateDialog(int)>
	++ <com.fasterxml.jackson.databind.node.LongNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void L()>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter: void <init>(flipboard.activities.SettingsFragment,byte)>
	++ <com.fasterxml.jackson.databind.module.SimpleModule: com.fasterxml.jackson.databind.module.SimpleModule a(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean k(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.AudioPlayerActivity: void g_()>
	++ <flipboard.service.audio.MediaPlayerService$MusicIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>
	++ <com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig a(com.fasterxml.jackson.databind.cfg.BaseSettings)>
	++ <com.fasterxml.jackson.databind.type.MapType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BooleanNode a(boolean)>
	++ <flipboard.model.FLObject: java.lang.String getString(java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.core.util.DefaultIndenter: void a(com.fasterxml.jackson.core.JsonGenerator,int)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.ObjectMapper)>
	++ <flipboard.service.Section: void <clinit>()>
	++ <flipboard.activities.ContentDrawerActivity: void a(flipboard.service.Section,android.os.Bundle)>
	++ <flipboard.service.FlCrashListener: java.lang.String b()>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.util.Date b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Integer q(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: com.fasterxml.jackson.databind.ser.ContainerSerializer a(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer,java.text.DateFormat,java.lang.String)>
	++ <flipboard.gui.actionbar.FLActionBarMenuItem: android.view.View getActionView()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.model.FeedSectionLink: void setImage(java.lang.String)>
	++ <flipboard.service.User: flipboard.service.Section a(flipboard.service.Section,boolean,boolean,java.lang.String)>
	++ <com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext b(int,int)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.ObjectCodec)>
	++ <flipboard.io.DownloadManager: void <clinit>()>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.databind.util.LRUMap: java.lang.Object a(java.lang.Object)>
	++ <flipboard.util.Format: boolean a(int,int)>
	++ <com.squareup.otto.EventProducer: java.lang.Object a()>
	++ <com.helpshift.HSMessagesFragment: void a(com.helpshift.HSMessagesFragment,android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <flipboard.activities.VideoAdActivity: void onConfigurationChanged(android.content.res.Configuration)>
	++ <flipboard.service.Section: boolean d(boolean)>
	++ <flipboard.service.ContentDrawerHandler$3: void a(java.lang.String,byte[],boolean)>
	++ <flipboard.service.Account: java.lang.String getService()>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: long x()>
	++ <com.fasterxml.jackson.databind.node.ObjectNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: boolean a(java.lang.Object)>
	++ <flipboard.gui.discovery.SectionSearchView$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.util.Collection b_(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.DebugLayoutActivity$Adapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.activities.ReadLaterActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult a(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.activities.ReportIssueActivity$6: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.ContentDrawerPhoneActivity: boolean j_()>
	++ <com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean b(java.lang.Class,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>
	++ <com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.io.BitmapManager: void a(int,boolean)>
	++ <com.fasterxml.jackson.databind.util.ClassUtil: boolean e(java.lang.Class)>
	++ <flipboard.gui.FLStaticTextView: void <clinit>()>
	++ <com.helpshift.HSMessagesFragment$9: void onClick(android.view.View)>
	++ <flipboard.gui.FLLabelTextView: void <init>(android.content.Context)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: void c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType c()>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.personal.TocDrawerListFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer a(com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.gui.section.UserListFragment: java.lang.String a(flipboard.service.Flap$FollowListType,int)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask: void <init>(java.lang.ref.WeakReference,java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.JsonStreamContext: void a(java.lang.Object)>
	++ <flipboard.io.DownloadManager$1$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.Section: boolean c(boolean)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType a(java.lang.Class)>
	++ <flipboard.service.HintManager: void a(flipboard.model.ConfigHints)>
	++ <flipboard.model.UsageEventV2: void <init>(flipboard.model.UsageEventV2$EventAction,flipboard.model.UsageEventV2$EventCategory,flipboard.model.UsageEventV2$ProductType)>
	++ <fr.castorflex.android.verticalviewpager.VerticalViewPager: boolean d(int)>
	++ <fr.castorflex.android.verticalviewpager.VerticalViewPager: void a(int,boolean,boolean,int)>
	++ <com.fasterxml.jackson.core.base.ParserBase: double A()>
	++ <com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void d(com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.ser.AnyGetterWriter: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String h()>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer b(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>
	++ <com.fasterxml.jackson.databind.node.BinaryNode: void <clinit>()>
	++ <com.fasterxml.jackson.databind.util.ClassUtil: java.util.List a(java.lang.Class,java.lang.Class)>
	++ <com.helpshift.HSFaqDb: void <init>(android.content.Context)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: void a(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.impl.FailingSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.util.ActivityUtil: void a(android.content.Context,java.lang.String,flipboard.model.UsageEventV2$FollowFrom)>
	++ <com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD: java.lang.Object b(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.section.MagazineConversationThreadsFragment$1: void onScroll(android.widget.AbsListView,int,int,int)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.service.FlipboardManager$28: void a(java.lang.String,byte[],boolean)>
	++ <flipboard.service.FlipboardManager$30: void a(java.lang.String)>
	++ <flipboard.gui.section.SectionFragmentScrolling: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.helpshift.HSSection: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.activities.AudioPlayerActivity: void finish()>
	++ <flipboard.activities.DetailActivity: void startActivity(android.content.Intent)>
	++ <com.fasterxml.jackson.core.Base64Variant: byte[] a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment a(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void a(long)>
	++ <flipboard.util.JavaUtil: java.lang.String d(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void d(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.helpshift.Helpshift: void a(android.content.Context,android.content.Intent)>
	++ <com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int a(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)>
	++ <flipboard.util.SocialHelper: void a(flipboard.model.UsageEventV2$EventAction,flipboard.service.Section,flipboard.model.FeedItem,java.lang.String)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException a(com.fasterxml.jackson.databind.JavaType,java.lang.String)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.String,boolean,flipboard.service.DatabaseHandler)>
	++ <com.facebook.widget.LoginButton$LoginClickListener: void onClick(android.view.View)>
	++ <com.helpshift.HSStorage: org.json.JSONObject i(java.lang.String)>
	++ <net.hockeyapp.android.Constants: void a(android.content.Context)>
	++ <flipboard.gui.section.AttributionServiceInfo$2: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager: void b(flipboard.service.User)>
	++ <flipboard.gui.ContentDrawerView: void b()>
	++ <flipboard.gui.personal.UserProfile$1: void onClick(android.view.View)>
	++ <flipboard.gui.item.ImageDetailView: void a(boolean)>
	++ <com.fasterxml.jackson.core.JsonGenerator: boolean d()>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase b(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.JavaType a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.IteratorSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <flipboard.activities.CacheConfigActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.activities.LoginActivity$9: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.FLImageView: void setImage(java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void b(java.lang.String)>
	++ <com.helpshift.HSSectionDataSource: void <init>(android.content.Context)>
	++ <flipboard.service.ContentDrawerHandler: flipboard.util.Observable$Proxy c(flipboard.service.ContentDrawerHandler)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: void <init>(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator: java.lang.String a()>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular: void a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.util.Format: void b(java.lang.RuntimeException)>
	++ <flipboard.gui.FLBitmapView: void setFade(boolean)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.JavaType c(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean b(java.lang.String)>
	++ <com.helpshift.util.HSIcons: void a(android.content.Context,android.graphics.drawable.Drawable)>
	++ <flipboard.gui.section.SectionFragment: flipboard.gui.flipping.FlipTransitionViews y()>
	++ <com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.model.FeedItem: boolean isLiked()>
	++ <net.hockeyapp.android.utils.VersionCache: void a(android.content.Context,java.lang.String)>
	++ <flipboard.activities.LoginActivity$12$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.DebugLayoutActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.std.IterableSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.IterableSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.io.BitmapManager: flipboard.io.BitmapManager$Handle a(flipboard.io.Download,boolean)>
	++ <flipboard.service.audio.MediaPlayerService: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.UpdateAccountActivity$5$1: void onCancel(android.content.DialogInterface)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer a(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,long)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.ser.Serializers)>
	++ <com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer c(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.gui.ContentDrawerListItemAdapter: void a(java.util.List)>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void a(short)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Boolean l(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <net.hockeyapp.android.UpdateFragment$1: void a(java.lang.Boolean)>
	++ <com.squareup.otto.HandlerFinder$1: java.util.Map a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer b(com.fasterxml.jackson.databind.JavaType)>
	++ <com.facebook.FacebookException: void <init>(java.lang.String)>
	++ <flipboard.gui.section.AttributionServiceInfo$5: void onClick(android.view.View)>
	++ <flipboard.widget.FlipboardWidgetManager$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.personal.TabStripStatic$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: void <init>(java.lang.Class,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>
	++ <com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.gui.FLImageView: void setAllowPreloadOnUIThread(boolean)>
	++ <com.facebook.AppEventsLogger$AppEvent: void <init>(java.lang.String,android.os.Bundle)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: java.lang.String n()>
	++ <flipboard.model.FeedItem: java.lang.String getIdString()>
	++ <flipboard.activities.FlipboardActivity: void a(flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.activities.ContentDrawerTabletActivity$CategoriesAdapter$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.FlipboardActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: void b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.type.MapLikeType i(java.lang.Object)>
	++ <flipboard.util.SocialHelper$5: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.ContentDrawerView: void setItems(java.util.List)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase a(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase a(java.util.HashSet)>
	++ <flipboard.service.Flap$ReadRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.util.Format: java.lang.String a(java.lang.String,java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.service.FlipboardManager: void <clinit>()>
	++ <flipboard.gui.item.CoverSectionItemTablet$6: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.ser.std.DateSerializer: long a(java.util.Date)>
	++ <flipboard.util.HttpUtil: java.lang.String a(java.lang.String)>
	++ <flipboard.service.ContentDrawerHandler$4: void a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException a(java.lang.Class,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean c(java.lang.String)>
	++ <flipboard.gui.grid.ContentDrawerDragDropGridAdapter$1: boolean onLongClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: void a(com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] a(com.fasterxml.jackson.core.Base64Variant)>
	++ <flipboard.service.Flap$LikeUnlikeRequest: void <init>(flipboard.service.Flap,flipboard.service.User,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.gui.section.item.ProfileSummaryItem$2: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer: com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer a(java.text.DateFormat,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Number c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.ser.SerializerFactory a(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)>
	++ <flipboard.gui.section.SectionFragment$26: java.lang.String a()>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void d(com.fasterxml.jackson.core.SerializableString)>
	++ <flipboard.gui.personal.NotificationsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.gcm.FlipboardGCMIntentService: void a(android.content.Context,int)>
	++ <flipboard.util.Observable: void <init>()>
	++ <flipboard.service.Account: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer: java.lang.String b()>
	++ <flipboard.notifications.NotificationExpirationReciever: void onReceive(android.content.Context,android.content.Intent)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.service.User: void a(flipboard.service.Section)>
	++ <flipboard.util.Format: void <init>(java.lang.String,java.lang.Object[],byte)>
	++ <flipboard.model.ConfigService: java.lang.String displayName()>
	++ <flipboard.io.UsageEvent: void e(java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer: void <init>(java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.TypeParser: java.lang.Class a(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType)>
	++ <flipboard.service.Section: boolean i()>
	++ <com.fasterxml.jackson.databind.AnnotationIntrospector: boolean _hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode a(int)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Class _classIfExplicit(java.lang.Class,java.lang.Class)>
	++ <flipboard.gui.section.SectionFragment$9: java.lang.String a()>
	++ <flipboard.json.JsonSerializable: java.lang.String toString()>
	++ <flipboard.json.JsonSerializationWrapper: java.lang.Object a(java.io.InputStream,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void a(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>
	++ <flipboard.service.User: boolean b(flipboard.service.Section,boolean,boolean,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.helpshift.app.ActionBarActivity: void onPostCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext b(com.fasterxml.jackson.core.json.DupDetector)>
	++ <flipboard.activities.JsonExplorer: void b(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ObjectReader: java.lang.Object a(com.fasterxml.jackson.databind.deser.DataFormatReaders$Match,boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Character c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.activities.AboutActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void a(java.math.BigInteger)>
	++ <com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator a(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>
	++ <flipboard.activities.SwitchContentGuideActivity$1: void a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Class findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.core.json.JsonReadContext: void a(java.lang.String)>
	++ <flipboard.widget.FlipboardWidgetManager$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.ContentDrawerTabletActivity$CategoriesAdapter$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.flipping.FlipTransitionViews: boolean onScaleBegin(android.view.ScaleGestureDetector)>
	++ <com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext a(int,int)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,boolean)>
	++ <com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl: void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)>
	++ <flipboard.activities.ContentDrawerPhoneActivity$2: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Float t(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object b(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.base.ParserMinimalBase: java.lang.String a(java.lang.String)>
	++ <com.helpshift.HSApiData: void b(java.lang.String,java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey)>
	++ <flipboard.io.DownloadManager$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: long s(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void c(com.fasterxml.jackson.core.SerializableString)>
	++ <flipboard.activities.ContentDrawerActivity: void i()>
	++ <com.helpshift.app.ActionBarHelperBase: void a(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.type.TypeParser: com.fasterxml.jackson.databind.JavaType a(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer)>
	++ <com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object g()>
	++ <com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType)>
	++ <com.fasterxml.jackson.databind.type.TypeParser: java.lang.IllegalArgumentException a(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: com.fasterxml.jackson.databind.JsonSerializer b(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.ser.std.DateSerializer: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase a(java.lang.Boolean,java.text.DateFormat)>
	++ <flipboard.gui.FLImageView$6: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.HashMap,java.util.HashMap)>
	++ <flipboard.activities.AudioPlayerActivity: void F()>
	++ <com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.facebook.Session: void a(java.lang.String)>
	++ <flipboard.gui.section.ProfileFragmentScrolling$AccountLoginViewClickHandler$$ViewInjector$2: void onClick(android.view.View)>
	++ <com.helpshift.customadapters.MessagesAdapter$7: void onClick(android.view.View)>
	++ <flipboard.activities.SettingsFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.Base64Variant: void a(char,int,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.gui.section.SectionPage: void a(flipboard.service.audio.FLAudioManager$AudioState,flipboard.model.FeedItem)>
	++ <flipboard.widget.FlipboardWidget: void onReceive(android.content.Context,android.content.Intent)>
	++ <flipboard.activities.FeedActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(double)>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.JavaType a(java.lang.Object)>
	++ <flipboard.activities.SearchTabletActivity: void b(android.content.Intent)>
	++ <com.fasterxml.jackson.databind.ObjectReader: com.fasterxml.jackson.core.JsonToken a(com.fasterxml.jackson.core.JsonParser)>
	++ <flipboard.util.AndroidUtil: void a(android.view.View,int)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer a(com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.activities.LoginActivity$9$2$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.model.FeedItem: java.lang.String getSocialId()>
	++ <flipboard.service.FlipboardManager: flipboard.service.Flap$FlapRequest a(java.lang.String,java.lang.String,boolean,flipboard.util.Observer)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType a(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>
	++ <com.fasterxml.jackson.core.util.JsonParserSequence: com.fasterxml.jackson.core.JsonToken c()>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean a(java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Value,boolean)>
	++ <flipboard.gui.item.AudioItemTablet$1: void onClick(android.view.View)>
	++ <flipboard.util.Format$CharBuf: void a(int)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <flipboard.gui.item.CoverSectionItemTablet$7: void onClick(android.view.View)>
	++ <flipboard.service.audio.FLAudioManager: void c(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer a(java.text.DateFormat,java.lang.String)>
	++ <flipboard.service.User$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class h(java.lang.Class)>
	++ <com.helpshift.HSStorage: void a(org.json.JSONObject)>
	++ <com.fasterxml.jackson.databind.ObjectReader: void a(com.fasterxml.jackson.databind.deser.DataFormatReaders)>
	++ <flipboard.io.Download: void b(flipboard.io.Download$Observer)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer b(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.helpshift.customadapters.MessagesAdapter$3: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.HierarchicType a(com.fasterxml.jackson.databind.type.HierarchicType,java.lang.Class)>
	++ <flipboard.model.UserService: java.lang.String getProfileImage()>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.WritableObjectId: java.lang.Object a(java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void b(java.lang.String)>
	++ <flipboard.activities.ReportIssueActivity: java.io.File j(flipboard.activities.ReportIssueActivity)>
	++ <flipboard.service.FlipboardManager$12: void a(java.lang.Object)>
	++ <flipboard.activities.FirstRunActivity$AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
	++ <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: boolean a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)>
	++ <flipboard.service.User: void y()>
	++ <com.fasterxml.jackson.databind.ser.std.StdSerializer: java.lang.Class a()>
	++ <flipboard.activities.SwitchContentGuideActivity: void b(boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase a(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>
	++ <flipboard.util.Format: void a(flipboard.util.Format,java.lang.String,java.lang.Object[])>
	++ <com.helpshift.util.HSActivityUtil: java.lang.Boolean a(android.app.Activity)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)>
	++ <com.fasterxml.jackson.core.base.ParserBase: java.lang.IllegalArgumentException a(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)>
	++ <flipboard.service.Flap$UnreadCountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.fasterxml.jackson.databind.DatabindContext: com.fasterxml.jackson.annotation.ObjectIdGenerator a(com.fasterxml.jackson.databind.introspect.ObjectIdInfo)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.JsonSerializer: void <init>()>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void c(int)>
	++ <flipboard.gui.item.CoverSectionItemTablet$9: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.deser.SettableBeanProperty a(java.lang.String)>
	++ <com.fasterxml.jackson.core.JsonGenerator: void f(java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(com.fasterxml.jackson.core.JsonParser)>
	++ <flipboard.gui.ContentDrawerView$5: void onClick(android.view.View)>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.std.CalendarSerializer: void <init>(java.lang.Boolean,java.text.DateFormat)>
	++ <com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: com.fasterxml.jackson.databind.ser.PropertyFilter a(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)>
	++ <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void <init>(com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: boolean a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)>
	++ <com.fasterxml.jackson.core.JsonGenerator: void c(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JavaType a(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken T()>
	++ <flipboard.gui.section.MagazineConversationThreadDetailFragment$1: void onScroll(android.widget.AbsListView,int,int,int)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer: void c(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: void a(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.io.UsageEvent: void <clinit>()>
	++ <flipboard.gui.FLStaticTextView: int a(java.lang.CharSequence,int,char[],int,boolean)>
	++ <com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty: java.lang.Object b(java.lang.Object,java.lang.Object)>
	++ <flipboard.io.BitmapManager: void <clinit>()>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void c(char[],int,int)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void a(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: java.lang.String a(java.lang.Object,java.lang.Class)>
	++ <com.helpshift.HSFaqs: void onCreate(android.os.Bundle)>
	++ <flipboard.model.FeedItem: boolean isAudio()>
	++ <flipboard.gui.personal.NotificationsFragment: void b(android.app.Activity)>
	++ <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase a(java.lang.String[])>
	++ <com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer b(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.app.FlipboardApplication: void attachBaseContext(android.content.Context)>
	++ <com.fasterxml.jackson.databind.ObjectReader: void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.InjectableValues)>
	++ <flipboard.widget.FlipboardWidgetManager: void a(android.content.Intent,java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(byte)>
	++ <flipboard.activities.FlipboardActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void a(com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.FacebookAuthenticateFragment$4: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <flipboard.gui.personal.SocialNetworksFragment: void a(java.lang.String,byte[],boolean)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void e(java.lang.Object)>
	++ <fr.castorflex.android.verticalviewpager.VerticalViewPager: void a(int,boolean,boolean)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator: com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.type.ArrayType: void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object,boolean)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer d(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.SerializationConfig: boolean c(com.fasterxml.jackson.databind.SerializationFeature)>
	++ <com.helpshift.app.ActionBarHelperBase: android.content.Context c()>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask$2: void onClick(android.content.DialogInterface,int)>
	++ <net.hockeyapp.android.ExceptionHandler: java.lang.String a(java.lang.String)>
	++ <flipboard.service.User: void a(flipboard.service.User$StateChanger)>
	++ <flipboard.service.FlipboardManager$26: void notifyFailure(java.lang.String)>
	++ <com.helpshift.HSQuestionsList: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ObjectReader: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: java.lang.String b(java.lang.Object,java.lang.Class)>
	++ <flipboard.service.audio.MediaPlayerService: boolean onError(android.media.MediaPlayer,int,int)>
	++ <com.fasterxml.jackson.core.base.ParserBase: int a(com.fasterxml.jackson.core.Base64Variant,char,int)>
	++ <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.ReportIssueActivity: void <clinit>()>
	++ <flipboard.gui.section.SectionFragmentScrolling: void <init>()>
	++ <com.fasterxml.jackson.databind.node.DoubleNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.helpshift.HSReviewFragment$1: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(com.fasterxml.jackson.core.JsonToken,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.deser.KeyDeserializers)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment a(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer b(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer d(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase a(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>
	++ <flipboard.activities.ContentDrawerPhoneActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <net.hockeyapp.android.UpdateActivity$3: void <init>(net.hockeyapp.android.UpdateActivity)>
	++ <flipboard.util.ImageSave$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode a(long)>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(java.lang.Class,java.lang.Class)>
	++ <flipboard.gui.section.ProfileFragmentScrolling$AccountLoginViewClickHandler: void <init>(flipboard.gui.section.ProfileFragmentScrolling)>
	++ <com.helpshift.Helpshift: void a(android.content.Context)>
	++ <com.fasterxml.jackson.core.io.SegmentedStringWriter: java.lang.String a()>
	++ <flipboard.model.UsageEventV2: flipboard.model.UsageEventV2 set(flipboard.model.UsageEventV2$CommonEventData,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.lang.String a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.node.ObjectNode: void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)>
	++ <flipboard.service.audio.MediaPlayerService: void a(java.lang.String)>
	++ <flipboard.util.Format: java.lang.String toString()>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Double v(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.ContentDrawerView: void a()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)>
	++ <com.fasterxml.jackson.databind.ser.std.IterableSerializer: void a(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.model.UsageEventV2: void <init>(flipboard.model.UsageEventV2$EventAction,flipboard.model.UsageEventV2$EventCategory)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.std.CollectionSerializer: boolean a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.activities.YouTubePlayerActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void a(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: java.lang.String D()>
	++ <flipboard.model.FeedItem: java.lang.String socialServiceName()>
	++ <com.fasterxml.jackson.databind.ObjectReader: java.lang.Object a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.deser.DeserializerFactory a(com.fasterxml.jackson.databind.deser.KeyDeserializers)>
	++ <com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,byte)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void c(int)>
	++ <flipboard.activities.TOCActivity: void a(flipboard.activities.TOCActivity,flipboard.service.User$Message)>
	++ <butterknife.ButterKnife: void a(java.lang.Object,java.lang.Object,butterknife.ButterKnife$Finder)>
	++ <flipboard.gui.item.FlipmagDetailViewTablet: flipboard.gui.FLWebView a(flipboard.gui.item.FlipmagDetailViewTablet)>
	++ <flipboard.model.FeedItem: boolean canUnlike(flipboard.model.ConfigService)>
	++ <com.helpshift.util.HSNotification: void a(android.content.Context,org.json.JSONObject,int,java.lang.String,android.content.Intent)>
	++ <flipboard.gui.actionbar.FLActionBar$2: void onClick(android.view.View)>
	++ <flipboard.service.Flap$ActivityRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.gui.item.FlipmagDetailViewTablet: void <clinit>()>
	++ <flipboard.gui.toc.TileContainer$1: boolean onLongClick(android.view.View)>
	++ <com.helpshift.widget.CSATDialog: void onDismiss(android.content.DialogInterface)>
	++ <flipboard.gui.item.AudioItemTablet: void a(flipboard.service.audio.FLAudioManager$AudioState,flipboard.model.FeedItem)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object f(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.section.SectionFragment$36: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.gui.ContentDrawerView: void setHasContent(boolean)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken a(int,boolean)>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <flipboard.activities.ServiceSettingsActivity$2$1: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.util.EnumResolver a(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object a_(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.squareup.otto.AnnotatedHandlerFinder: void a(java.lang.Class)>
	++ <com.fasterxml.jackson.core.base.ParserBase: java.lang.String h()>
	++ <flipboard.gui.FLSearchView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.service.FlipboardManager$26: void notifySuccess(flipboard.model.FLObject)>
	++ <flipboard.gui.personal.SocialNetworksFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <flipboard.io.UsageManager: void a(java.lang.String)>
	++ <flipboard.service.audio.MediaPlayerService: void a(flipboard.service.audio.Song,java.lang.String)>
	++ <flipboard.activities.ReadLaterSignOutActivity$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.gui.actionbar.FLActionBar: android.view.View a(boolean,boolean)>
	++ <com.helpshift.HSMessagesFragment: void d(int)>
	++ <com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.type.CollectionType k(java.lang.Object)>
	++ <flipboard.gui.item.CoverSectionItemTablet: void a(flipboard.model.FeedSectionLink,flipboard.service.Section)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,long)>
	++ <flipboard.gui.FLStaticTextView: void a(java.lang.CharSequence,java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.SimpleType: boolean g()>
	++ <com.fasterxml.jackson.core.io.NumberOutput: int a(int,byte[],int)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object A(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.deser.DeserializerFactory a(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)>
	++ <flipboard.service.User: void a(flipboard.model.Magazine)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap a(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.ser.std.StdKeySerializers$DateKeySerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.FLToast: void c(flipboard.activities.FlipboardActivity,java.lang.String)>
	++ <flipboard.gui.FLSearchView$3: void a(java.util.List,java.util.HashSet)>
	++ <flipboard.activities.SSOLoginActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.node.IntNode: void <clinit>()>
	++ <flipboard.io.UsageEvent: void b(java.lang.String,java.lang.String,java.lang.Object)>
	++ <flipboard.activities.DetailActivity$5: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.util.ClassUtil: java.util.List a(java.lang.Class,java.lang.Class,java.util.List)>
	++ <net.hockeyapp.android.FeedbackActivity: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: java.lang.Object a(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.TypeBase: void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)>
	++ <flipboard.util.DuplicateOccurrenceLog: java.lang.String toString()>
	++ <flipboard.service.Section: boolean h()>
	++ <flipboard.util.Log: void a(flipboard.util.Log$Level,java.lang.String,java.lang.Object[])>
	++ <flipboard.util.VideoUtil: java.lang.String a(flipboard.util.VideoUtil$VideoType)>
	++ <flipboard.util.AndroidUtil: void a(java.lang.String,java.lang.String,java.lang.String,boolean)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonStreamContext l()>
	++ <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues a(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class)>
	++ <flipboard.activities.JsonExplorer: void a(java.util.List,java.lang.String)>
	++ <com.fasterxml.jackson.databind.node.BigIntegerNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[])>
	++ <com.fasterxml.jackson.databind.util.RootNameLookup: com.fasterxml.jackson.databind.PropertyName a(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig)>
	++ <com.fasterxml.jackson.core.base.ParserBase: int w()>
	++ <flipboard.util.SocialHelper: void b(flipboard.model.FeedItem,flipboard.activities.FlipboardActivity,flipboard.service.Section)>
	++ <flipboard.activities.ContentDrawerTabletActivity: void m()>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase f()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.SettableBeanProperty: boolean a(java.lang.Class)>
	++ <com.helpshift.customadapters.MessagesAdapter$6: void onClick(android.view.View)>
	++ <flipboard.gui.toc.TileContainer$1$1: void a(java.lang.Object)>
	++ <flipboard.service.User: flipboard.service.Section e(java.lang.String)>
	++ <flipboard.activities.ReportIssueActivity$10: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType d(java.lang.Class)>
	++ <flipboard.activities.FeedActivity: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader a(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.InjectableValues)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Flap$FlapRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(float)>
	++ <com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any: void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String)>
	++ <flipboard.service.FLSearchManager$LocalSearchableItem: void <init>(flipboard.service.FLSearchManager,flipboard.model.Magazine)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.jsontype.TypeDeserializer a(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.introspect.ObjectIdInfo: com.fasterxml.jackson.databind.introspect.ObjectIdInfo withAlwaysAsId(boolean)>
	++ <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.core.Base64Variant: boolean a(int)>
	++ <flipboard.service.Section: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
	++ <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void a(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.service.FlipboardManager$10: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.ContentDrawerActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <flipboard.util.Observable: java.lang.Object D()>
	++ <com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void <init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.ser.std.ToStringSerializer: boolean a(java.lang.Object)>
	++ <flipboard.activities.ReportIssueActivity: android.widget.EditText i(flipboard.activities.ReportIssueActivity)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single: com.fasterxml.jackson.databind.JsonSerializer a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType c(java.lang.Class)>
	++ <flipboard.gui.FLBitmapView: void setAllowPreloadOnUIThread(boolean)>
	++ <com.helpshift.customadapters.MessagesAdapter$5: void onClick(android.view.View)>
	++ <flipboard.service.User: boolean c(java.lang.String)>
	++ <flipboard.service.Flap: flipboard.service.Flap$LengthenUrlRequest a(flipboard.service.User,java.lang.String,flipboard.service.Flap$JSONResultObserver)>
	++ <flipboard.activities.JsonExplorer$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.audio.MediaPlayerService: void a(java.lang.String,boolean)>
	++ <com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache: com.fasterxml.jackson.databind.JsonSerializer b(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.gui.item.CoverSectionItemTablet$1: void onClick(android.view.View)>
	++ <flipboard.widget.FlipboardWidgetManager: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] a(java.lang.Class,java.lang.Class)>
	++ <flipboard.service.audio.FLAudioManager: void a(flipboard.model.FeedItem,flipboard.service.Section,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.service.User: flipboard.service.Section m(java.lang.String)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] b(com.fasterxml.jackson.core.Base64Variant)>
	++ <flipboard.service.audio.MediaPlayerService: void a(flipboard.service.audio.MediaPlayerService,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int c(java.lang.String,int)>
	++ <com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer: java.math.BigDecimal c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty: void a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.model.FeedItem: flipboard.model.FLObject getAdditionalUsage()>
	++ <flipboard.sstream.SstreamBroadcastReceiver$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter: void a(com.fasterxml.jackson.core.JsonGenerator,int)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: com.fasterxml.jackson.databind.deser.DeserializerFactory a(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig)>
	++ <flipboard.activities.FlipboardActivity: void a(flipboard.service.Section,java.util.List)>
	++ <com.helpshift.HSReviewFragment$2: void onClick(android.content.DialogInterface,int)>
	++ <com.helpshift.HSMessagesFragment$11: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator: com.fasterxml.jackson.databind.deser.SettableBeanProperty[] a(com.fasterxml.jackson.databind.DeserializationConfig)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken h(int)>
	++ <flipboard.app.FlipboardApplication: void onTrimMemory(int)>
	++ <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.gui.section.MagazineConversationThreadDetailFragment: void e(flipboard.gui.section.MagazineConversationThreadDetailFragment)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: java.lang.String d(java.lang.String)>
	++ <flipboard.model.FeedItem: java.util.List getSource()>
	++ <flipboard.util.AndroidUtil$5: void notifyFailure(java.lang.String)>
	++ <com.facebook.AppEventsLogger: void <init>(android.content.Context,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase f()>
	++ <flipboard.service.Flap: void <clinit>()>
	++ <com.fasterxml.jackson.databind.ser.std.NullSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void a(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)>
	++ <flipboard.model.ConfigService: java.lang.String getName()>
	++ <flipboard.util.Format$CharBuf: void a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.module.SimpleDeserializers: void a(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.helpshift.HSMessagesFragment: void a(int)>
	++ <flipboard.util.VideoUtil: void a(android.app.Activity,flipboard.model.FeedItem,java.lang.String,boolean)>
	++ <flipboard.activities.ReadLaterActivity$Service: void <init>(flipboard.activities.ReadLaterActivity)>
	++ <flipboard.service.FlipboardManager: java.util.List c(java.util.List)>
	++ <flipboard.gui.actionbar.FLActionBarMenu: void <init>(android.content.Context)>
	++ <flipboard.service.Section: void t()>
	++ <flipboard.service.FLSearchManager: boolean a(java.lang.String)>
	++ <flipboard.service.Flap$APITokenRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken a(char[],int,boolean,int)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void e(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.ser.ContainerSerializer a(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.service.FlipboardManager$35: void <init>(flipboard.service.FlipboardManager)>
	++ <flipboard.gui.actionbar.FLActionBar: void <init>(android.content.Context,android.util.AttributeSet)>
	++ <com.fasterxml.jackson.core.io.NumberInput: double d(java.lang.String)>
	++ <flipboard.service.Flap$UpdateAccountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.facebook.Session$AuthorizationRequest: void <init>(android.app.Activity)>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.activities.SectionTabletActivity: void onSubsectionClicked(android.view.View)>
	++ <flipboard.activities.LaunchActivity: android.content.Intent a(android.content.Context)>
	++ <flipboard.gui.section.ProfileFragmentScrolling$AccountLoginViewClickHandler$$ViewInjector$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.JavaType d(java.lang.Class)>
	++ <flipboard.service.FlipboardManager: void b(java.lang.Runnable)>
	++ <flipboard.gui.item.CoverSectionItemTablet$8: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.HierarchicType b(java.lang.reflect.Type,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotatedClass construct(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer: com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer a(java.text.DateFormat,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.helpshift.HSQuestion: void onCreate(android.os.Bundle)>
	++ <flipboard.util.SocialHelper: void a(flipboard.service.Section,android.content.Context,android.os.Bundle)>
	++ <flipboard.gui.ContentDrawerListItemAdapter: flipboard.model.ContentDrawerListItem a(int)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: java.util.Calendar a(java.util.Date)>
	++ <com.fasterxml.jackson.databind.type.TypeBase: java.lang.String b()>
	++ <flipboard.model.TocSection: void <init>()>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,java.util.HashSet)>
	++ <net.hockeyapp.android.UpdateManager: boolean b(java.lang.ref.WeakReference)>
	++ <flipboard.model.ContentDrawerListItemBase: void setName(java.lang.String)>
	++ <com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>
	++ <flipboard.gui.FollowButton: void <init>(android.content.Context)>
	++ <flipboard.service.FlipboardManager: java.lang.String g(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap a(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.helpshift.customadapters.MessagesAdapter$8: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: int w()>
	++ <flipboard.activities.ReadLaterActivity$ReadLaterAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer: void <init>(com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.gui.section.SectionScrollingAdapter: flipboard.model.FeedItem a(int)>
	++ <flipboard.util.Log: void b(flipboard.util.Log$Level,java.lang.String,java.lang.Object[])>
	++ <flipboard.activities.CreateAccountActivity$9: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: boolean a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer,java.text.DateFormat,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator: int b(java.lang.Object)>
	++ <com.helpshift.HSMessagesFragment: com.helpshift.HSActivity f(com.helpshift.HSMessagesFragment)>
	++ <flipboard.service.ContentDrawerHandler$4: void a(java.lang.String,byte[],boolean)>
	++ <flipboard.gui.section.SectionFragment$8: java.lang.String a()>
	++ <com.facebook.AppEventsLogger$AccessTokenAppIdPair: void <init>(java.lang.String,java.lang.String)>
	++ <flipboard.gui.section.SectionFragment$25: void onClick(android.view.View)>
	++ <net.hockeyapp.android.tasks.DownloadFileTask$1: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader a(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver)>
	++ <com.fasterxml.jackson.databind.ser.std.RawSerializer: void <init>(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer: java.util.EnumMap c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.ContentDrawerPhoneActivity: java.lang.String k()>
	++ <com.google.android.gcm.GCMBaseIntentService: void <clinit>()>
	++ <com.facebook.LoginActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.gui.ContentDrawerView: void <clinit>()>
	++ <flipboard.gui.item.FlipmagDetailViewTablet$FlipmagWebViewClient$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void f(com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void e(java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.HierarchicType a(com.fasterxml.jackson.databind.type.HierarchicType)>
	++ <flipboard.gui.section.item.GenericSuggestedFollowItem$4$1: void onAnimationEnd(android.animation.Animator)>
	++ <flipboard.gui.InlineFlipUIController: void onScroll(android.widget.AbsListView,int,int,int)>
	++ <flipboard.gui.ContentDrawerView: void setEmptyMessage$505cbf4b(java.lang.String)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.Map)>
	++ <flipboard.service.Flap$AccountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <net.hockeyapp.android.UpdateActivity$1: void a(java.lang.Boolean)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void <init>(com.fasterxml.jackson.databind.JsonSerializer)>
	++ <flipboard.activities.SectionTabletActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.EnumSetSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class)>
	++ <flipboard.service.Section: void e(boolean)>
	++ <net.hockeyapp.android.ExceptionHandler: void a(java.lang.Throwable,net.hockeyapp.android.CrashManagerListener)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.FlipboardActivity: void startActivity(android.content.Intent)>
	++ <flipboard.io.UsageManager: void a(boolean)>
	++ <flipboard.gui.FLBitmapView: void setBitmap(flipboard.io.BitmapManager$Handle)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: java.lang.Object b(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException b(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: void a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase a(java.util.HashSet)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager$19: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <butterknife.ButterKnife: void a(android.app.Activity)>
	++ <flipboard.service.FLSearchManager$LocalSearchableItem: void <init>(flipboard.service.FLSearchManager,flipboard.service.Account)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: java.math.BigInteger y()>
	++ <com.helpshift.util.AttachmentUtil: void a(android.app.Activity)>
	++ <flipboard.gui.section.UserListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.fasterxml.jackson.databind.jsontype.TypeSerializer: void <init>()>
	++ <flipboard.model.FeedItem: java.lang.String getDisplayStyle()>
	++ <com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder: java.lang.Object b(java.lang.Object,int)>
	++ <flipboard.gui.section.SectionFragment$33: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.introspect.AnnotatedClass: void <init>(java.lang.Class,java.util.List,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.introspect.AnnotationMap)>
	++ <flipboard.gui.item.PageboxPaginatedCarousel$2: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.activities.SearchTabletActivity: void m()>
	++ <flipboard.activities.DetailActivity: void a(flipboard.model.FeedItem,flipboard.service.Section,java.lang.String)>
	++ <flipboard.service.FlipboardManager: boolean i()>
	++ <com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer e(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.util.SocialHelper: void c(flipboard.activities.FlipboardActivity,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.activities.LoginActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.type.MapLikeType h(java.lang.Object)>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean)>
	++ <com.helpshift.HSFaqDataSource: void <init>(android.content.Context)>
	++ <flipboard.activities.VideoAdActivity: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.AbstractDeserializer: com.fasterxml.jackson.databind.deser.AbstractDeserializer a(com.fasterxml.jackson.databind.BeanDescription)>
	++ <flipboard.activities.ReportIssueActivity$5: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase: boolean a(com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.service.Flap$UpdateRequest: void <init>(flipboard.service.Flap,flipboard.service.User,boolean,boolean)>
	++ <flipboard.service.Flap$EditMagazineRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription)>
	++ <com.fasterxml.jackson.core.base.GeneratorBase: void a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: com.fasterxml.jackson.core.JsonToken f()>
	++ <flipboard.activities.SearchTabletActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.util.Observable: void a(java.lang.Object,java.lang.Object)>
	++ <com.facebook.LoginActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object[] e(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: void c(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.section.MagazineConversationThreadDetailFragment$2: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager: void b(flipboard.service.FlipboardManager,flipboard.activities.FlipboardActivity)>
	++ <com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer a(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean)>
	++ <com.fasterxml.jackson.core.base.ParserBase: java.math.BigDecimal B()>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer b(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.core.JsonParser: boolean b(com.fasterxml.jackson.core.JsonParser$Feature)>
	++ <com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.model.FeedItem: boolean canLike(flipboard.model.ConfigService)>
	++ <flipboard.activities.AudioPlayerActivity$2: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.JsonSerializer: java.lang.Class a()>
	++ <com.facebook.AuthorizationClient: boolean a(int,int,android.content.Intent)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer: java.lang.Object b(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.core.base.ParserBase: void a(java.lang.Object)>
	++ <flipboard.activities.SubsectionActivity$ListItemAdapter: void onScroll(android.widget.AbsListView,int,int,int)>
	++ <flipboard.util.SocialHelper: void <clinit>()>
	++ <com.fasterxml.jackson.databind.exc.IgnoredPropertyException: com.fasterxml.jackson.databind.exc.IgnoredPropertyException a(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection)>
	++ <com.fasterxml.jackson.databind.ser.std.CalendarSerializer: long a(java.util.Calendar)>
	++ <com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JavaType a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.HierarchicType b(com.fasterxml.jackson.databind.type.HierarchicType)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <flipboard.util.JavaUtil: boolean a(java.lang.String,java.lang.String)>
	++ <flipboard.service.ContentDrawerHandler: void b(flipboard.util.Observer)>
	++ <net.hockeyapp.android.UpdateActivity: void <init>()>
	++ <com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] b(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>
	++ <flipboard.gui.item.ImageDetailView: float a(android.view.MotionEvent)>
	++ <com.facebook.Session$AuthorizationRequest: void <init>(android.support.v4.app.Fragment)>
	++ <flipboard.gui.section.SectionFragment: void a(flipboard.gui.section.SectionFragment,boolean)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType)>
	++ <flipboard.service.HintManager: boolean a(java.util.List)>
	++ <com.fasterxml.jackson.core.io.NumberOutput: int a(int,char[],int)>
	++ <flipboard.util.AndroidUtil: boolean c(android.content.Context)>
	++ <flipboard.model.FeedItem: void setLiked(boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: void <clinit>()>
	++ <flipboard.service.Flap$StateRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.gui.flipping.FlipTransitionViews: void b(flipboard.util.Observer)>
	++ <flipboard.model.FLObject: boolean has(java.lang.String)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(java.math.BigDecimal)>
	++ <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType d(java.lang.Object)>
	++ <flipboard.service.Section: boolean w()>
	++ <com.fasterxml.jackson.core.io.NumberInput: long b(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer: java.lang.Object a_(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase a(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>
	++ <flipboard.gui.flipping.FlipTransitionViews: android.view.View d(int)>
	++ <flipboard.activities.SettingsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper a(java.lang.Class,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any: void a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.node.NullNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(long)>
	++ <com.fasterxml.jackson.databind.ser.std.IterableSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.core.util.JsonParserSequence: void a(java.util.List)>
	++ <net.hockeyapp.android.tasks.DownloadFileTask: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>
	++ <flipboard.io.UsageManager: void a(java.lang.Throwable)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void j()>
	++ <com.fasterxml.jackson.databind.node.DecimalNode: void <clinit>()>
	++ <flipboard.service.Flap: flipboard.service.Flap$SearchRequest a(flipboard.service.User,java.lang.String,flipboard.service.Flap$SearchType,flipboard.service.Flap$SearchObserver,java.lang.String,int)>
	++ <flipboard.model.FLObject: java.lang.String getString(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer c(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.gui.item.CoverSectionItemTablet$3: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer c(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.service.FLSearchManager: void a(java.lang.String,flipboard.service.FLSearchManager$LocalSearchObserver)>
	++ <flipboard.gui.personal.SocialNetworksFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.gui.SocialFormatter: java.lang.String g(android.content.Context,flipboard.model.ConfigService)>
	++ <flipboard.model.FeedItem: boolean isPagebox()>
	++ <com.fasterxml.jackson.databind.ObjectReader: com.fasterxml.jackson.databind.JsonDeserializer b(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.util.Log: void a(flipboard.util.Log$Level,java.lang.String)>
	++ <flipboard.activities.FlipboardActivity: void a(flipboard.activities.FlipboardActivity$OnBackPressedListener)>
	++ <flipboard.service.User: void a(long)>
	++ <com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>
	++ <com.fasterxml.jackson.databind.module.SimpleModule: com.fasterxml.jackson.databind.module.SimpleModule a(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <flipboard.service.audio.MediaPlayerService: void a(boolean,boolean,java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)>
	++ <com.squareup.otto.Bus: void a(com.squareup.otto.EventHandler,com.squareup.otto.EventProducer)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(char)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: void <init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>
	++ <flipboard.activities.ContentDrawerActivity: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.DataFormatReaders: java.lang.String toString()>
	++ <com.fasterxml.jackson.databind.DatabindContext: com.fasterxml.jackson.annotation.ObjectIdResolver b(com.fasterxml.jackson.databind.introspect.ObjectIdInfo)>
	++ <flipboard.model.UserState: void <init>(flipboard.model.UserState)>
	++ <com.fasterxml.jackson.core.base.ParserBase: java.math.BigInteger y()>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(com.fasterxml.jackson.core.Base64Variant,byte[],int)>
	++ <flipboard.service.FlipboardManager$34: void <init>(flipboard.service.FlipboardManager,android.content.Context,java.lang.String)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.KeyDeserializer c(com.fasterxml.jackson.databind.JavaType)>
	++ <net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <com.fasterxml.jackson.databind.node.DoubleNode: com.fasterxml.jackson.databind.node.DoubleNode a(double)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>
	++ <flipboard.activities.DetailActivity: void <clinit>()>
	++ <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void a(com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void b(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: byte[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.FLLabelTextView: void <init>(android.content.Context,android.util.AttributeSet)>
	++ <flipboard.service.Flap$UserInfoRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.util.SocialHelper: boolean a(flipboard.activities.FlipboardActivity)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.deser.Deserializers)>
	++ <flipboard.activities.TOCActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <flipboard.gui.FLWebView: void loadUrl(java.lang.String)>
	++ <net.hockeyapp.android.UpdateFragment: void <init>()>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.deser.DeserializerFactory a(com.fasterxml.jackson.databind.AbstractTypeResolver)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <flipboard.gui.section.scrolling.header.ProfileCover$MagazineCarouselTileHolder: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.type.MapLikeType e(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.FirstRunActivity: void doneSelecting(android.view.View)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.HierarchicType a(java.lang.reflect.Type,java.lang.Class)>
	++ <flipboard.activities.DetailActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer b(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.briefing.BriefingRefreshTokenReceiver: void onReceive(android.content.Context,android.content.Intent)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: java.lang.Object A(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <fr.castorflex.android.verticalviewpager.VerticalViewPager: void a(int,boolean,int,boolean)>
	++ <com.facebook.internal.Utility: java.lang.reflect.Method a(java.lang.String,java.lang.String,java.lang.Class[])>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.core.base.ParserMinimalBase: com.fasterxml.jackson.core.JsonToken f()>
	++ <flipboard.gui.FLImageView: void a(flipboard.gui.FLImageView,flipboard.io.BitmapManager$Handle,java.lang.String,boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(java.math.BigInteger)>
	++ <flipboard.util.SocialHelper: void a(flipboard.model.FeedItem,flipboard.activities.FlipboardActivity,flipboard.service.Section)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.helpshift.HSStorage: org.json.JSONObject a(java.lang.String)>
	++ <flipboard.service.User: java.lang.String j(java.lang.String)>
	++ <flipboard.gui.FLViewFlipper: void a(android.view.View)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void e(char[],int,int)>
	++ <com.facebook.internal.Utility: java.lang.String a(java.lang.String,java.lang.String)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter: flipboard.activities.SettingsFragment$RowItem a(int)>
	++ <com.helpshift.HSApiData: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,int)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: boolean a(com.fasterxml.jackson.databind.SerializationFeature)>
	++ <flipboard.gui.toc.DynamicGridLayout$DragManager: void a(java.util.List)>
	++ <com.fasterxml.jackson.core.JsonGenerator: void a(java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.service.User: boolean b()>
	++ <com.helpshift.HSFunnel: void a(java.lang.String)>
	++ <flipboard.service.audio.FLAudioManager: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.PropertyName: java.lang.String b()>
	++ <com.fasterxml.jackson.core.Base64Variant: char b()>
	++ <flipboard.gui.FLImageView: void setFade(boolean)>
	++ <com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean c(java.lang.Class,java.lang.String)>
	++ <com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.BeanDescription a(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType a(java.lang.Class,java.util.List)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void a(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)>
	++ <com.fasterxml.jackson.core.JsonGenerator: void a(java.lang.Object)>
	++ <flipboard.gui.section.SectionFragmentScrolling: flipboard.gui.section.SectionFragmentScrolling a(flipboard.service.Section,boolean)>
	++ <flipboard.service.SyncJob: void a(flipboard.service.Section)>
	++ <flipboard.gui.section.ProfileFragmentScrolling$UserObserver: void <init>(flipboard.gui.section.ProfileFragmentScrolling,byte)>
	++ <com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: com.fasterxml.jackson.databind.ser.ContainerSerializer a(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void L()>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)>
	++ <flipboard.service.Section: java.lang.String toString()>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void c(com.fasterxml.jackson.core.SerializableString)>
	++ <com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext g()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer: void d(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.deser.std.JdkDeserializers: com.fasterxml.jackson.databind.JsonDeserializer a(java.lang.Class,java.lang.String)>
	++ <flipboard.service.User: void e()>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: java.util.Collection a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)>
	++ <com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <flipboard.service.FlipboardManager: void a(flipboard.service.Flap$JSONResultObserver)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: boolean[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.ChooseAvatarActivity$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.impl.ValueInjector: void a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.node.ObjectNode a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>
	++ <flipboard.sstream.SstreamBroadcastReceiver: void a(flipboard.service.User,java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: java.util.Collection a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)>
	++ <flipboard.gui.FLImageView: void a(flipboard.io.BitmapManager$Handle,java.lang.String,boolean)>
	++ <com.helpshift.util.HSRes: java.lang.String a(android.content.Context,java.lang.String,int,java.lang.Object[])>
	++ <flipboard.gui.section.ProfileFragmentScrolling$UserObserver: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ObjectWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider a(com.fasterxml.jackson.databind.SerializationConfig)>
	++ <flipboard.daydream.FlipboardDream$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager$33: void a(java.lang.String,byte[],boolean)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object h(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.AudioPlayerActivity: void a(flipboard.service.audio.FLMediaPlayer$PlayerState)>
	++ <flipboard.activities.EditMagazineActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void a(com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.gui.FollowButton: void a(android.content.Context)>
	++ <com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig a(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)>
	++ <com.helpshift.ContactUsFilter: void a(android.content.Context)>
	++ <flipboard.gui.section.scrolling.header.SectionCover$4: void onClick(android.view.View)>
	++ <flipboard.activities.LoginActivity$9$3: void <init>(flipboard.activities.LoginActivity$9,flipboard.service.FlipboardManager)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.type.MapLikeType h(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: void <init>(java.lang.Class)>
	++ <flipboard.gui.item.RssDetailView: void a(java.lang.String,byte[],boolean)>
	++ <flipboard.json.JsonSerializationWrapper: java.lang.Object a(java.lang.String,java.lang.Class)>
	++ <flipboard.gui.section.UserListFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.module.SimpleModule: void a(com.fasterxml.jackson.databind.Module$SetupContext)>
	++ <flipboard.activities.FeedActivity: void a(flipboard.gui.actionbar.FLActionBarMenu,flipboard.model.FeedItem,flipboard.service.Section,flipboard.activities.FlipboardActivity)>
	++ <flipboard.activities.ContentDrawerTabletActivity: boolean j_()>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] b(com.fasterxml.jackson.core.Base64Variant)>
	++ <com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>
	++ <com.fasterxml.jackson.core.base.ParserBase: void <clinit>()>
	++ <com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class,byte)>
	++ <flipboard.gui.actionbar.FLActionBar: void <init>(android.content.Context)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer e()>
	++ <flipboard.activities.VideoActivity: void onPrepared(android.media.MediaPlayer)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.activities.CategoryPickerFragment$2: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.gui.toc.TOCCoverPage: void onClick(android.view.View)>
	++ <flipboard.gui.item.CoverSectionItemTablet$4: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType c(java.lang.Object)>
	++ <flipboard.gui.flipping.FlipTransitionBase: int getCurrentViewIndex()>
	++ <com.fasterxml.jackson.databind.JsonDeserializer: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader e()>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: float u(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.base.ParserBase: com.fasterxml.jackson.core.JsonParser a(int)>
	++ <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.introspect.BasicBeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.KeyDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void b(com.fasterxml.jackson.core.SerializableString)>
	++ <flipboard.util.Log: flipboard.util.Log a(boolean)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.gcm.FlipboardGCMIntentService: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.lang.Object a(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.ContentDrawerTabletActivity$CategoriesAdapter$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: java.lang.String a(java.lang.Object)>
	++ <flipboard.service.Flap$UserMagazinesRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int a(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)>
	++ <flipboard.activities.FlipboardActivity: flipboard.gui.actionbar.FLActionBar l_()>
	++ <com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.type.CollectionType i(java.lang.Object)>
	++ <com.facebook.Session$AuthorizationRequest: com.facebook.Session$AuthorizationRequest a(com.facebook.SessionLoginBehavior)>
	++ <flipboard.gui.toc.TOCView$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.ser.std.DateSerializer: long b(java.lang.Object)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: int w()>
	++ <net.hockeyapp.android.UpdateActivity$4: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeIdResolver a(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean)>
	++ <flipboard.remoteservice.UserContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map: void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,java.lang.Object)>
	++ <flipboard.util.AndroidUtil: void a(java.lang.String,java.lang.String,java.lang.String)>
	++ <flipboard.gui.FLLabelTextView: void onMeasure(int,int)>
	++ <flipboard.model.FeedSectionLink: boolean isMagazine()>
	++ <flipboard.gui.actionbar.FLActionBar: void a(android.content.Context)>
	++ <flipboard.activities.CategoryPickerFragment$4: void onClick(android.view.View)>
	++ <flipboard.io.FunnelUsageEvent: void <init>(java.lang.String)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonLocation k()>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(long)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <net.hockeyapp.android.tasks.DownloadFileTask: java.lang.Boolean a()>
	++ <com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig a(com.fasterxml.jackson.databind.cfg.BaseSettings)>
	++ <flipboard.service.FlipboardManager: void b(java.util.List,flipboard.service.Flap$CommentaryObserver)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void a(java.math.BigDecimal)>
	++ <flipboard.gui.section.ProfileFragmentScrolling$AccountLoginViewClickHandler$$ViewInjector$1: void <init>(flipboard.gui.section.ProfileFragmentScrolling$AccountLoginViewClickHandler)>
	++ <com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.CollectionSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase a(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>
	++ <flipboard.service.FlipboardManager: java.lang.String h(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty: com.fasterxml.jackson.databind.deser.SettableBeanProperty b(com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.service.audio.FLAudioManager: void c()>
	++ <com.fasterxml.jackson.databind.node.DecimalNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap a(com.fasterxml.jackson.databind.deser.SettableBeanProperty)>
	++ <flipboard.gui.section.SectionFragment$35: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.Runnable)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: java.math.BigDecimal B()>
	++ <flipboard.widget.FlipboardWidgetManager: int a(boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription b(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.gui.item.ImageDetailView: void <clinit>()>
	++ <flipboard.service.RemoteWatchedFile: void c(boolean)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(double)>
	++ <flipboard.activities.ContentDrawerTabletActivity$CategoriesAdapter: java.lang.String a(int)>
	++ <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class a(java.util.EnumSet)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>
	++ <flipboard.activities.ChooseAccountActivity$Adapter: void <init>(flipboard.activities.ChooseAccountActivity,android.content.Context,java.util.List)>
	++ <com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase: void <init>(java.lang.Class,java.lang.Boolean,java.text.DateFormat)>
	++ <com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer)>
	++ <flipboard.service.Section: boolean q()>
	++ <flipboard.gui.FLImageView: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.model.ConfigSetting: java.lang.String getWebViewRefererString()>
	++ <flipboard.gui.personal.TocDrawerListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.util.Format$CharBuf: void b(int)>
	++ <flipboard.gui.SocialBarTablet: void onClick(android.view.View)>
	++ <com.facebook.AppEventsLogger$AppEvent: void a(java.lang.String)>
	++ <flipboard.activities.ContentDrawerActivity: void a(flipboard.gui.ContentDrawerView,boolean,boolean)>
	++ <com.fasterxml.jackson.databind.ser.std.NumberSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void a(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.type.ArrayType: boolean g()>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.dialog.FLDialogFragment: void a(flipboard.activities.FlipboardActivity,java.lang.String)>
	++ <flipboard.activities.ComposeActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,int)>
	++ <flipboard.gui.FLImageView: void setImageMatrix(android.graphics.Matrix)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Long r(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.util.TextBuffer: java.lang.String f()>
	++ <com.facebook.widget.LoginButton: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(com.fasterxml.jackson.core.Base64Variant,byte[],int)>
	++ <com.fasterxml.jackson.databind.type.TypeBase: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.TextNode a(java.lang.String)>
	++ <flipboard.gui.ProfilePage$2: void onClick(android.view.View)>
	++ <flipboard.service.audio.FLAudioManager: void <clinit>()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer a(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[])>
	++ <com.helpshift.HSMessagesFragment: void a(java.lang.String,int)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(char[],int,int)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object B(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.Object C()>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean g()>
	++ <com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: java.lang.String a(java.lang.Object,java.lang.Class)>
	++ <com.fasterxml.jackson.core.io.NumberInput: int a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.DatabindContext: boolean a(com.fasterxml.jackson.databind.MapperFeature)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer: void b(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>
	++ <flipboard.daydream.FlipboardDream: void <clinit>()>
	++ <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.util.HashSet)>
	++ <flipboard.activities.ContentDrawerTabletActivity$CategoriesAdapter: void a(int,int)>
	++ <flipboard.io.UsageEvent: float f()>
	++ <flipboard.gui.debug.NetworkRequestListFragment$3: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.fasterxml.jackson.databind.node.ArrayNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <flipboard.activities.ContentDrawerActivity: android.content.Intent c(android.app.Activity)>
	++ <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void b(com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer: void a(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.activities.ContentDrawerActivity: void r()>
	++ <com.fasterxml.jackson.databind.type.CollectionLikeType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)>
	++ <flipboard.gui.section.SectionFragment$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.cfg.MapperConfigBase: void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.cfg.BaseSettings)>
	++ <com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.DatabindContext: com.fasterxml.jackson.databind.JavaType a(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>
	++ <com.facebook.internal.Utility: java.lang.String a(android.content.Context)>
	++ <flipboard.activities.AudioPlayerActivity: void G()>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.core.io.NumberInput: java.math.BigDecimal a(char[])>
	++ <com.helpshift.app.ActionBarActivity: void c(boolean)>
	++ <com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: void b(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>
	++ <com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void a(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.ser.std.IterableSerializer: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase a(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.helpshift.HSReviewFragment$3: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.ser.std.CalendarSerializer: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase a(java.lang.Boolean,java.text.DateFormat)>
	++ <com.fasterxml.jackson.databind.util.EnumResolver: com.fasterxml.jackson.databind.util.EnumResolver a(java.lang.Class,java.lang.reflect.Method)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty: java.lang.Object b(java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void d(char[],int,int)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)>
	++ <com.helpshift.HSMessagesFragment$10: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.ser.std.RawSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.PropertyNamingStrategy)>
	++ <com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.type.CollectionType l(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String x(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParseException b(java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.type.MapLikeType e(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.IterableSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType c(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.JavaType d(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <flipboard.util.Format: java.lang.String a(java.lang.String,java.lang.Iterable)>
	++ <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName a(java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.introspect.AnnotatedParameter: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
	++ <flipboard.util.Log: void a(java.lang.String,java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.ser.SerializerFactory b(com.fasterxml.jackson.databind.ser.Serializers)>
	++ <flipboard.gui.FLRelativeLayout: void <clinit>()>
	++ <flipboard.gui.item.ImageDetailView: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <flipboard.io.Download$Observer: void a(int)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.util.Collection a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.ContainerSerializer a(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.ser.std.CollectionSerializer: com.fasterxml.jackson.databind.ser.ContainerSerializer a(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <flipboard.service.Section: void <init>(flipboard.model.SearchResultItem)>
	++ <com.fasterxml.jackson.databind.exc.InvalidFormatException: void <init>(java.lang.String,java.lang.Object,java.lang.Class)>
	++ <flipboard.gui.actionbar.FLActionBar: android.view.View a(boolean,flipboard.gui.actionbar.FLActionBar$HomeButtonStyle,boolean)>
	++ <com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext a(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.Class,android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType a(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>
	++ <flipboard.util.Log: void <clinit>()>
	++ <flipboard.service.Section: flipboard.service.User E()>
	++ <flipboard.activities.SearchTabletActivity: boolean j_()>
	++ <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: boolean a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>
	++ <flipboard.gui.personal.NotificationsFragment: void c(flipboard.gui.personal.NotificationsFragment)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: void a(com.fasterxml.jackson.databind.deser.SettableBeanProperty[])>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer: void <init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.node.TextNode: com.fasterxml.jackson.databind.node.TextNode a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer: java.lang.Object b()>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty: void a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ObjectWriter: void a(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig a(com.fasterxml.jackson.databind.deser.KeyDeserializers)>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator)>
	++ <com.fasterxml.jackson.databind.util.EnumResolver: com.fasterxml.jackson.databind.util.EnumResolver a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.section.SectionFragment: void onSubsectionClicked(android.view.View)>
	++ <flipboard.gui.FLImageView: void a(java.lang.String,flipboard.model.Image,android.graphics.PointF,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.activities.ReportIssueActivity$11: void onClick(android.view.View)>
	++ <com.helpshift.view.ScreenshotPreviewView: void setScreenshotPreview(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>
	++ <flipboard.gui.personal.NotificationsFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.service.audio.MediaPlayerService: void a(flipboard.model.FeedItem,flipboard.service.Section,java.lang.String)>
	++ <flipboard.model.FeedItem: boolean isSection()>
	++ <com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType c(java.lang.Object)>
	++ <flipboard.json.JsonSerializationWrapper: java.lang.Object a(byte[],java.lang.Class)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void i(java.lang.String)>
	++ <flipboard.gui.section.SectionFragment: void a(flipboard.model.UsageEventV2$SectionNavFrom)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void h(java.lang.String)>
	++ <flipboard.activities.VideoActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.activities.AudioPlayerActivity$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager$33: void a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] a(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>
	++ <flipboard.gui.FLSearchView: void a(flipboard.gui.FLSearchView$Input,java.lang.Object[])>
	++ <flipboard.activities.ContentDrawerTabletActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.util.AndroidUtil: void a(android.view.View,java.lang.Class,flipboard.util.Callback)>
	++ <flipboard.json.JsonSerializationWrapper$PreserveUnknownElementsSerializer: void <init>(com.fasterxml.jackson.databind.ObjectMapper,byte)>
	++ <flipboard.util.ActivityUtil: void a(android.content.Context,flipboard.model.ConfigService,java.lang.String,java.lang.String)>
	++ <flipboard.gui.discovery.SectionSearchView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)>
	++ <com.fasterxml.jackson.core.base.ParserBase: void T()>
	++ <com.fasterxml.jackson.databind.ObjectWriter: java.lang.String a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: void b(com.fasterxml.jackson.databind.deser.SettableBeanProperty)>
	++ <com.helpshift.HSFunnel: void a(java.lang.String,org.json.JSONObject)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.deser.DeserializerFactory a(com.fasterxml.jackson.databind.deser.Deserializers)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: int a(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)>
	++ <flipboard.sstream.SstreamBroadcastReceiver: void a(flipboard.service.User,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List)>
	++ <flipboard.gui.ContentDrawerView: void a(java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void a(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer a(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.BeanDescription b(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.activities.ItemShareOptionsActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.io.DownloadManager: void b(boolean)>
	++ <com.fasterxml.jackson.core.base.ParserBase: int a(com.fasterxml.jackson.core.Base64Variant,int,int)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer: boolean a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.JsonMappingException: void a(java.lang.Object,java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: java.lang.String f()>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: int[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.util.ActivityUtil: void a(android.app.Activity,java.lang.String)>
	++ <flipboard.model.ConfigService: flipboard.model.ConfigService copy()>
	++ <com.helpshift.widget.CSATDialog: void onShow(android.content.DialogInterface)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: void a(java.util.Map,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>
	++ <flipboard.gui.FLSearchView: boolean b(flipboard.model.SearchResultItem)>
	++ <flipboard.gui.section.SectionFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.SocialBarTablet$1: void onClick(android.view.View)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.BriefingProfileShim: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Object[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.JavaType d(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer: void <init>(com.fasterxml.jackson.databind.util.EnumResolver)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.service.FLSearchManager$LocalSearchableItem: void <init>(flipboard.service.FLSearchManager,flipboard.service.Section)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: double d(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.lang.String a(java.lang.Object,java.lang.Class)>
	++ <flipboard.util.TOCBuilder$TOCBuilderObserver: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[])>
	++ <com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer b(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.service.Flap: flipboard.service.Flap$UpdateRequest a(flipboard.service.User,boolean,boolean)>
	++ <flipboard.gui.section.AttributionServiceInfo$1: void onClick(android.view.View)>
	++ <com.helpshift.HSStorage: org.json.JSONObject c(java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ValueNode a(java.lang.Object)>
	++ <flipboard.model.FLObject: void set(java.lang.String,java.lang.Object)>
	++ <flipboard.gui.item.CoverSectionItemTablet: void a(flipboard.gui.item.CoverSectionItemTablet,boolean)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular: void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableBeanProperty)>
	++ <flipboard.gui.toc.TOCPage$SearchBoxOnClickListener: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.util.Calendar c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType a(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])>
	++ <com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers b(android.content.Context)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.type.MapLikeType g(java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void a(com.fasterxml.jackson.core.Base64Variant,byte[],int)>
	++ <com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void a(com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.io.DownloadManager: java.lang.String a(java.lang.String)>
	++ <com.fasterxml.jackson.core.base.ParserBase: void e(int)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken a(char[],int,int,boolean,int)>
	++ <flipboard.service.User: flipboard.service.Section d()>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper a(com.fasterxml.jackson.databind.PropertyNamingStrategy)>
	++ <flipboard.gui.FLSearchView: void b(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.model.FLObject: void <init>(java.util.Map)>
	++ <com.fasterxml.jackson.databind.util.EnumResolver: com.fasterxml.jackson.databind.util.EnumResolver b(java.lang.Class,java.lang.reflect.Method)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)>
	++ <flipboard.util.VideoUtil: flipboard.util.VideoUtil$VideoType a(flipboard.model.FeedItem)>
	++ <com.facebook.AuthorizationClient: void a(com.facebook.AuthorizationClient$AuthorizationRequest)>
	++ <flipboard.service.Section: java.lang.String f()>
	++ <flipboard.service.Flap$FlapRequest: void <init>(flipboard.service.Flap,flipboard.service.User,boolean)>
	++ <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException a(com.fasterxml.jackson.core.JsonParser,java.lang.String)>
	++ <flipboard.gui.section.item.ProfileBioItem$2: void onClick(android.view.View)>
	++ <net.hockeyapp.android.UpdateActivity: void onClick(android.view.View)>
	++ <flipboard.activities.DetailActivity: void a(flipboard.gui.flipping.FlipTransitionBase$Direction)>
	++ <flipboard.gui.section.item.ProfileSummaryItem$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: long x()>
	++ <flipboard.activities.LoginActivity$9$3$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.LaunchActivity: void <init>()>
	++ <flipboard.service.audio.MediaPlayerService: void b(boolean)>
	++ <flipboard.activities.ServiceSettingsActivity: java.lang.String a(java.lang.Class,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase: boolean a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder a(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask: java.lang.String a(java.lang.String)>
	++ <flipboard.service.FlipboardManager: void a(java.util.List)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter$1: void onClick(android.view.View)>
	++ <flipboard.service.Account: boolean d(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer: java.math.BigInteger c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader a(java.lang.Class)>
	++ <flipboard.model.UsageEventV2: void set(java.lang.String,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase f()>
	++ <com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase a(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] a(java.lang.Object[])>
	++ <flipboard.gui.section.SectionFragmentScrolling: flipboard.gui.section.SectionFragmentScrolling a(java.lang.String)>
	++ <flipboard.service.audio.FLAudioManager: boolean l()>
	++ <com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class,byte)>
	++ <flipboard.activities.FirstRunActivity: void b(boolean)>
	++ <flipboard.gui.section.scrolling.header.SectionCover$2: void onClick(android.view.View)>
	++ <net.hockeyapp.android.UpdateActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream: void <init>(java.nio.ByteBuffer)>
	++ <flipboard.activities.JsonExplorer$1: void onClick(android.view.View)>
	++ <flipboard.activities.VideoActivity: void finish()>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask: void a(net.hockeyapp.android.tasks.CheckUpdateTask,org.json.JSONArray)>
	++ <flipboard.remoteservice.RemoteServiceUtil: void <clinit>()>
	++ <com.fasterxml.jackson.annotation.JsonFormat$Value: void <init>(com.fasterxml.jackson.annotation.JsonFormat)>
	++ <com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider a(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)>
	++ <flipboard.service.Flap: java.util.List a(flipboard.service.Flap)>
	++ <com.fasterxml.jackson.databind.ser.std.SerializableSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <flipboard.json.JsonSerializationWrapper: java.lang.String a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdReader: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.io.Download: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.JavaType a(java.lang.String,com.fasterxml.jackson.databind.type.TypeFactory)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: int a(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)>
	++ <flipboard.gui.flipping.ViewScreenshotCreator: void <clinit>()>
	++ <flipboard.activities.ItemShareOptionsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException a(java.lang.Class,java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: void a(com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.util.Observable: void b(flipboard.util.Observer)>
	++ <com.fasterxml.jackson.databind.JavaType: boolean f(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.helpshift.HelpshiftDb: com.helpshift.HelpshiftDb a(android.content.Context)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void f(char[],int,int)>
	++ <flipboard.activities.FlipboardActivity: void finish()>
	++ <com.fasterxml.jackson.databind.exc.InvalidFormatException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Object,java.lang.Class)>
	++ <flipboard.gui.InlineFlipUIController$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager$32: void a(java.lang.String)>
	++ <flipboard.activities.SSOLoginActivity$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.FLAdManager$2$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ObjectReader: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.activities.FlipboardActivity: void <clinit>()>
	++ <flipboard.activities.AlsoFlippedFragment$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager: android.database.sqlite.SQLiteDatabase Q()>
	++ <com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer a(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.activities.SettingsDensityActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.activities.FlipboardActivity: void a(flipboard.service.Section,java.lang.String,java.lang.String)>
	++ <flipboard.io.NetworkManager: void l()>
	++ <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)>
	++ <flipboard.gui.section.SectionFragment$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.widget.FlipboardWidgetManager$WidgetItem: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.FLLabelTextView: void b(int,int)>
	++ <com.fasterxml.jackson.databind.util.RootNameLookup: com.fasterxml.jackson.databind.PropertyName a(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String a(java.lang.String)>
	++ <flipboard.model.FeedSectionLink: void <init>(flipboard.service.Section,java.lang.String)>
	++ <com.facebook.Session$OpenRequest: com.facebook.Session$OpenRequest b(java.util.List)>
	++ <flipboard.util.Format$CharBuf: java.lang.String toString()>
	++ <com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.helpshift.customadapters.MessagesAdapter$9: void onClick(android.view.View)>
	++ <flipboard.activities.ContentDrawerActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty: com.fasterxml.jackson.databind.deser.SettableBeanProperty b(com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.util.SocialHelper: void a(android.view.View,flipboard.service.Section,flipboard.model.FeedItem,flipboard.model.FeedItem,flipboard.model.UsageEventV2$SocialCardNavFrom)>
	++ <com.helpshift.util.HSRes: int d(android.content.Context,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.node.BinaryNode: com.fasterxml.jackson.databind.node.BinaryNode a(byte[])>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void d(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer: java.lang.StackTraceElement c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void b(byte[])>
	++ <com.fasterxml.jackson.core.base.ParserMinimalBase: void <init>(byte)>
	++ <flipboard.util.AndroidUtil: boolean a(android.content.Context,android.content.Intent)>
	++ <com.facebook.LoginActivity: void onActivityResult(int,int,android.content.Intent)>
	++ <flipboard.service.FlipboardManager$32: void a(java.lang.String,byte[],boolean)>
	++ <com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.Object I()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer a(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: double A()>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode a(java.math.BigInteger)>
	++ <flipboard.gui.toc.TileView: void a(flipboard.io.Download$Status)>
	++ <flipboard.io.UsageEvent: void a(java.lang.String,long,flipboard.service.Section,flipboard.model.FeedItem,flipboard.model.UserState$TargetAuthor)>
	++ <com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty: com.fasterxml.jackson.databind.deser.SettableBeanProperty b(com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.gui.dialog.FLDialogFragment: void a(android.content.Intent)>
	++ <net.hockeyapp.android.tasks.DownloadFileTask$2: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.FlipboardActivity: void startActivityForResult(android.content.Intent,int)>
	++ <com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: void a(java.lang.Object)>
	++ <flipboard.gui.actionbar.FLActionBar: android.view.View a(flipboard.gui.actionbar.FLActionBar$HomeButtonStyle)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer c(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,double)>
	++ <flipboard.activities.AudioPlayerActivity: void I()>
	++ <flipboard.service.FlipboardManager$33: void <init>(flipboard.service.FlipboardManager,java.lang.String,flipboard.service.Flap$JSONResultObserver)>
	++ <com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty: void a(java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.util.Format$Exception: void <init>(java.lang.String,java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.node.IntNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.AbstractTypeResolver)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.notifications.FLNotification$NotificationThumb: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.activities.FlipboardActivity: java.lang.String l()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeDeserializer a(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>
	++ <flipboard.util.SocialHelper: void c(flipboard.model.ConfigService,flipboard.model.FeedItem,boolean,flipboard.activities.FlipboardActivity,flipboard.service.Section)>
	++ <flipboard.util.Format: void <init>(java.lang.String,java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.SerializerProvider: void a(long,com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer f()>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer b(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JavaType b(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException b(java.lang.Class,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase a(java.lang.String[])>
	++ <com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.Collection a(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector)>
	++ <com.fasterxml.jackson.databind.ser.std.CollectionSerializer: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase a(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <flipboard.activities.ContentDrawerPhoneActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.node.ObjectNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double: com.fasterxml.jackson.databind.JsonSerializer a(java.lang.Class)>
	++ <flipboard.gui.grid.DragDropGrid: boolean onLongClick(android.view.View)>
	++ <flipboard.service.FlipboardManager: void b(java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <flipboard.gui.actionbar.FLActionBar: void setMenu(flipboard.gui.actionbar.FLActionBarMenu)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty: void a(java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.type.MapLikeType i(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean a(com.fasterxml.jackson.core.JsonParser)>
	++ <com.fasterxml.jackson.core.base.ParserBase: com.fasterxml.jackson.core.JsonLocation k()>
	++ <flipboard.service.Section: void a(flipboard.model.FeedItem,flipboard.service.Section$UpdateObserver)>
	++ <flipboard.io.FunnelUsageEvent: void a(java.lang.String,java.util.Map)>
	++ <flipboard.service.Flap: void a(flipboard.service.User,flipboard.model.ConfigService,java.lang.String,flipboard.service.Flap$SectionListObserver)>
	++ <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: java.lang.Object d()>
	++ <flipboard.util.AndroidUtil: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator)>
	++ <flipboard.service.audio.FLAudioManager: void a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver: com.fasterxml.jackson.databind.JavaType a(java.lang.String,com.fasterxml.jackson.databind.type.TypeFactory)>
	++ <flipboard.gui.FLSearchView: void setSearchQuery(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.ser.AnyGetterWriter: void a(java.lang.Object,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.helpshift.util.HSNotification: java.lang.String a(android.content.Context)>
	++ <com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int b(java.lang.String,int)>
	++ <com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers a(android.content.Context)>
	++ <com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext a(com.fasterxml.jackson.databind.deser.DeserializerFactory)>
	++ <net.hockeyapp.android.tasks.DownloadFileTask: java.lang.Object doInBackground(java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void p()>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object a(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <se.emilsjolander.stickylistheaders.StickyListHeadersListView$WrapperListScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>
	++ <flipboard.activities.ContentDrawerPhoneActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.gui.section.ProfileFragmentScrolling: void b(flipboard.gui.section.ProfileFragmentScrolling)>
	++ <com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext b(com.fasterxml.jackson.core.json.DupDetector)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer b(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues a(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>
	++ <flipboard.service.Section: boolean y()>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty: void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,com.fasterxml.jackson.databind.PropertyMetadata)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat i()>
	++ <com.helpshift.HSMessagesFragment: void c(int)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: com.fasterxml.jackson.databind.jsontype.TypeDeserializer a(com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>
	++ <com.helpshift.HSFunnel: void b(java.lang.String)>
	++ <flipboard.gui.item.ImageDetailView: void a(float,float,float,float,float,float)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void b(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.service.Flap$LengthenUrlRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.activities.ReportIssueActivity: void onCreate(android.os.Bundle)>
	++ <com.helpshift.HSApiData: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <flipboard.activities.DetailActivity$16: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int a(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)>
	++ <net.hockeyapp.android.Tracking: long a(android.content.Context)>
	++ <flipboard.gui.ContentDrawerView$8: void <init>(flipboard.service.Section)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void b(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)>
	++ <flipboard.gui.section.item.ProfileBioItem: flipboard.service.Section a(flipboard.gui.section.item.ProfileBioItem)>
	++ <com.fasterxml.jackson.databind.ser.std.RawSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer a(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>
	++ <com.helpshift.HSStorage: void b(java.lang.String,java.lang.String)>
	++ <flipboard.gui.FLLabelTextView: void setText(java.lang.CharSequence)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.JavaType c(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType b(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: void a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: int a(java.lang.Class,boolean)>
	++ <flipboard.gui.FLToast: void b(flipboard.activities.FlipboardActivity,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <net.hockeyapp.android.tasks.DownloadFileTask: net.hockeyapp.android.listeners.DownloadFileListener a(net.hockeyapp.android.tasks.DownloadFileTask)>
	++ <flipboard.model.FeedItem: boolean isImage()>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.activities.ContentDrawerTabletActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <com.facebook.widget.LoginButton: java.lang.String h(com.facebook.widget.LoginButton)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void b(com.fasterxml.jackson.core.SerializableString)>
	++ <flipboard.gui.personal.NotificationsFragment$SectionsAndAccountObserver: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken a(int,boolean)>
	++ <net.hockeyapp.android.tasks.DownloadFileTask$2: void <init>(net.hockeyapp.android.tasks.DownloadFileTask)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken e(int)>
	++ <flipboard.gui.item.InFeedExpandableModuleHead$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager$28: void a(java.lang.String)>
	++ <flipboard.model.UserState$State: void <init>(flipboard.model.UserState$State)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void a(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.activities.FlipboardDreamSettings: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object e(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.util.JavaUtil: java.lang.String b(long)>
	++ <flipboard.service.ContentDrawerHandler: void a(flipboard.service.ContentDrawerHandler,java.util.List)>
	++ <com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String f()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeSerializer a(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)>
	++ <flipboard.activities.SearchTabletActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.type.MapLikeType g(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase a(java.util.HashSet)>
	++ <flipboard.model.ContentDrawerListItemHeader: void <init>(java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId a(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver)>
	++ <com.fasterxml.jackson.core.json.JsonGeneratorImpl: void a(java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi: com.fasterxml.jackson.databind.JsonSerializer a(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.util.ArrayBuilders: java.util.HashSet a(java.util.Set,java.lang.Object[])>
	++ <flipboard.service.Flap$FollowListType: flipboard.service.Flap$FollowListType valueOf(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)>
	++ <flipboard.service.Flap$UserStateRequest: flipboard.service.Flap$StateRequest a(int,flipboard.service.Flap$TypedResultObserver)>
	++ <flipboard.gui.item.CoverSectionItemTablet$2: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.ser.ContainerSerializer: boolean a_(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.model.ContentDrawerListItemBase: void setTitle(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void c(int)>
	++ <flipboard.service.Flap$FollowRequest: void <init>(flipboard.service.Flap,flipboard.service.User,flipboard.service.Section,flipboard.model.FeedItem,boolean)>
	++ <flipboard.util.Format$CharBuf: void a(char,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.DatabindContext: com.fasterxml.jackson.databind.util.Converter a(java.lang.Object)>
	++ <flipboard.service.FlipboardManager$31: void a(java.lang.String,byte[],boolean)>
	++ <com.facebook.Session$OpenRequest: void <init>(android.support.v4.app.Fragment)>
	++ <flipboard.util.YouTubeHelper: void <clinit>()>
	++ <flipboard.service.ContentDrawerHandler: java.util.List a(java.util.List)>
	++ <flipboard.gui.toc.TileContainer$2$2: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.ContentDrawerTabletActivity: void a(flipboard.activities.ContentDrawerTabletActivity,flipboard.service.Section,java.util.List)>
	++ <com.fasterxml.jackson.databind.deser.SettableAnyProperty: com.fasterxml.jackson.databind.deser.SettableAnyProperty a(com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator: void <init>(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty a(java.lang.String)>
	++ <com.facebook.Session: void b(com.facebook.Session$OpenRequest)>
	++ <com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator: void <init>(java.lang.Class)>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,java.lang.String,android.os.Bundle)>
	++ <flipboard.service.ContentDrawerHandler: void c()>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: com.fasterxml.jackson.databind.ser.ContainerSerializer a(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection)>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: void <init>(java.lang.Class,boolean)>
	++ <flipboard.service.Section: java.lang.String c()>
	++ <flipboard.model.ConfigSection: void <init>()>
	++ <com.fasterxml.jackson.databind.ser.std.IterableSerializer: com.fasterxml.jackson.databind.ser.ContainerSerializer a(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <flipboard.gui.personal.TocSubEmptyStateView: void onClick(android.view.View)>
	++ <flipboard.gui.section.MagazineLikesDialog$Adapter$1: void onClick(android.view.View)>
	++ <flipboard.util.Log: void b(java.lang.String,java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.DeserializationContext: java.lang.String j()>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer: com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer a(java.text.DateFormat,java.lang.String)>
	++ <flipboard.service.Section: void <init>(flipboard.model.TocSection)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser: long[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.ser.std.EnumSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)>
	++ <flipboard.activities.DetailActivity$6: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)>
	++ <com.helpshift.HSStorage: java.lang.String c(java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(com.fasterxml.jackson.core.JsonToken)>
	++ <com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription a(com.fasterxml.jackson.databind.JavaType)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <flipboard.util.AndroidUtil: void a(android.view.ViewGroup,java.lang.Class,flipboard.util.Callback)>
	++ <com.squareup.otto.HandlerFinder$1: java.util.Map b(java.lang.Object)>
	++ <flipboard.service.FlipboardManager$9: void onReceive(android.content.Context,android.content.Intent)>
	++ <flipboard.activities.ServiceSettingsActivity: java.lang.String b(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void b(com.fasterxml.jackson.databind.ser.Serializers)>
	++ <flipboard.service.FlipboardManager: void a(flipboard.service.Section,java.util.List)>
	++ <flipboard.model.FeedItem: java.lang.String getPartnerID()>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.service.Flap$ReplyRequest: void <init>(flipboard.service.Flap,flipboard.model.CommentaryResult$CommentType,flipboard.service.User,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.gcm.ClearNotificationReciever: void onReceive(android.content.Context,android.content.Intent)>
	++ <flipboard.model.TocSection: void setImage(java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType d(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator: long a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,double)>
	++ <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.StringArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.core.JsonGenerator: void g(java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.lang.String a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class c(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.JavaType a(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object g(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.DetailActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType b(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.type.ArrayType: java.lang.String p()>
	++ <com.fasterxml.jackson.databind.module.SimpleSerializers: void a(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.core.base.GeneratorBase: void d(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser: float[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Flap$ShortenSectionRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.fasterxml.jackson.databind.introspect.AnnotatedWithParams: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.List,boolean,boolean)>
	++ <com.fasterxml.jackson.core.io.NumberOutput: int a(long,byte[],int)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer d(com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.service.FlipboardManager: flipboard.model.ConfigService f(java.lang.String)>
	++ <flipboard.gui.actionbar.FLActionBarMenu: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,flipboard.model.FeedItem,flipboard.gui.actionbar.FLActionBar$FLActionBarButtonStyle,boolean,flipboard.model.FeedItem)>
	++ <flipboard.gui.FLSearchView: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
	++ <flipboard.activities.MuteActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.service.FlCrashListener: java.lang.String a()>
	++ <com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.JavaType c(java.lang.Class)>
	++ <flipboard.model.FLObject: void set(java.lang.String,java.lang.String)>
	++ <flipboard.service.User: boolean c()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase a(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>
	++ <flipboard.gui.FLEditText: void a(boolean)>
	++ <flipboard.gui.personal.NotificationsFragment: void a(flipboard.service.Section)>
	++ <flipboard.activities.FlipboardFragment: void a(android.content.Intent)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.User: void a(flipboard.model.FLObject)>
	++ <flipboard.gcm.FlipboardGCMIntentService: java.lang.String a(int)>
	++ <flipboard.gui.toc.TileContainer$2$1: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.model.ContentDrawerListItemSection: void <init>()>
	++ <com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: double A()>
	++ <flipboard.activities.AlsoFlippedFragment: java.lang.String a(flipboard.activities.AlsoFlippedFragment)>
	++ <flipboard.activities.GenericDialogFragmentActivity: void b(flipboard.activities.GenericDialogFragmentActivity,flipboard.model.Magazine)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: java.lang.Number s()>
	++ <flipboard.activities.CreateMagazineFragment: void <init>()>
	++ <com.fasterxml.jackson.databind.ser.std.CalendarSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)>
	++ <flipboard.activities.AudioPlayerActivity$3: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.facebook.Session: void a(com.facebook.Session)>
	++ <flipboard.util.Log: void b(java.lang.Throwable)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: void a(com.fasterxml.jackson.core.JsonGenerator)>
	++ <com.facebook.Session$OpenRequest: void <init>(android.app.Activity)>
	++ <com.fasterxml.jackson.databind.exc.PropertyBindingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection)>
	++ <com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator a(java.io.Writer)>
	++ <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.JavaType d(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap: com.fasterxml.jackson.databind.deser.SettableBeanProperty a(java.lang.String,int)>
	++ <flipboard.activities.VideoActivity: void onConfigurationChanged(android.content.res.Configuration)>
	++ <flipboard.activities.TOCActivity$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: boolean a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void b(com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.service.Flap$CreateMagazineRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.activities.FlipboardActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
	++ <com.fasterxml.jackson.databind.type.CollectionLikeType: boolean g()>
	++ <com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <flipboard.activities.ContentDrawerPhoneActivity$4: void onAnimationEnd(android.view.animation.Animation)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)>
	++ <flipboard.activities.SwitchContentGuideActivity: void d(flipboard.activities.SwitchContentGuideActivity)>
	++ <flipboard.model.FLObject: flipboard.model.FLObject getObject(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.MapSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.facebook.AppEventsLogger: com.facebook.AppEventsLogger$SessionEventsState a(android.content.Context,com.facebook.AppEventsLogger$AccessTokenAppIdPair)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType a(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>
	++ <net.hockeyapp.android.UpdateActivity$2: void <init>(net.hockeyapp.android.UpdateActivity)>
	++ <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: boolean a(java.lang.Object)>
	++ <net.hockeyapp.android.UpdateManager: java.lang.Boolean a()>
	++ <net.hockeyapp.android.tasks.DownloadFileTask$1: void <init>(net.hockeyapp.android.tasks.DownloadFileTask)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)>
	++ <com.fasterxml.jackson.databind.ser.impl.WritableObjectId: boolean a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>
	++ <flipboard.gui.section.SectionFragment$20: java.lang.String a()>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object j(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <flipboard.gui.SocialFormatter: java.lang.String f(android.content.Context,flipboard.model.ConfigService)>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode a(double)>
	++ <com.fasterxml.jackson.databind.node.BooleanNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)>
	++ <com.fasterxml.jackson.databind.ser.BeanSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[])>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer c(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>
	++ <com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig a(com.fasterxml.jackson.databind.deser.Deserializers)>
	++ <flipboard.io.NetworkManager: void <init>(android.content.Context,java.net.CookieManager)>
	++ <com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean a(java.lang.Class,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer: java.lang.Enum c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.node.TextNode: void a(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.gui.FLBitmapView: void setBitmap(int)>
	++ <flipboard.widget.FlipboardWidgetManager: void <clinit>()>
	++ <com.fasterxml.jackson.core.util.ByteArrayBuilder: void b(int)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(short)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD: java.lang.Object a(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.SyncJob$4: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider a(com.fasterxml.jackson.databind.SerializationConfig)>
	++ <com.helpshift.util.HSNotification: void a(android.content.Context,java.lang.String,int,int,java.lang.String,java.lang.String)>
	++ <flipboard.util.Format: void a(java.lang.RuntimeException)>
	++ <flipboard.model.FeedSectionLink: void <init>(flipboard.model.FeedItem)>
	++ <flipboard.activities.ContentDrawerActivity: void j()>
	++ <flipboard.service.RemoteWatchedFile: void <init>(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object i(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.squareup.otto.AnnotatedHandlerFinder: java.util.Map a(java.lang.Object)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: java.lang.String h()>
	++ <net.hockeyapp.android.UpdateFragment: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType b(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.ProfilePage$1: void onClick(android.view.View)>
	++ <flipboard.service.ContentDrawerHandler$3: void a(java.lang.String)>
	++ <flipboard.remoteservice.MessengerService$IncomingHandler$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] a(com.fasterxml.jackson.core.Base64Variant)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(java.math.BigDecimal)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: byte[] a(com.fasterxml.jackson.core.Base64Variant)>
	++ <com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.gui.FLBitmapView: void a(flipboard.io.Download,android.graphics.Point)>
	++ <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: java.lang.Object g()>
	++ <com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void g(com.fasterxml.jackson.core.JsonGenerator)>
	++ <net.hockeyapp.android.UpdateActivity: void a()>
	++ <com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <net.hockeyapp.android.Constants: int a(android.content.Context,android.content.pm.PackageManager)>
	++ <com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.helpshift.util.HSRes: int c(android.content.Context,java.lang.String)>
	++ <com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig a(com.fasterxml.jackson.databind.ser.Serializers)>
	++ <flipboard.util.Observable: void c(flipboard.util.Observer)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.deser.ValueInstantiators)>
	++ <com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.JavaType b(java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object e(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.ActivityFetcher: void a(java.util.List,flipboard.service.Flap$CommentaryObserver)>
	++ <com.helpshift.HSFaqsFragment$2: void onClick(android.view.View)>
	++ <flipboard.gui.InlineFlipUIController: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.activities.TOCActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter a(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers: com.fasterxml.jackson.databind.JsonDeserializer a(java.lang.Class,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.service.User: boolean t()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.activities.LoginActivity$9$3$2: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty: com.fasterxml.jackson.databind.JsonSerializer a(java.lang.Class)>
	++ <flipboard.service.User: void a(flipboard.util.Observer)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Short n(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.json.JsonWriteContext: void a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.deser.impl.InnerClassProperty: void a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.gui.dialog.FLAlertDialog$Builder: android.app.AlertDialog$Builder a(java.lang.CharSequence,android.content.DialogInterface$OnClickListener,int,int)>
	++ <com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter: int getItemViewType(int)>
	++ <flipboard.gui.item.ImageDetailView: void a(android.graphics.PointF,android.view.MotionEvent)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String D()>
	++ <com.fasterxml.jackson.core.JsonParser: void a(java.lang.Object)>
	++ <com.helpshift.util.HSRes: int b(android.content.Context,java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.service.User: void a(java.util.List,boolean)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.activities.ReadLaterActivity$ReadLaterAdapter: void <init>(flipboard.activities.ReadLaterActivity)>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void a(float)>
	++ <com.helpshift.ScreenshotPreviewActivity: void onActivityResult(int,int,android.content.Intent)>
	++ <flipboard.service.User: flipboard.service.Section a(flipboard.service.Section,boolean,java.lang.String)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void e(java.lang.Object)>
	++ <flipboard.service.audio.MediaPlayerService: void b(java.lang.String)>
	++ <flipboard.activities.ServiceSettingsActivity: void a(flipboard.activities.ServiceSettingsActivity,java.lang.reflect.Field,java.lang.Object)>
	++ <flipboard.activities.SocialCardFragment: void send(android.view.View)>
	++ <flipboard.activities.SwitchContentGuideActivity$1: void a(java.lang.String,byte[],boolean)>
	++ <com.helpshift.HSApiData: java.lang.Boolean a(java.lang.String,com.helpshift.HSApiData$HS_ISSUE_CSAT_STATE)>
	++ <com.fasterxml.jackson.databind.ObjectReader: java.lang.Object a(java.io.InputStream)>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int a(java.lang.String,int)>
	++ <flipboard.activities.ChooseAccountActivity$ChooseAccountViewFlipper: void <init>(flipboard.activities.ChooseAccountActivity,android.content.Context)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.User: void r()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.exc.IgnoredPropertyException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection)>
	++ <com.fasterxml.jackson.databind.PropertyName: void <init>(java.lang.String)>
	++ <flipboard.util.SocialHelper: void a(flipboard.model.FeedItem,flipboard.service.Section,flipboard.activities.FlipboardActivity,flipboard.model.UsageEventV2$SocialCardNavFrom)>
	++ <flipboard.gui.actionbar.FLActionBarMenuItem: void a(flipboard.gui.actionbar.FLActionBar$FLActionBarButtonStyle)>
	++ <com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: com.fasterxml.jackson.databind.JavaType a(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)>
	++ <flipboard.service.FacebookDeepLinkHandler: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer: java.util.EnumSet c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator: com.fasterxml.jackson.databind.deser.CreatorProperty a(java.lang.String,com.fasterxml.jackson.databind.JavaType,int)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.helpshift.HSReviewFragment: java.lang.String a(com.helpshift.HSReviewFragment)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: void a(com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer: java.lang.Enum a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>
	++ <flipboard.io.BitmapManager$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.ser.impl.WritableObjectId a(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.cfg.MapperConfig a()>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Section: boolean a(flipboard.service.Section)>
	++ <flipboard.gui.toc.TOCView: void a(boolean)>
	++ <flipboard.activities.SwitchContentGuideActivity: void a(flipboard.activities.SwitchContentGuideActivity,java.util.List,boolean)>
	++ <com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.service.FlipboardUrlHandler: boolean a(android.content.Context,android.net.Uri,android.os.Bundle,android.content.Intent)>
	++ <com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ser.std.ToStringSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.service.User: flipboard.service.Account b(java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object[] a(java.lang.Object[],java.lang.Object)>
	++ <flipboard.activities.ChooseAccountActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: java.lang.Object[] d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.type.TypeBindings: void <init>(com.fasterxml.jackson.databind.type.TypeFactory,java.lang.Class)>
	++ <flipboard.activities.JsonExplorer: android.content.Intent a(flipboard.activities.JsonExplorer$DisplayType,java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.IterableSerializer: void b(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer a(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.String a()>
	++ <com.helpshift.HSMessagesFragment: void a(java.lang.String,java.lang.Boolean,int)>
	++ <flipboard.sstream.SstreamBroadcastReceiver: void a(flipboard.sstream.SstreamBroadcastReceiver,flipboard.service.User,java.lang.String,java.lang.String)>
	++ <flipboard.service.Flap: void a(flipboard.model.CommentaryResult$CommentType,flipboard.service.User,flipboard.service.Section,flipboard.model.FeedItem,java.lang.String,flipboard.service.ServiceReloginObserver)>
	++ <flipboard.activities.AudioPlayerActivity: void r()>
	++ <flipboard.service.TrackedRunnable$1: java.lang.String a()>
	++ <flipboard.gui.dialog.FLDialogFragment: void a(android.support.v4.app.FragmentManager,java.lang.String)>
	++ <flipboard.service.User: void a(flipboard.model.ConfigFirstLaunch,int,java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType a(java.lang.reflect.Type)>
	++ <flipboard.gui.section.AttributionServiceInfo$3: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager$30: void a(java.lang.String,byte[],boolean)>
	++ <com.squareup.otto.AnnotatedHandlerFinder: java.util.Map b(java.lang.Object)>
	++ <flipboard.activities.ContentDrawerActivity: void b(android.app.Activity)>
	++ <com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BasicDeserializerFactory: com.fasterxml.jackson.databind.deser.DeserializerFactory a(com.fasterxml.jackson.databind.deser.ValueInstantiators)>
	++ <flipboard.samsung.spen.TOCSectionPreview: void onClick(android.view.View)>
	++ <flipboard.service.Section$UpdateObserver$2$1: java.lang.String a()>
	++ <flipboard.activities.AudioPlayerActivity: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.ContentDrawerHandler$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String n()>
	++ <flipboard.util.AndroidUtil: flipboard.gui.dialog.FLProgressDialogFragment a(flipboard.activities.FlipboardActivity,java.lang.String)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>
	++ <flipboard.activities.ContentDrawerActivity: void a(android.app.Activity,java.lang.String)>
	++ <com.fasterxml.jackson.databind.node.BigIntegerNode: com.fasterxml.jackson.databind.node.BigIntegerNode a(java.math.BigInteger)>
	++ <com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <flipboard.activities.AudioPlayerActivity: void H()>
	++ <flipboard.service.Flap$ShareRequest: void <init>(flipboard.service.Flap,flipboard.service.User,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.io.UsageManager: void a(java.lang.Thread,java.lang.Throwable,boolean)>
	++ <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.service.Section: void <init>(flipboard.model.FirstRunSection,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.String e()>
	++ <com.fasterxml.jackson.databind.JavaType: void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException a(java.lang.Class,com.fasterxml.jackson.core.JsonToken)>
	++ <flipboard.gui.ContentDrawerView: void setPageKey(java.lang.String)>
	++ <flipboard.gui.item.ImageDetailView: float b(float,float)>
	++ <com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.String)>
	++ <flipboard.activities.SocialCardFragment$1: void onClick(android.view.View)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask: void a(net.hockeyapp.android.tasks.CheckUpdateTask,org.json.JSONArray,java.lang.Boolean)>
	++ <com.fasterxml.jackson.databind.DatabindContext: com.fasterxml.jackson.databind.JavaType a(java.lang.reflect.Type)>
	++ <flipboard.gui.item.RssDetailView: void a(java.lang.String)>
	++ <flipboard.remoteservice.RemoteServiceUtil: java.lang.String a(java.lang.String,java.util.Locale,flipboard.remoteservice.FLFeedItemContentProvider$ContentType)>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>
	++ <flipboard.activities.FlipboardActivity: void onCreate(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void a(com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.JavaType a(java.lang.Object)>
	++ <flipboard.service.FlipboardManager$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.util.Format: void b(java.lang.String,java.lang.Object[])>
	++ <flipboard.service.Flap: flipboard.service.Flap$CreateAccountRequest createAccount(flipboard.service.User,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,flipboard.service.Flap$AccountRequestObserver)>
	++ <com.fasterxml.jackson.core.json.DupDetector: com.fasterxml.jackson.core.json.DupDetector a(com.fasterxml.jackson.core.JsonParser)>
	++ <com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.core.JsonParseException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>
	++ <com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty: void a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.core.util.DefaultPrettyPrinter: void h(com.fasterxml.jackson.core.JsonGenerator)>
	++ <flipboard.activities.LogOutActivity: void onCreate(android.os.Bundle)>
	++ <flipboard.service.Section: java.lang.String d()>
	++ <com.fasterxml.jackson.core.json.UTF8JsonGenerator: void j()>
	++ <com.fasterxml.jackson.core.base.ParserBase: com.fasterxml.jackson.core.JsonParser a(com.fasterxml.jackson.core.JsonParser$Feature)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: double[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: long a(byte[],int)>
	++ <com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey: int a(com.fasterxml.jackson.databind.JavaType,boolean)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void b(char[],int,int)>
	++ <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.type.CollectionType a(java.lang.Class,com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.json.JsonSerializable: void <init>()>
	++ <flipboard.service.Flap: void a(flipboard.model.CommentaryResult$CommentType,flipboard.service.User,java.lang.String,java.lang.String,flipboard.service.ServiceReloginObserver)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: boolean a(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FLSearchManager: void a(java.lang.String,flipboard.service.Flap$SearchType,flipboard.service.Flap$SearchObserver,java.lang.String,int)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object b(int)>
	++ <flipboard.service.Section: void a(java.util.List)>
	++ <com.helpshift.HSApiData: void <init>(android.content.Context)>
	++ <com.fasterxml.jackson.core.Base64Variant: int c()>
	++ <com.helpshift.HSMessagesFragment$8: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: java.lang.Object b()>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: java.lang.Object b(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.util.SocialHelper: void a(flipboard.activities.FlipboardActivity,flipboard.model.ConfigService,flipboard.util.SocialHelper$ServiceLoginObserver)>
	++ <flipboard.gui.section.SectionPage$3: java.lang.String a()>
	++ <fr.castorflex.android.verticalviewpager.VerticalViewPager: void setCurrentItem$2563266(int)>
	++ <flipboard.util.Log: void <init>(java.lang.String,flipboard.util.Log$Level,boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int a(java.lang.String,char)>
	++ <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: void a(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: void <init>(java.lang.Class,int)>
	++ <com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.util.Map$Entry c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Section: void <init>(flipboard.model.FeedSectionLink)>
	++ <flipboard.gui.CommentaryList: void onClick(android.view.View)>
	++ <flipboard.activities.ContentDrawerActivity: void a(android.app.Activity,android.content.Intent)>
	++ <flipboard.util.Format$CharBuf: boolean a(java.lang.Throwable,boolean,int)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>
	++ <com.fasterxml.jackson.databind.type.TypeFactory: void <clinit>()>
	++ <flipboard.gui.personal.NotificationsFragment$AccountLoginViewClickHandler$$ViewInjector$2: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.BeanDescription c(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.activities.SearchTabletActivity: java.lang.String k()>
	++ <com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void b(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
	++ <com.fasterxml.jackson.databind.ser.std.ToStringSerializer: void a(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
	++ <flipboard.service.FlipboardManager$SearchUserRequest: void <init>(flipboard.service.FlipboardManager)>
	++ <flipboard.service.FlipboardManager$29: void a(java.lang.String)>
	++ <flipboard.json.JsonSerializationWrapper: void <clinit>()>
	++ <com.fasterxml.jackson.core.io.NumberInput: void <clinit>()>
	++ <com.fasterxml.jackson.databind.JsonSerializer: boolean a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.lang.Object a(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig a(com.fasterxml.jackson.databind.AbstractTypeResolver)>
	++ <flipboard.service.audio.FLAudioManager: void b(java.lang.String)>
	++ <flipboard.activities.ContentDrawerTabletActivity: java.lang.String k()>
	++ <com.fasterxml.jackson.core.io.NumberOutput: int a(long,char[],int)>
	++ <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer b(com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.introspect.BasicBeanDescription: com.fasterxml.jackson.databind.introspect.BasicBeanDescription forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>
	++ <flipboard.service.Section: flipboard.model.FeedItem a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase: com.fasterxml.jackson.databind.JsonSerializer a(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
	++ <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int a(java.io.InputStream,byte[],int,int,int)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Class findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.ObjectReader: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.activities.CategoryPickerFragment$1: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.gui.personal.TocGridFragment$2: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <com.helpshift.util.HSRes: java.lang.String a(android.content.Context,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken e(int)>
	++ <com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Class findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>
Graph Visualizing for this DP...

(13/20) Printing..
+ DP Stmt : $r13 = interfaceinvoke $r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r9)
+ DP SootMethod : <com.helpshift.HSApiClient$1: void run()>
+ EPs (15) :
	+<com.helpshift.HSApiClient$1: void run()>
	+<com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
	+<com.google.android.gms.tagmanager.ay: void b(android.content.Context,java.lang.String)>
	+<com.helpshift.HSApiData$1: void handleMessage(android.os.Message)>
	+<com.google.android.gms.tagmanager.ay: void a(android.content.Context,java.lang.String)>
	+<com.google.android.gms.tagmanager.d: void a(java.util.Map)>
	+<com.helpshift.HSMessagesFragment: void b()>
	+<com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	+<com.android.debug.hv.ViewServer: boolean a()>
	+<com.google.android.gms.tagmanager.cz: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
	+<com.helpshift.HSActivity: void e()>
	+<com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	+<com.helpshift.HSApiData: void j()>
	+<com.helpshift.HSSearch: void a()>
	+<com.google.android.gms.tagmanager.InstallReferrerService: void onHandleIntent(android.content.Intent)>
+ Taint Methods : 
	++ <com.helpshift.HSActivity$1: void <init>(com.helpshift.HSActivity)>
	++ <com.helpshift.HSApiClient: java.lang.String a(java.lang.Object)>
	++ <com.helpshift.HSApiClient: java.util.HashMap a(java.util.HashMap,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.util.HashMap a(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String c(java.lang.String)>
	++ <com.helpshift.exceptions.InstallException: void <init>(java.lang.String)>
	++ <com.helpshift.HSApiClient$1: void run()>
	++ <com.helpshift.util.HSTimeUtil: java.lang.String a(java.lang.Float)>
	++ <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
	++ <org.apache.http.client.methods.HttpRequestBase: void <init>()>
	++ <com.helpshift.HSMessagesFragment$7: void <init>(com.helpshift.HSMessagesFragment)>
	++ <com.google.android.gms.tagmanager.ay: void b(android.content.Context,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String a(com.helpshift.HSApiClient,java.lang.String)>
	++ <com.helpshift.HSApiData$1: void handleMessage(android.os.Message)>
	++ <com.helpshift.HSStorage: java.lang.String h(java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String a(java.util.HashMap)>
	++ <com.helpshift.HSStorage: java.lang.Float j()>
	++ <org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
	++ <com.google.android.gms.tagmanager.ay: void a(android.content.Context,java.lang.String)>
	++ <com.google.android.gms.tagmanager.d: void a(java.util.Map)>
	++ <org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.util.List b(java.util.HashMap)>
	++ <com.helpshift.HSApiData$14: void <init>(com.helpshift.HSApiData)>
	++ <com.helpshift.HSMessagesFragment: void b()>
	++ <org.json.JSONArray: void <init>(java.util.Collection)>
	++ <com.squareup.okhttp.internal.Util: java.util.concurrent.ThreadFactory a(java.lang.String,boolean)>
	++ <com.helpshift.HSApiClient: java.lang.String b(java.lang.String)>
	++ <com.squareup.okhttp.internal.Util$1: void <init>(java.lang.String,boolean)>
	++ <com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	++ <org.apache.http.message.AbstractHttpMessage: void <init>()>
	++ <com.android.debug.hv.ViewServer: boolean a()>
	++ <com.helpshift.HSApiClient: java.lang.String a(byte[])>
	++ <com.google.android.gms.tagmanager.cz: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSActivity: void e()>
	++ <com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
	++ <com.helpshift.HSApiData$1$1: void <init>(com.helpshift.HSApiData$1)>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection: void <clinit>()>
	++ <com.squareup.okhttp.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>
	++ <com.helpshift.HSApiClient$1: void <init>(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String,android.os.Handler,android.os.Handler)>
	++ <java.lang.Thread: void run()>
	++ <org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>
	++ <com.helpshift.HSApiData: void j()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection)>
	++ <com.helpshift.HSSearch: void a()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,byte)>
	++ <com.helpshift.HSApiClient$2: void <init>(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String,android.os.Handler,android.os.Handler)>
	++ <com.google.android.gms.tagmanager.InstallReferrerService: void onHandleIntent(android.content.Intent)>
	++ <com.helpshift.HSSearch$1: void <init>()>
Graph Visualizing for this DP...

(14/20) Printing..
+ DP Stmt : $r25 = virtualinvoke $r15.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
+ DP SootMethod : <com.helpshift.HSApiClient$2: void run()>
+ EPs (14) :
	+<com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	+<com.android.debug.hv.ViewServer: boolean a()>
	+<com.google.android.gms.tagmanager.cz: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
	+<com.helpshift.HSActivity: void e()>
	+<com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	+<com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
	+<com.helpshift.HSApiClient$2: void run()>
	+<com.google.android.gms.tagmanager.ay: void b(android.content.Context,java.lang.String)>
	+<com.helpshift.HSApiData$1: void handleMessage(android.os.Message)>
	+<com.google.android.gms.tagmanager.ay: void a(android.content.Context,java.lang.String)>
	+<com.helpshift.HSApiData: void j()>
	+<com.helpshift.HSMessagesFragment: void b()>
	+<com.helpshift.HSSearch: void a()>
	+<com.google.android.gms.tagmanager.InstallReferrerService: void onHandleIntent(android.content.Intent)>
+ Taint Methods : 
	++ <com.helpshift.HSApiClient: java.lang.String b(java.lang.String)>
	++ <com.helpshift.HSActivity$1: void <init>(com.helpshift.HSActivity)>
	++ <com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	++ <com.android.debug.hv.ViewServer: boolean a()>
	++ <com.helpshift.HSApiClient: java.util.HashMap a(java.util.HashMap,java.lang.String,java.lang.String)>
	++ <com.google.android.gms.tagmanager.cz: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String c(java.lang.String)>
	++ <com.helpshift.HSApiClient: java.util.HashMap a(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String)>
	++ <com.helpshift.exceptions.InstallException: void <init>(java.lang.String)>
	++ <com.helpshift.HSActivity: void e()>
	++ <com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
	++ <com.helpshift.HSApiData$1$1: void <init>(com.helpshift.HSApiData$1)>
	++ <com.helpshift.HSMessagesFragment$7: void <init>(com.helpshift.HSMessagesFragment)>
	++ <com.helpshift.HSApiClient$2: void run()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection: void <clinit>()>
	++ <com.google.android.gms.tagmanager.ay: void b(android.content.Context,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String a(com.helpshift.HSApiClient,java.lang.String)>
	++ <com.helpshift.HSApiData$1: void handleMessage(android.os.Message)>
	++ <com.squareup.okhttp.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>
	++ <com.helpshift.HSApiClient$1: void <init>(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String,android.os.Handler,android.os.Handler)>
	++ <java.lang.Thread: void run()>
	++ <com.google.android.gms.tagmanager.ay: void a(android.content.Context,java.lang.String)>
	++ <com.helpshift.HSApiData: void j()>
	++ <com.helpshift.HSApiData$14: void <init>(com.helpshift.HSApiData)>
	++ <com.helpshift.HSMessagesFragment: void b()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection)>
	++ <com.helpshift.HSSearch: void a()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,byte)>
	++ <com.helpshift.HSApiClient$2: void <init>(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String,android.os.Handler,android.os.Handler)>
	++ <com.helpshift.HSApiClient: java.lang.String a(java.lang.String)>
	++ <com.google.android.gms.tagmanager.InstallReferrerService: void onHandleIntent(android.content.Intent)>
	++ <com.squareup.okhttp.internal.Util: java.util.concurrent.ThreadFactory a(java.lang.String,boolean)>
	++ <com.helpshift.HSSearch$1: void <init>()>
Graph Visualizing for this DP...

(15/20) Printing..
+ DP Stmt : $r10 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r9)
+ DP SootMethod : <net.hockeyapp.android.tasks.SendFeedbackTask: java.util.HashMap a(org.apache.http.client.HttpClient)>
+ EPs (1) :
	+<dummyMainClass: void dummyMainMethod(java.lang.String[])>
+ Taint Methods : 
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.List,boolean,boolean)>
	++ <com.helpshift.HSFunnel: void a(java.lang.String,org.json.JSONObject)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.Map)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter$1: void onClick(android.view.View)>
	++ <flipboard.gui.NoContentView$1: void onClick(android.view.View)>
	++ <flipboard.util.SocialHelper: void <clinit>()>
	++ <flipboard.util.AndroidUtil: boolean a(android.content.Context,android.content.Intent)>
	++ <flipboard.gui.SocialBarTablet: void onClick(android.view.View)>
	++ <flipboard.activities.FlipboardActivity: void startActivity(android.content.Intent)>
	++ <org.apache.http.client.methods.HttpRequestBase: void <init>()>
	++ <com.helpshift.HSFunnel: void b(java.lang.String)>
	++ <flipboard.gui.FLEditText: void a(boolean)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager: void b(java.lang.Runnable)>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()>
	++ <flipboard.gui.section.UserListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: java.lang.Object doInBackground(java.lang.Object[])>
	++ <flipboard.service.Section: void <clinit>()>
	++ <net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <net.hockeyapp.android.utils.PrefsUtil: java.lang.String a(android.content.Context)>
	++ <flipboard.util.SocialHelper: void a(flipboard.service.Section,android.content.Context,android.os.Bundle)>
	++ <flipboard.gui.FLEditText: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.service.audio.MediaPlayerService: boolean onError(android.media.MediaPlayer,int,int)>
	++ <flipboard.activities.DetailActivity: void startActivity(android.content.Intent)>
	++ <flipboard.util.Log: void <clinit>()>
	++ <com.helpshift.HSReviewFragment$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,android.os.Bundle)>
	++ <org.apache.http.message.AbstractHttpMessage: void <init>()>
	++ <com.facebook.widget.LoginButton$LoginClickListener: void onClick(android.view.View)>
	++ <net.hockeyapp.android.FeedbackActivity: void a()>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,java.lang.String)>
	++ <flipboard.util.Log: flipboard.util.Log a(java.lang.String)>
	++ <flipboard.util.SocialHelper: void a(flipboard.activities.FlipboardActivity,flipboard.model.ConfigService,flipboard.util.SocialHelper$ServiceLoginObserver)>
	++ <net.hockeyapp.android.Constants: void a(android.content.Context)>
	++ <flipboard.gui.FLToast: void b(flipboard.activities.FlipboardActivity,java.lang.String)>
	++ <com.facebook.AppEventsLogger: void a(java.lang.String,android.os.Bundle)>
	++ <flipboard.activities.ChooseAccountActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.service.User: flipboard.service.Section d(java.lang.String)>
	++ <net.hockeyapp.android.FeedbackActivity: void <init>()>
	++ <flipboard.gui.section.scrolling.header.ProfileCover$MagazineCarouselTileHolder: void onClick(android.view.View)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	++ <net.hockeyapp.android.FeedbackActivity: void onClick(android.view.View)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: java.util.HashMap a(org.apache.http.client.HttpClient)>
	++ <net.hockeyapp.android.FeedbackActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	++ <com.helpshift.HSReviewFragment$2: void onClick(android.content.DialogInterface,int)>
	++ <org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(java.lang.String)>
	++ <com.helpshift.HSReviewFragment$3: void onClick(android.content.DialogInterface,int)>
	++ <org.apache.http.client.methods.HttpPut: void <init>(java.lang.String)>
Graph Visualizing for this DP...

(16/20) Printing..
+ DP Stmt : $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
+ DP SootMethod : <net.hockeyapp.android.tasks.SendFeedbackTask: java.util.HashMap a(org.apache.http.client.HttpClient)>
+ EPs (1) :
	+<dummyMainClass: void dummyMainMethod(java.lang.String[])>
+ Taint Methods : 
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.List,boolean,boolean)>
	++ <com.helpshift.HSFunnel: void a(java.lang.String,org.json.JSONObject)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.Map)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter$1: void onClick(android.view.View)>
	++ <flipboard.util.SocialHelper: void a(android.view.View,flipboard.service.Section,flipboard.model.FeedItem,flipboard.model.FeedItem,flipboard.model.UsageEventV2$SocialCardNavFrom)>
	++ <flipboard.gui.NoContentView$1: void onClick(android.view.View)>
	++ <flipboard.util.SocialHelper: void <clinit>()>
	++ <flipboard.util.AndroidUtil: boolean a(android.content.Context,android.content.Intent)>
	++ <flipboard.gui.SocialBarTablet: void onClick(android.view.View)>
	++ <flipboard.activities.FlipboardActivity: void startActivity(android.content.Intent)>
	++ <org.apache.http.client.methods.HttpRequestBase: void <init>()>
	++ <com.helpshift.HSFunnel: void b(java.lang.String)>
	++ <flipboard.gui.FLEditText: void a(boolean)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager: void b(java.lang.Runnable)>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()>
	++ <flipboard.gui.section.UserListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.facebook.AppEventsLogger: com.facebook.AppEventsLogger a(android.content.Context)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: java.lang.Object doInBackground(java.lang.Object[])>
	++ <flipboard.service.Section: void <clinit>()>
	++ <net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <net.hockeyapp.android.utils.PrefsUtil: java.lang.String a(android.content.Context)>
	++ <flipboard.util.SocialHelper: void a(flipboard.service.Section,android.content.Context,android.os.Bundle)>
	++ <flipboard.gui.FLEditText: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.service.audio.MediaPlayerService: boolean onError(android.media.MediaPlayer,int,int)>
	++ <flipboard.activities.DetailActivity: void startActivity(android.content.Intent)>
	++ <flipboard.util.Log: void <clinit>()>
	++ <com.helpshift.HSReviewFragment$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.gui.personal.TabStripStatic$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager: void i(java.lang.String)>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,android.os.Bundle)>
	++ <org.apache.http.message.AbstractHttpMessage: void <init>()>
	++ <flipboard.gui.toc.TOCPage$SearchBoxOnClickListener: void onClick(android.view.View)>
	++ <com.facebook.widget.LoginButton$LoginClickListener: void onClick(android.view.View)>
	++ <flipboard.activities.VideoAdActivity: void onConfigurationChanged(android.content.res.Configuration)>
	++ <net.hockeyapp.android.FeedbackActivity: void a()>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,java.lang.String)>
	++ <flipboard.util.Log: flipboard.util.Log a(java.lang.String)>
	++ <flipboard.util.SocialHelper: void a(flipboard.activities.FlipboardActivity,flipboard.model.ConfigService,flipboard.util.SocialHelper$ServiceLoginObserver)>
	++ <net.hockeyapp.android.Constants: void a(android.content.Context)>
	++ <flipboard.gui.FLToast: void b(flipboard.activities.FlipboardActivity,java.lang.String)>
	++ <com.facebook.AppEventsLogger: void a(java.lang.String,android.os.Bundle)>
	++ <flipboard.activities.ChooseAccountActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.service.User: flipboard.service.Section d(java.lang.String)>
	++ <flipboard.gui.personal.UserProfile$1: void onClick(android.view.View)>
	++ <net.hockeyapp.android.FeedbackActivity: void <init>()>
	++ <flipboard.gui.section.scrolling.header.ProfileCover$MagazineCarouselTileHolder: void onClick(android.view.View)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	++ <net.hockeyapp.android.FeedbackActivity: void onClick(android.view.View)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: java.util.HashMap a(org.apache.http.client.HttpClient)>
	++ <net.hockeyapp.android.FeedbackActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	++ <flipboard.gui.dialog.FLDialogFragment: void a(android.support.v4.app.FragmentManager,java.lang.String)>
	++ <com.helpshift.HSReviewFragment$2: void onClick(android.content.DialogInterface,int)>
	++ <org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(java.lang.String)>
	++ <com.helpshift.HSReviewFragment$3: void onClick(android.content.DialogInterface,int)>
	++ <org.apache.http.client.methods.HttpPut: void <init>(java.lang.String)>
Graph Visualizing for this DP...

(17/20) Printing..
+ DP Stmt : $r18 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
+ DP SootMethod : <com.helpshift.HSApiClient$1: void run()>
+ EPs (15) :
	+<com.helpshift.HSApiClient$1: void run()>
	+<com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
	+<com.google.android.gms.tagmanager.ay: void b(android.content.Context,java.lang.String)>
	+<com.helpshift.HSApiData$1: void handleMessage(android.os.Message)>
	+<com.google.android.gms.tagmanager.ay: void a(android.content.Context,java.lang.String)>
	+<com.google.android.gms.tagmanager.d: void a(java.util.Map)>
	+<com.helpshift.HSMessagesFragment: void b()>
	+<com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	+<com.android.debug.hv.ViewServer: boolean a()>
	+<com.google.android.gms.tagmanager.cz: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
	+<com.helpshift.HSActivity: void e()>
	+<com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	+<com.helpshift.HSApiData: void j()>
	+<com.helpshift.HSSearch: void a()>
	+<com.google.android.gms.tagmanager.InstallReferrerService: void onHandleIntent(android.content.Intent)>
+ Taint Methods : 
	++ <com.helpshift.HSActivity$1: void <init>(com.helpshift.HSActivity)>
	++ <com.helpshift.HSApiClient: java.lang.String a(java.lang.Object)>
	++ <com.helpshift.HSApiClient: java.util.HashMap a(java.util.HashMap,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.util.HashMap a(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String c(java.lang.String)>
	++ <com.helpshift.exceptions.InstallException: void <init>(java.lang.String)>
	++ <com.helpshift.HSApiClient$1: void run()>
	++ <com.helpshift.util.HSTimeUtil: java.lang.String a(java.lang.Float)>
	++ <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
	++ <org.apache.http.client.methods.HttpRequestBase: void <init>()>
	++ <com.helpshift.HSMessagesFragment$7: void <init>(com.helpshift.HSMessagesFragment)>
	++ <com.google.android.gms.tagmanager.ay: void b(android.content.Context,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String a(com.helpshift.HSApiClient,java.lang.String)>
	++ <com.helpshift.HSApiData$1: void handleMessage(android.os.Message)>
	++ <com.helpshift.HSStorage: java.lang.String h(java.lang.String)>
	++ <com.helpshift.HSApiClient: java.lang.String a(java.util.HashMap)>
	++ <com.helpshift.HSStorage: java.lang.Float j()>
	++ <org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
	++ <com.google.android.gms.tagmanager.ay: void a(android.content.Context,java.lang.String)>
	++ <com.google.android.gms.tagmanager.d: void a(java.util.Map)>
	++ <org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>
	++ <com.helpshift.HSApiClient: java.util.List b(java.util.HashMap)>
	++ <com.helpshift.HSApiData$14: void <init>(com.helpshift.HSApiData)>
	++ <com.helpshift.HSMessagesFragment: void b()>
	++ <org.json.JSONArray: void <init>(java.util.Collection)>
	++ <com.squareup.okhttp.internal.Util: java.util.concurrent.ThreadFactory a(java.lang.String,boolean)>
	++ <com.helpshift.HSApiClient: java.lang.String b(java.lang.String)>
	++ <com.squareup.okhttp.internal.Util$1: void <init>(java.lang.String,boolean)>
	++ <com.helpshift.HSApiClient: void a(java.lang.String,java.lang.String,java.util.HashMap,android.os.Handler,android.os.Handler)>
	++ <org.apache.http.message.AbstractHttpMessage: void <init>()>
	++ <com.android.debug.hv.ViewServer: boolean a()>
	++ <com.helpshift.HSApiClient: java.lang.String a(byte[])>
	++ <com.google.android.gms.tagmanager.cz: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
	++ <com.helpshift.HSActivity: void e()>
	++ <com.helpshift.HSApiClient: void a(android.os.Handler,android.os.Handler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
	++ <com.helpshift.HSApiData$1$1: void <init>(com.helpshift.HSApiData$1)>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection: void <clinit>()>
	++ <com.squareup.okhttp.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>
	++ <com.helpshift.HSApiClient$1: void <init>(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String,android.os.Handler,android.os.Handler)>
	++ <java.lang.Thread: void run()>
	++ <org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>
	++ <com.helpshift.HSApiData: void j()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection)>
	++ <com.helpshift.HSSearch: void a()>
	++ <com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,byte)>
	++ <com.helpshift.HSApiClient$2: void <init>(com.helpshift.HSApiClient,java.util.HashMap,java.lang.String,java.lang.String,android.os.Handler,android.os.Handler)>
	++ <com.google.android.gms.tagmanager.InstallReferrerService: void onHandleIntent(android.content.Intent)>
	++ <com.helpshift.HSSearch$1: void <init>()>
Graph Visualizing for this DP...

(18/20) Printing..
+ DP Stmt : $r7 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r5)
+ DP SootMethod : <net.hockeyapp.android.tasks.SendFeedbackTask: java.util.HashMap b(org.apache.http.client.HttpClient)>
+ EPs (1) :
	+<dummyMainClass: void dummyMainMethod(java.lang.String[])>
+ Taint Methods : 
	++ <flipboard.service.audio.MediaPlayerService: void b(boolean)>
	++ <com.facebook.Session$OpenRequest: com.facebook.Session$OpenRequest b(com.facebook.SessionDefaultAudience)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.List,boolean,boolean)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud: void a(java.util.Map)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter$1: void onClick(android.view.View)>
	++ <flipboard.service.Flap$AccountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.app.FlipboardApplication: void attachBaseContext(android.content.Context)>
	++ <com.facebook.Session: void a(com.facebook.SessionState,com.facebook.SessionState,java.lang.Exception)>
	++ <flipboard.service.FlipboardManager: flipboard.model.ConfigService f(java.lang.String)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud$CategoryPickerListAdapter: void <init>(flipboard.gui.firstrun.CategoryPickerCloud,android.content.Context,java.util.List,boolean)>
	++ <flipboard.model.FLObject: void set(java.lang.String,java.lang.String)>
	++ <flipboard.model.UsageEventV2: void set(java.lang.String,java.lang.Object)>
	++ <flipboard.activities.CategoryPickerFragment$2: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.activities.FlipboardActivity: void startActivity(android.content.Intent)>
	++ <flipboard.gui.item.CoverSectionItemTablet$4: void onClick(android.view.View)>
	++ <flipboard.gui.FLEditText: void a(boolean)>
	++ <flipboard.gui.firstrun.CategoryPickerCloud$1: void onClick(android.view.View)>
	++ <flipboard.gui.section.UserListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <com.facebook.AppEventsLogger: com.facebook.AppEventsLogger a(android.content.Context)>
	++ <flipboard.gui.toc.TileContainer$2$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.User: void a(flipboard.service.User$StateChanger)>
	++ <flipboard.util.Format: void <clinit>()>
	++ <flipboard.gui.FLEditText: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.activities.SearchTabletActivity: void m()>
	++ <flipboard.service.audio.MediaPlayerService: boolean onError(android.media.MediaPlayer,int,int)>
	++ <com.facebook.Session: void a(com.facebook.Session)>
	++ <flipboard.activities.DetailActivity: void startActivity(android.content.Intent)>
	++ <flipboard.service.Flap$SearchRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.facebook.Session$OpenRequest: void <init>(android.app.Activity)>
	++ <flipboard.activities.ReportIssueActivity: void <clinit>()>
	++ <com.helpshift.HSReviewFragment$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.FlipboardManager: void i(java.lang.String)>
	++ <flipboard.io.UsageEvent: flipboard.model.FLObject a(java.lang.String,java.lang.Number,boolean)>
	++ <com.facebook.Session: void a(com.facebook.Session$OpenRequest)>
	++ <com.facebook.widget.LoginButton$LoginClickListener: void onClick(android.view.View)>
	++ <net.hockeyapp.android.FeedbackActivity: void a()>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,java.lang.String)>
	++ <flipboard.util.Log: flipboard.util.Log a(java.lang.String)>
	++ <net.hockeyapp.android.Constants: void a(android.content.Context)>
	++ <flipboard.activities.VideoAdActivity: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>
	++ <flipboard.gui.personal.UserProfile$1: void onClick(android.view.View)>
	++ <flipboard.activities.FlipboardActivity: void finish()>
	++ <net.hockeyapp.android.FeedbackActivity: void <init>()>
	++ <flipboard.activities.ReportIssueActivity$5: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.model.UsageEventV2: flipboard.model.UsageEventV2 set(flipboard.model.UsageEventV2$CommonEventData,java.lang.Object)>
	++ <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	++ <com.facebook.AppEventsLogger: com.facebook.AppEventsLogger$SessionEventsState a(android.content.Context,com.facebook.AppEventsLogger$AccessTokenAppIdPair)>
	++ <flipboard.activities.FlipboardActivity: void <clinit>()>
	++ <flipboard.util.Format: java.lang.String toString()>
	++ <flipboard.service.FlipboardManager: java.lang.String h(java.lang.String)>
	++ <net.hockeyapp.android.FeedbackActivity$5: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.audio.MediaPlayerService: void onPrepared(android.media.MediaPlayer)>
	++ <com.facebook.Session$OpenRequest: com.facebook.Session$OpenRequest b(java.util.List)>
	++ <flipboard.util.Format$CharBuf: java.lang.String toString()>
	++ <net.hockeyapp.android.UpdateFragment: void a(android.app.Activity)>
	++ <flipboard.util.SocialHelper: void a(android.view.View,flipboard.service.Section,flipboard.model.FeedItem,flipboard.model.FeedItem,flipboard.model.UsageEventV2$SocialCardNavFrom)>
	++ <com.helpshift.widget.CSATDialog: void onDismiss(android.content.DialogInterface)>
	++ <flipboard.gui.FLImageView: void <clinit>()>
	++ <flipboard.util.SocialHelper: void <clinit>()>
	++ <flipboard.util.Format$CharBuf: void b(int)>
	++ <flipboard.util.AndroidUtil: boolean a(android.content.Context,android.content.Intent)>
	++ <flipboard.gui.SocialBarTablet: void onClick(android.view.View)>
	++ <com.facebook.AppEventsLogger$AppEvent: void a(java.lang.String)>
	++ <flipboard.util.Format: void a(java.lang.RuntimeException)>
	++ <net.hockeyapp.android.UpdateFragment: void onClick(android.view.View)>
	++ <flipboard.gui.FLSearchView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.gui.ProfilePage$1: void onClick(android.view.View)>
	++ <flipboard.util.ActivityUtil: void a(flipboard.activities.FlipboardActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <flipboard.io.UsageManager: void a(java.lang.String)>
	++ <com.facebook.widget.LoginButton: void <clinit>()>
	++ <net.hockeyapp.android.utils.PrefsUtil: java.lang.String a(android.content.Context)>
	++ <flipboard.gui.item.CoverSectionItemTablet: void a(flipboard.model.FeedSectionLink,flipboard.service.Section)>
	++ <com.facebook.Session$AuthorizationRequest: void <init>(android.support.v4.app.Fragment)>
	++ <flipboard.activities.FlipboardFragment: void a(android.content.Intent,int)>
	++ <flipboard.activities.FlipboardActivity: void startActivityForResult(android.content.Intent,int)>
	++ <com.facebook.FacebookException: void <init>(java.lang.String)>
	++ <flipboard.gui.personal.TabStripStatic$1: void onClick(android.view.View)>
	++ <flipboard.activities.ReportIssueActivity$4: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.util.Format$Exception: void <init>(java.lang.String,java.lang.Object[])>
	++ <com.facebook.AppEventsLogger$AppEvent: void <init>(java.lang.String,android.os.Bundle)>
	++ <flipboard.model.FeedItem: java.lang.String getIdString()>
	++ <flipboard.io.UsageEvent: float f()>
	++ <flipboard.service.User: flipboard.service.Section d(java.lang.String)>
	++ <flipboard.util.Format: void <init>(java.lang.String,java.lang.Object[])>
	++ <flipboard.activities.SettingsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <net.hockeyapp.android.FeedbackActivity: void onClick(android.view.View)>
	++ <net.hockeyapp.android.FeedbackActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	++ <flipboard.util.Format: java.lang.String a(java.lang.String,java.lang.Object[])>
	++ <flipboard.service.FlipboardManager: void <clinit>()>
	++ <com.facebook.internal.Utility: java.lang.String a(android.content.Context)>
	++ <flipboard.activities.ReportIssueActivity: void sendIssue(android.view.View)>
	++ <flipboard.service.Flap$CreateAccountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.activities.UpdateAccountActivity$5: void onClick(android.view.View)>
	++ <flipboard.service.Flap: flipboard.service.Flap$SearchRequest a(flipboard.service.User,java.lang.String,flipboard.service.Flap$SearchType,flipboard.service.Flap$SearchObserver,java.lang.String,int)>
	++ <com.helpshift.HSReviewFragment$3: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter: int getItemViewType(int)>
	++ <flipboard.gui.section.item.ProfileSummaryItem$2: void onClick(android.view.View)>
	++ <flipboard.activities.ContentDrawerTabletActivity: void m()>
	++ <com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers a(android.content.Context)>
	++ <flipboard.gui.item.CoverSectionItemTablet$3: void onClick(android.view.View)>
	++ <flipboard.activities.ReportIssueActivity$10: void onClick(android.view.View)>
	++ <flipboard.util.Log: void a(flipboard.util.Log$Level,java.lang.String)>
	++ <flipboard.service.Flap$FlapRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.facebook.Session: void a(com.facebook.Session$OpenRequest,com.facebook.internal.SessionAuthorizationType)>
	++ <flipboard.util.Format: void <init>(java.lang.String,java.lang.Object[],byte)>
	++ <flipboard.io.UsageEvent: void e(java.lang.String)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.String,java.lang.Runnable)>
	++ <flipboard.util.Log: void a(java.lang.String,java.lang.Object[])>
	++ <com.helpshift.HSFunnel: void b(java.lang.String)>
	++ <flipboard.service.Section: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
	++ <com.facebook.Session$OpenRequest: com.facebook.Session$OpenRequest b(com.facebook.SessionLoginBehavior)>
	++ <flipboard.model.UserState: void <init>(flipboard.model.UserState)>
	++ <flipboard.util.SocialHelper: void a(flipboard.model.FeedItem,flipboard.service.Section,flipboard.activities.FlipboardActivity,flipboard.model.UsageEventV2$SocialCardNavFrom)>
	++ <flipboard.activities.ContentDrawerActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: java.lang.Object doInBackground(java.lang.Object[])>
	++ <net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <flipboard.activities.ReportIssueActivity: android.widget.EditText i(flipboard.activities.ReportIssueActivity)>
	++ <flipboard.util.Log: void <clinit>()>
	++ <flipboard.service.Section: flipboard.service.User E()>
	++ <flipboard.service.FlipboardManager: flipboard.model.ConfigSetting w()>
	++ <org.apache.http.message.AbstractHttpMessage: void <init>()>
	++ <flipboard.gui.item.CoverSectionItemTablet$1: void onClick(android.view.View)>
	++ <flipboard.gui.section.MagazineConversationThreadDetailFragment$5: void onClick(android.view.View)>
	++ <flipboard.gui.FLToast: void b(flipboard.activities.FlipboardActivity,java.lang.String)>
	++ <com.facebook.AppEventsLogger: void a(java.lang.String,android.os.Bundle)>
	++ <flipboard.activities.ChooseAccountActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.service.User: flipboard.service.Section m(java.lang.String)>
	++ <com.facebook.widget.LoginButton: java.lang.String h(com.facebook.widget.LoginButton)>
	++ <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
	++ <flipboard.gui.section.scrolling.header.ProfileCover$MagazineCarouselTileHolder: void onClick(android.view.View)>
	++ <flipboard.activities.FlipboardActivity: void a(android.content.Intent,int,flipboard.activities.FlipboardActivity$ActivityResultListener)>
	++ <flipboard.gui.FLImageView$6: void onClick(android.view.View)>
	++ <flipboard.service.Flap: void a(flipboard.model.CommentaryResult$CommentType,flipboard.service.User,flipboard.service.Section,flipboard.model.FeedItem,java.lang.String,flipboard.service.ServiceReloginObserver)>
	++ <flipboard.gui.section.SectionFragment: void onSubsectionClicked(android.view.View)>
	++ <flipboard.util.Format$CharBuf: void a(char)>
	++ <flipboard.gui.dialog.FLDialogFragment: void a(android.support.v4.app.FragmentManager,java.lang.String)>
	++ <flipboard.gui.item.InFeedExpandableModuleHead$1: void onClick(android.view.View)>
	++ <com.helpshift.HSReviewFragment$2: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.ReportIssueActivity$11: void onClick(android.view.View)>
	++ <flipboard.gui.section.MagazineConversationThreadDetailFragment: void e(flipboard.gui.section.MagazineConversationThreadDetailFragment)>
	++ <flipboard.gui.section.AttributionServiceInfo$3: void onClick(android.view.View)>
	++ <com.facebook.AppEventsLogger: void <init>(android.content.Context,java.lang.String)>
	++ <com.facebook.internal.Utility: java.lang.reflect.Method a(java.lang.String,java.lang.String,java.lang.Class[])>
	++ <com.facebook.internal.Utility: java.lang.String a(android.content.Context,java.lang.String)>
	++ <flipboard.service.Flap: void <clinit>()>
	++ <flipboard.activities.LoginActivity$9$2$1: void onClick(android.content.DialogInterface,int)>
	++ <com.facebook.AppEventsLogger$AccessTokenAppIdPair: void <init>(com.facebook.Session)>
	++ <com.facebook.internal.Utility: java.lang.String a(java.lang.String,java.lang.String)>
	++ <flipboard.util.Format$CharBuf: void a(java.lang.String)>
	++ <flipboard.util.Format$CharBuf: void a(int)>
	++ <flipboard.activities.SettingsFragment$SettingsAdapter: flipboard.activities.SettingsFragment$RowItem a(int)>
	++ <flipboard.service.FlipboardManager: flipboard.service.Flap$FlapRequest createAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,flipboard.util.Observer)>
	++ <flipboard.gui.item.CoverSectionItemTablet$2: void onClick(android.view.View)>
	++ <com.helpshift.HSFunnel: void a(java.lang.String,org.json.JSONObject)>
	++ <flipboard.util.Format$CharBuf: void <init>(flipboard.util.Format,int)>
	++ <com.helpshift.HSFunnel: void a(java.lang.String)>
	++ <flipboard.gui.NoContentView$1: void onClick(android.view.View)>
	++ <flipboard.util.Format$CharBuf: void a(char,java.lang.Object)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: java.util.HashMap b(org.apache.http.client.HttpClient)>
	++ <com.facebook.Session$OpenRequest: void <init>(android.support.v4.app.Fragment)>
	++ <flipboard.activities.ReportIssueActivity: java.io.File j(flipboard.activities.ReportIssueActivity)>
	++ <org.apache.http.client.methods.HttpRequestBase: void <init>()>
	++ <flipboard.gui.toc.TileContainer$2$2: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.activities.SocialCardFragment$1: void onClick(android.view.View)>
	++ <com.facebook.Session$AuthorizationRequest: void <init>(android.app.Activity)>
	++ <flipboard.service.Flap$UpdateAccountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.activities.SectionTabletActivity: void onSubsectionClicked(android.view.View)>
	++ <flipboard.util.JavaUtil: boolean a(java.lang.String)>
	++ <net.hockeyapp.android.tasks.CheckUpdateTask$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.FlipboardManager: void b(java.lang.Runnable)>
	++ <flipboard.service.Flap: flipboard.service.Flap$CreateAccountRequest createAccount(flipboard.service.User,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,flipboard.service.Flap$AccountRequestObserver)>
	++ <flipboard.util.Format: void b(java.lang.String,java.lang.Object[])>
	++ <com.facebook.Session: void b(com.facebook.Session$OpenRequest)>
	++ <flipboard.service.Section: void <clinit>()>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,java.lang.String,android.os.Bundle)>
	++ <flipboard.activities.ContentDrawerActivity: void a(flipboard.service.Section,android.os.Bundle)>
	++ <flipboard.util.Format: void a(flipboard.util.Format,java.lang.String,java.lang.Object[])>
	++ <flipboard.util.SocialHelper: void a(flipboard.service.Section,android.content.Context,android.os.Bundle)>
	++ <flipboard.activities.ContentDrawerPhoneActivity: void m()>
	++ <flipboard.gui.personal.TocSubEmptyStateView: void onClick(android.view.View)>
	++ <flipboard.service.Flap: void a(flipboard.model.CommentaryResult$CommentType,flipboard.service.User,java.lang.String,java.lang.String,flipboard.service.ServiceReloginObserver)>
	++ <flipboard.util.JavaUtil: float a(float,float,float)>
	++ <flipboard.gui.section.AttributionServiceInfo$1: void onClick(android.view.View)>
	++ <com.facebook.internal.SessionTracker: void a(com.facebook.Session)>
	++ <flipboard.model.FLObject: void set(java.lang.String,java.lang.Object)>
	++ <flipboard.util.Log: void b(java.lang.String,java.lang.Object[])>
	++ <flipboard.service.FLSearchManager: void a(java.lang.String,flipboard.service.Flap$SearchType,flipboard.service.Flap$SearchObserver,java.lang.String,int)>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,android.os.Bundle)>
	++ <flipboard.gui.toc.TOCPage$SearchBoxOnClickListener: void onClick(android.view.View)>
	++ <flipboard.util.Format: boolean a(int,int)>
	++ <flipboard.activities.VideoAdActivity: void onConfigurationChanged(android.content.res.Configuration)>
	++ <flipboard.util.SocialHelper: void a(flipboard.activities.FlipboardActivity,flipboard.model.ConfigService,flipboard.util.SocialHelper$ServiceLoginObserver)>
	++ <com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers b(android.content.Context)>
	++ <net.hockeyapp.android.utils.Util: java.lang.String a(java.lang.String)>
	++ <flipboard.util.Log: void <init>(java.lang.String,flipboard.util.Log$Level,boolean)>
	++ <flipboard.util.Log: void b(flipboard.util.Log$Level,java.lang.String,java.lang.Object[])>
	++ <flipboard.activities.CreateAccountActivity$9: void onClick(android.view.View)>
	++ <net.hockeyapp.android.tasks.SendFeedbackTask: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Handler,boolean)>
	++ <flipboard.util.Format$CharBuf: boolean a(java.lang.Throwable,boolean,int)>
	++ <flipboard.activities.DebugLayoutActivity$Adapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.activities.ReportIssueActivity$6: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.FlipboardManager$SearchUserRequest: void <init>(flipboard.service.FlipboardManager)>
	++ <com.facebook.AppEventsLogger$AccessTokenAppIdPair: void <init>(java.lang.String,java.lang.String)>
	++ <com.facebook.AuthorizationClient: void a(com.facebook.AuthorizationClient$AuthorizationRequest)>
	++ <flipboard.service.Section: java.lang.String f()>
	++ <flipboard.io.UsageEvent: void <clinit>()>
	++ <flipboard.activities.CategoryPickerFragment$1: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.gui.section.item.ProfileSummaryItem$1: void onClick(android.view.View)>
Graph Visualizing for this DP...

(19/20) Printing..
+ DP Stmt : $r5 = virtualinvoke $r7.<java.net.URL: java.net.URLConnection openConnection()>()
+ DP SootMethod : <net.hockeyapp.android.tasks.DownloadFileTask: java.lang.Boolean a()>
+ EPs (1) :
	+<net.hockeyapp.android.tasks.DownloadFileTask: java.lang.Boolean a()>
+ Taint Methods : 
	++ <net.hockeyapp.android.tasks.DownloadFileTask: java.lang.Boolean a()>
Graph Visualizing for this DP...

(20/20) Printing..
+ DP Stmt : virtualinvoke $r10.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r2)
+ DP SootMethod : <net.hockeyapp.android.CrashManager: void a(java.lang.ref.WeakReference,net.hockeyapp.android.CrashManagerListener)>
+ EPs (1) :
	+<dummyMainClass: void dummyMainMethod(java.lang.String[])>
+ Taint Methods : 
	++ <flipboard.gui.ContentDrawerView: void setEmptyMessage$505cbf4b(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Flap$AccountRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.facebook.widget.WebDialog: void a(java.lang.Throwable)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer: java.math.BigInteger c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: boolean a(flipboard.activities.FlipboardActivity,java.lang.String,boolean,flipboard.gui.dialog.FLDialogResponse)>
	++ <flipboard.io.DownloadManager$1$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.Section: boolean c(boolean)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader a(java.lang.Class)>
	++ <net.hockeyapp.android.CrashManager: java.lang.String b(java.lang.ref.WeakReference,java.lang.String)>
	++ <flipboard.model.UsageEventV2: void set(java.lang.String,java.lang.Object)>
	++ <net.hockeyapp.android.ExceptionHandler: void a(java.lang.Throwable,net.hockeyapp.android.CrashManagerListener)>
	++ <flipboard.gui.ContentDrawerListItemAdapter$2: void onClick(android.view.View)>
	++ <flipboard.activities.FlipboardActivity: void startActivity(android.content.Intent)>
	++ <flipboard.io.UsageManager: void a(boolean)>
	++ <flipboard.gui.FLBitmapView: void setBitmap(flipboard.io.BitmapManager$Handle)>
	++ <flipboard.activities.ContentDrawerPhoneActivity$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <se.emilsjolander.stickylistheaders.StickyListHeadersListView$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException b(java.lang.Class)>
	++ <flipboard.io.NetworkManager: void b(flipboard.util.Observer)>
	++ <flipboard.activities.YouTubePlayerActivity: void onPause()>
	++ <flipboard.gui.item.RssDetailView$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager$19: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.flipping.FlipTransitionViews: void onScaleEnd(android.view.ScaleGestureDetector)>
	++ <flipboard.activities.ContentDrawerActivity$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object a(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.JsonExplorer: void onResume()>
	++ <flipboard.activities.LoginActivity: void onResume()>
	++ <net.hockeyapp.android.ExceptionHandler: void a(java.lang.String,java.lang.String)>
	++ <flipboard.activities.VideoActivity: void finish()>
	++ <flipboard.gui.section.SectionFragment$33: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.facebook.AuthorizationClient: void a(com.facebook.AuthorizationClient$Result)>
	++ <flipboard.gui.actionbar.FLActionBar$3: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.model.FLObject: boolean getBoolean(java.lang.String)>
	++ <flipboard.gui.section.SectionFragmentScrolling: void onClick(android.view.View)>
	++ <flipboard.activities.ServiceLoginActivity: void onPause()>
	++ <flipboard.service.Flap: java.util.List a(flipboard.service.Flap)>
	++ <flipboard.activities.AudioPlayerActivity: void finish()>
	++ <flipboard.activities.DetailActivity: void startActivity(android.content.Intent)>
	++ <flipboard.gui.section.SectionFragment: void <clinit>()>
	++ <flipboard.gui.personal.TocGridFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.flipping.ViewScreenshotCreator: void <clinit>()>
	++ <flipboard.service.Section: java.util.List k()>
	++ <flipboard.io.UsageEvent: flipboard.model.FLObject a(java.lang.String,java.lang.Number,boolean)>
	++ <flipboard.util.SocialHelper: void a(flipboard.model.UsageEventV2$EventAction,flipboard.service.Section,flipboard.model.FeedItem,java.lang.String)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.String,boolean,flipboard.service.DatabaseHandler)>
	++ <flipboard.service.FlipboardManager: boolean i()>
	++ <flipboard.gui.discovery.SectionSearchFragment$1: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.service.Flap$LoginRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <net.hockeyapp.android.Constants: void a(android.content.Context)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <net.hockeyapp.android.CrashManager: int b(java.lang.ref.WeakReference)>
	++ <flipboard.util.HttpUtil: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.util.Collection b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)>
	++ <flipboard.activities.FlipboardActivity: void finish()>
	++ <flipboard.service.SyncJob$6: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.SSOLoginActivity$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.JsonExplorer$GenericListAdapter: java.lang.Object getItem(int)>
	++ <flipboard.service.FLAdManager$2$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <net.hockeyapp.android.CrashManager: java.lang.String[] a()>
	++ <flipboard.service.Flap$UpdateRequest: void <init>(flipboard.service.Flap,flipboard.service.User,boolean,boolean)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.service.Section: flipboard.model.SidebarGroup d(flipboard.model.FeedItem)>
	++ <flipboard.gui.section.SectionFragmentScrolling$3: void onScroll(android.widget.AbsListView,int,int,int)>
	++ <flipboard.activities.FlipboardActivity: void <clinit>()>
	++ <flipboard.service.FlipboardManager: android.database.sqlite.SQLiteDatabase Q()>
	++ <flipboard.activities.LoginActivity$9: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.ContentDrawerActivity: void a(android.app.Activity,int)>
	++ <flipboard.activities.FlipboardActivity: void a(flipboard.service.Section,java.lang.String,java.lang.String)>
	++ <flipboard.activities.DetailActivity$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>
	++ <flipboard.gui.FLImageView: void setImage(java.lang.String)>
	++ <flipboard.gui.tabs.SlidingTabLayout$TabClickListener: void onClick(android.view.View)>
	++ <flipboard.activities.JsonExplorer$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.util.Observable: void a(java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.SectionTabletActivity: java.lang.String p()>
	++ <flipboard.gui.section.SectionFragment$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.widget.FlipboardWidgetManager$WidgetItem: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.personal.ServiceListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.service.ContentDrawerHandler: flipboard.util.Observable$Proxy c(flipboard.service.ContentDrawerHandler)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object[] e(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: void b(flipboard.service.FlipboardManager,flipboard.activities.FlipboardActivity)>
	++ <flipboard.activities.VideoActivity$3: void <init>(flipboard.activities.VideoActivity,android.content.Context)>
	++ <flipboard.model.FeedSectionLink: void <init>(flipboard.service.Section,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.gui.flipping.FlipTransitionViews: void a(java.lang.String)>
	++ <flipboard.gui.section.AttributionSocial: flipboard.model.FeedItem a(flipboard.gui.section.AttributionSocial)>
	++ <flipboard.gui.FLBitmapView: void setFade(boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.util.Format$CharBuf: java.lang.String toString()>
	++ <org.askerov.dynamicgrid.DynamicGridView: void a(org.askerov.dynamicgrid.DynamicGridView,long)>
	++ <com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.util.SocialHelper: void a(android.view.View,flipboard.service.Section,flipboard.model.FeedItem,flipboard.model.FeedItem,flipboard.model.UsageEventV2$SocialCardNavFrom)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.SectionTabletActivity: void onResume()>
	++ <flipboard.util.SocialHelper: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer: java.lang.StackTraceElement c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.util.AndroidUtil: boolean a(android.content.Context,android.content.Intent)>
	++ <com.fasterxml.jackson.databind.node.DecimalNode: com.fasterxml.jackson.databind.node.DecimalNode a(java.math.BigDecimal)>
	++ <flipboard.activities.LoginActivity$12$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.io.BitmapManager: flipboard.io.BitmapManager$Handle a(flipboard.io.Download,boolean)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.service.audio.MediaPlayerService: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,long)>
	++ <flipboard.gui.toc.TileView: void a(flipboard.io.Download$Status)>
	++ <com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.DetailActivity: void onResume()>
	++ <flipboard.gui.FLImageView: void a(java.lang.String,boolean,boolean)>
	++ <flipboard.gui.personal.TocDrawerListFragment: flipboard.activities.FlipboardActivity b(flipboard.gui.personal.TocDrawerListFragment)>
	++ <com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>
	++ <flipboard.activities.FlipboardActivity: void startActivityForResult(android.content.Intent,int)>
	++ <flipboard.gui.section.SectionFragment: void a(flipboard.gui.section.SectionFragment,boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Boolean l(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.model.FeedItem: void setLiked(boolean)>
	++ <flipboard.activities.AudioPlayerActivity: void I()>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,double)>
	++ <com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.activities.SubsectionActivity: void a(flipboard.activities.SubsectionActivity,flipboard.activities.SubsectionActivity$ListItemAdapter,java.lang.String,android.view.View)>
	++ <flipboard.widget.FlipboardWidgetManager$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.flipping.FlipTransitionViews: void b(flipboard.util.Observer)>
	++ <com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.util.Format$Exception: void <init>(java.lang.String,java.lang.Object[])>
	++ <flipboard.gui.FLImageView: void setAllowPreloadOnUIThread(boolean)>
	++ <flipboard.model.FLObject: boolean has(java.lang.String)>
	++ <flipboard.model.FeedItem: java.lang.String getIdString()>
	++ <flipboard.activities.FlipboardActivity: void a(flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.notifications.FLNotification$NotificationThumb: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.FlipboardActivity: java.lang.String l()>
	++ <flipboard.service.User: flipboard.service.Section d(java.lang.String)>
	++ <flipboard.util.SocialHelper: void c(flipboard.model.ConfigService,flipboard.model.FeedItem,boolean,flipboard.activities.FlipboardActivity,flipboard.service.Section)>
	++ <flipboard.util.Format: void <init>(java.lang.String,java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <net.hockeyapp.android.CrashManager$4: void <init>()>
	++ <flipboard.activities.ContentDrawerTabletActivity$CategoriesAdapter$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer: java.lang.Object a_(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.FlipboardActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <flipboard.service.User: void a(flipboard.service.Flap$TypedResultObserver)>
	++ <flipboard.gui.flipping.FlipTransitionViews: android.view.View d(int)>
	++ <flipboard.util.SocialHelper$5: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException b(java.lang.Class,java.lang.String)>
	++ <flipboard.gui.ContentDrawerView: void setItems(java.util.List)>
	++ <flipboard.service.Flap$ReadRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper a(java.lang.Class,java.lang.Class)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.util.Format: java.lang.String a(java.lang.String,java.lang.Object[])>
	++ <flipboard.activities.ContentDrawerPhoneActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <net.hockeyapp.android.CrashManager$2: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.service.FlipboardManager: void <clinit>()>
	++ <flipboard.activities.LoginActivity: void onPause()>
	++ <flipboard.service.FlipboardManager: void b(java.lang.String,java.lang.String)>
	++ <flipboard.gui.flipping.FlipTransitionViews$10: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.util.HttpUtil: java.lang.String a(java.lang.String)>
	++ <flipboard.service.Section: void a(flipboard.model.FeedItem,flipboard.service.Section$UpdateObserver)>
	++ <flipboard.io.FunnelUsageEvent: void a(java.lang.String,java.util.Map)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException a(java.lang.Class,java.lang.String)>
	++ <flipboard.activities.VideoAdActivity: void onPause()>
	++ <flipboard.gui.personal.TocDrawerListFragment: flipboard.activities.FlipboardActivity c(flipboard.gui.personal.TocDrawerListFragment)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.model.ContentDrawerListItemBase: void <init>()>
	++ <flipboard.util.AndroidUtil: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] a(com.fasterxml.jackson.core.Base64Variant)>
	++ <flipboard.service.Flap$LikeUnlikeRequest: void <init>(flipboard.service.Flap,flipboard.service.User,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <net.hockeyapp.android.CrashManager$3: void <init>(java.lang.ref.WeakReference,net.hockeyapp.android.CrashManagerListener,boolean)>
	++ <flipboard.activities.SearchTabletActivity: void onResume()>
	++ <flipboard.service.FlipboardManager$18$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.ContentDrawerView: void a(android.content.res.Resources,flipboard.service.Section,flipboard.gui.ContentDrawerListItemAdapter,java.util.List)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Number c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void b(com.fasterxml.jackson.core.JsonParser)>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.BinaryNode a(byte[])>
	++ <flipboard.gui.flipping.FlipTransitionViews: void f(int)>
	++ <flipboard.activities.FlipboardActivity: flipboard.gui.dialog.FLAlertDialogFragment a(int,int)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.User: java.lang.String k(java.lang.String)>
	++ <flipboard.gui.SocialFormatter: java.lang.String g(android.content.Context,flipboard.model.ConfigService)>
	++ <flipboard.activities.TOCActivity: void onResume()>
	++ <com.fasterxml.jackson.databind.ObjectReader: com.fasterxml.jackson.databind.JsonDeserializer b(com.fasterxml.jackson.databind.JavaType)>
	++ <flipboard.activities.MainActivity: java.lang.String p()>
	++ <flipboard.util.Log: void a(flipboard.util.Log$Level,java.lang.String)>
	++ <flipboard.gui.toc.TileContainer: void a(android.graphics.Canvas)>
	++ <flipboard.activities.FlipboardActivity: void a(flipboard.activities.FlipboardActivity$OnBackPressedListener)>
	++ <flipboard.activities.WidgetConfigActivity: void onResume()>
	++ <flipboard.service.User: void a(long)>
	++ <flipboard.service.User: void a(flipboard.service.Section)>
	++ <com.facebook.AuthorizationClient$WebViewAuthHandler$1: void a(android.os.Bundle,com.facebook.FacebookException)>
	++ <flipboard.gui.section.ProfileFragmentScrolling: void b(flipboard.gui.section.ProfileFragmentScrolling)>
	++ <net.hockeyapp.android.CrashManager$1: void onClick(android.content.DialogInterface,int)>
	++ <flipboard.util.Format: void <init>(java.lang.String,java.lang.Object[],byte)>
	++ <flipboard.io.UsageEvent: void b(java.lang.String,java.util.Map)>
	++ <flipboard.io.UsageEvent: void e(java.lang.String)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.String,java.lang.Runnable)>
	++ <flipboard.service.FlipboardManager: void b(java.util.List)>
	++ <flipboard.activities.SectionTabletActivity: void onStart()>
	++ <flipboard.activities.DetailActivity: void finish()>
	++ <com.fasterxml.jackson.databind.module.SimpleModule: com.fasterxml.jackson.databind.module.SimpleModule a(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>
	++ <flipboard.gui.FLVideoView: void setMediaController(android.widget.MediaController)>
	++ <flipboard.activities.FlipboardActivity: java.lang.String m_()>
	++ <com.fasterxml.jackson.databind.ObjectMapper: void a(com.fasterxml.jackson.databind.jsontype.NamedType[])>
	++ <flipboard.activities.ContentDrawerActivity: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Character c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.flipping.FlipTransitionBase: flipboard.gui.flipping.SinglePage c(int)>
	++ <flipboard.model.UserState: void <init>(flipboard.model.UserState)>
	++ <flipboard.service.FlipboardManager$34: void <init>(flipboard.service.FlipboardManager,android.content.Context,java.lang.String)>
	++ <flipboard.activities.DetailActivity$16: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int a(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)>
	++ <flipboard.widget.FlipboardWidgetManager$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.ContentDrawerTabletActivity$CategoriesAdapter$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.ContentDrawerActivity: void onResume()>
	++ <flipboard.gui.ContentDrawerView$8: void <init>(flipboard.service.Section)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,boolean)>
	++ <org.askerov.dynamicgrid.DynamicGridView: android.animation.ObjectAnimator c(android.view.View)>
	++ <flipboard.gui.dialog.FLAlertDialogFragment$1: void onClick(android.content.DialogInterface,int)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Float t(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.DetailActivity: void <clinit>()>
	++ <flipboard.io.DownloadManager$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.util.SocialHelper: void d(flipboard.model.ConfigService,flipboard.model.FeedItem,boolean,flipboard.activities.FlipboardActivity,flipboard.service.Section)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <org.askerov.dynamicgrid.DynamicGridView: void b(android.view.View)>
	++ <net.hockeyapp.android.CrashManager: void a(java.lang.ref.WeakReference,net.hockeyapp.android.CrashManagerListener)>
	++ <com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>
	++ <flipboard.service.FlipboardManager: flipboard.model.ConfigSetting w()>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object y(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: void a(flipboard.service.FlipboardManager,flipboard.activities.FlipboardActivity)>
	++ <flipboard.gui.flipping.ViewScreenshotCreator: flipboard.gui.flipping.FlippingBitmap a(android.view.View)>
	++ <flipboard.gui.section.AttributionSocial$4: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.FeedActivity: java.lang.String p()>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: byte[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Flap$UserInfoRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.gui.FLToast: void b(flipboard.activities.FlipboardActivity,java.lang.String)>
	++ <flipboard.activities.TOCActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <flipboard.gui.ImagePopup.ImagePopupActivity$PopupViewContainer$2: void onAnimationEnd(android.animation.Animator)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.FLWebView: void loadUrl(java.lang.String)>
	++ <flipboard.service.Flap$UpdateRequest: boolean a(flipboard.service.Section,java.lang.String,android.os.Bundle)>
	++ <flipboard.activities.ContentDrawerTabletActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <flipboard.activities.ComposeActivity: void onResume()>
	++ <net.hockeyapp.android.CrashManager: void b(net.hockeyapp.android.CrashManagerListener,boolean)>
	++ <flipboard.activities.AudioPlayerActivity: void F()>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.flipping.ViewScreenshotCreator: void a(android.graphics.Bitmap,java.io.File)>
	++ <flipboard.gui.personal.NotificationsFragment$SectionsAndAccountObserver: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <org.askerov.dynamicgrid.DynamicGridView: void d(org.askerov.dynamicgrid.DynamicGridView,android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.util.Format$CharBuf: void a(char)>
	++ <com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.gui.section.SectionPage: void a(flipboard.service.audio.FLAudioManager$AudioState,flipboard.model.FeedItem)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: java.lang.Object A(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.LoginActivity: void a(int,flipboard.activities.LoginActivity$SignInMethod,flipboard.model.UsageEventV2$EventCategory,flipboard.activities.LoginActivity$LoginInitFrom)>
	++ <com.fasterxml.jackson.databind.ObjectReader: com.fasterxml.jackson.core.JsonToken a(com.fasterxml.jackson.core.JsonParser)>
	++ <flipboard.service.ContentDrawerHandler: void a(flipboard.service.ContentDrawerHandler,java.util.List)>
	++ <flipboard.gui.FLImageView: void a(flipboard.gui.FLImageView,flipboard.io.BitmapManager$Handle,java.lang.String,boolean)>
	++ <flipboard.util.AndroidUtil: void a(android.view.View,int)>
	++ <com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.SearchTabletActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <flipboard.util.SocialHelper: void a(flipboard.model.FeedItem,flipboard.activities.FlipboardActivity,flipboard.service.Section)>
	++ <flipboard.service.FlipboardManager: flipboard.service.Flap$FlapRequest a(java.lang.String,java.lang.String,boolean,flipboard.util.Observer)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.FLViewFlipper: void a(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.util.Format$CharBuf: void a(int)>
	++ <com.fasterxml.jackson.databind.deser.impl.FailingDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.section.scrolling.ItemActionBar$$ViewInjector$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,int)>
	++ <flipboard.io.UsageManager$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.SocialCardMainItem$1: void onClick(android.view.View)>
	++ <flipboard.gui.section.AttributionSocial$3: void onClick(android.view.View)>
	++ <flipboard.gui.flipping.FlipTransitionViews: flipboard.gui.flipping.SinglePage a(flipboard.gui.flipping.FlipTransitionBase$Direction,float,float,boolean)>
	++ <flipboard.service.User$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <net.hockeyapp.android.CrashManager: void a(java.lang.ref.WeakReference,net.hockeyapp.android.CrashManagerListener,boolean)>
	++ <flipboard.model.ContentDrawerListItemBase: void setTitle(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.audio.FLAudioManager: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)>
	++ <flipboard.util.Format$CharBuf: void a(char,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <net.hockeyapp.android.CrashManager: void a(java.lang.ref.WeakReference,java.lang.String)>
	++ <flipboard.service.FlipboardManager$12: void a(java.lang.Object)>
	++ <flipboard.activities.ContentDrawerTabletActivity: void a(flipboard.activities.ContentDrawerTabletActivity,flipboard.service.Section,java.util.List)>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.FLImageView: void setFade(boolean)>
	++ <flipboard.gui.flipping.FlipTransitionViews: flipboard.gui.flipping.FlippingBitmap a(int)>
	++ <flipboard.util.SocialHelper: void b(flipboard.activities.FlipboardActivity,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.service.Flap$StaticFileRequest: void <init>(flipboard.service.Flap,flipboard.service.User,boolean)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] a(java.lang.Object[],int)>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,java.lang.String,android.os.Bundle)>
	++ <flipboard.service.ContentDrawerHandler: void c()>
	++ <flipboard.util.Format: void a(flipboard.util.Format,java.lang.String,java.lang.Object[])>
	++ <com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer: java.lang.String[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <net.hockeyapp.android.CrashManager: void a(java.lang.ref.WeakReference)>
	++ <flipboard.service.SyncJob: void a(flipboard.service.Section)>
	++ <flipboard.io.Download: void a(flipboard.io.Download$Status,flipboard.io.Download$Data)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Section: java.lang.String toString()>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.jsontype.NamedType[])>
	++ <flipboard.activities.VideoAdActivity: void onResume()>
	++ <flipboard.service.Section: boolean a(boolean,java.lang.String,android.os.Bundle)>
	++ <flipboard.util.JavaUtil: float a(float,float,float)>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: java.util.Collection a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)>
	++ <flipboard.util.Log: void b(java.lang.String,java.lang.Object[])>
	++ <flipboard.service.Section: android.content.Intent a(android.content.Context,android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser: long[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: boolean[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.ChooseAvatarActivity$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.VideoAdActivity$4: void <init>(flipboard.activities.VideoAdActivity,android.content.Context)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.gui.FLImageView$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.DetailActivity$6: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.node.ObjectNode a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>
	++ <flipboard.util.SocialHelper: void a(flipboard.model.FeedItem,flipboard.service.Section,flipboard.activities.FlipboardActivity)>
	++ <org.askerov.dynamicgrid.DynamicGridView$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.sstream.SstreamBroadcastReceiver: void a(flipboard.service.User,java.lang.String,java.lang.String)>
	++ <flipboard.activities.DetailActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: java.util.Collection a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)>
	++ <flipboard.gui.FLImageView: void a(flipboard.io.BitmapManager$Handle,java.lang.String,boolean)>
	++ <flipboard.util.AndroidUtil: void a(android.view.ViewGroup,java.lang.Class,flipboard.util.Callback)>
	++ <flipboard.activities.GenericFragmentActivity: android.content.Intent a(android.content.Context,java.lang.String,int)>
	++ <flipboard.activities.SwitchContentGuideActivity: void onPause()>
	++ <flipboard.gui.section.ProfileFragmentScrolling$UserObserver: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <net.hockeyapp.android.CrashManager: void a(android.content.Context,java.lang.String,net.hockeyapp.android.CrashManagerListener)>
	++ <flipboard.gui.section.UserListFragment$UserListAdapter$2: void onClick(android.view.View)>
	++ <flipboard.activities.DetailActivity: void onPause()>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object h(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.AudioPlayerActivity: void a(flipboard.service.audio.FLMediaPlayer$PlayerState)>
	++ <flipboard.service.FlipboardManager: void a(flipboard.service.Section,java.util.List)>
	++ <flipboard.model.FeedItem: java.lang.String getPartnerID()>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.util.SocialHelper: void a(flipboard.activities.FlipboardActivity,java.lang.String,java.lang.String,android.net.Uri)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: java.lang.Object z(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.io.BitmapManager$DownloadHandle: void <init>(flipboard.io.BitmapManager,java.lang.String,flipboard.io.Download,boolean)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,double)>
	++ <flipboard.io.UsageEvent: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.io.BitmapManager: void <clinit>()>
	++ <flipboard.activities.DetailActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <flipboard.gui.ImagePopup.ImagePopupActivity$2: void a(flipboard.gui.ImagePopup.ImagePopupActivity$PopupViewContainer,int)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object g(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.LoginActivity$9$3: void <init>(flipboard.activities.LoginActivity$9,flipboard.service.FlipboardManager)>
	++ <flipboard.activities.CreateAccountActivity: void a(int,flipboard.activities.LoginActivity$SignInMethod,flipboard.model.UsageEventV2$EventCategory,flipboard.activities.LoginActivity$LoginInitFrom)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>
	++ <flipboard.json.JsonSerializationWrapper: java.lang.Object a(java.lang.String,java.lang.Class)>
	++ <flipboard.gui.section.UserListFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.FlipboardActivity: void onResume()>
	++ <com.fasterxml.jackson.databind.module.SimpleModule: void a(com.fasterxml.jackson.databind.Module$SetupContext)>
	++ <flipboard.activities.FirstRunActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser: float[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.personal.NotificationsFragment: void b(android.app.Activity)>
	++ <flipboard.io.FunnelUsageEvent: void a(java.lang.String,java.lang.String,java.lang.Object)>
	++ <flipboard.activities.SubsectionActivity: void onResume()>
	++ <flipboard.gui.toc.TOCView$1: void onClick(android.view.View)>
	++ <flipboard.gui.actionbar.FLActionBar: flipboard.activities.FlipboardActivity a(flipboard.gui.actionbar.FLActionBar)>
	++ <com.fasterxml.jackson.databind.ObjectReader: void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.InjectableValues)>
	++ <flipboard.service.FlipboardManager: flipboard.model.ConfigService f(java.lang.String)>
	++ <flipboard.activities.FlipboardActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <flipboard.model.FLObject: void set(java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.activities.MainActivity: void onResume()>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.activities.FacebookAuthenticateFragment$4: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.audio.MediaPlayerService: void a(boolean)>
	++ <flipboard.gui.flipping.FlipTransitionBase: int getCurrentViewIndex()>
	++ <net.hockeyapp.android.CrashManager: void a(net.hockeyapp.android.CrashManagerListener,boolean)>
	++ <flipboard.model.FeedItem: void likeUnlike(boolean,flipboard.service.Section,java.lang.ref.WeakReference)>
	++ <flipboard.gui.personal.NotificationsFragment: void a(flipboard.service.Section)>
	++ <flipboard.activities.FlipboardFragment: void a(android.content.Intent)>
	++ <flipboard.gui.section.AttributionTablet$1: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.ContentDrawerHandler: void <clinit>()>
	++ <flipboard.gui.section.AttributionTablet$2: void onClick(android.view.View)>
	++ <flipboard.gui.FLImageView: void a(flipboard.gui.FLImageView,java.lang.String,boolean,boolean)>
	++ <net.hockeyapp.android.ExceptionHandler: java.lang.String a(java.lang.String)>
	++ <flipboard.service.User: void a(flipboard.service.User$StateChanger)>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.lang.Object a(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.ContentDrawerTabletActivity$CategoriesAdapter$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.section.UserListFragment$7: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object z(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.util.Format: void <clinit>()>
	++ <flipboard.service.Flap$FollowRequest: void <init>(flipboard.service.Flap,flipboard.service.User,java.util.List,java.lang.String)>
	++ <com.fasterxml.jackson.databind.ObjectReader: com.fasterxml.jackson.databind.JsonDeserializer a(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int a(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)>
	++ <flipboard.service.audio.MediaPlayerService: boolean onError(android.media.MediaPlayer,int,int)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.gui.toc.TOCView$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.ReportIssueActivity: void <clinit>()>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.FlipboardActivity: void onStart()>
	++ <flipboard.gui.flipping.FlipTransitionViews: void a(flipboard.util.Observer)>
	++ <flipboard.service.FlipboardManager: void i(java.lang.String)>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: byte[] a(com.fasterxml.jackson.core.Base64Variant)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)>
	++ <net.hockeyapp.android.utils.PrefsUtil: java.lang.Boolean b()>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException c(java.lang.String)>
	++ <flipboard.activities.LoginActivity$4: void onClick(android.view.View)>
	++ <flipboard.activities.TOCActivity$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.ContentDrawerPhoneActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <flipboard.util.Log: flipboard.util.Log a(java.lang.String)>
	++ <flipboard.util.ImageSave$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.FlipboardActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID a(byte[],com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.flipping.FlipTransitionBase: void <clinit>()>
	++ <flipboard.gui.FLSliderHider: void a(flipboard.gui.FLSliderHider$OnListViewScrollEvent)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(java.lang.Class,java.lang.Class)>
	++ <flipboard.gui.section.ProfileFragmentScrolling$SectionsAndAccountObserver: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.io.FunnelUsageEvent: void <init>(java.lang.String)>
	++ <com.facebook.widget.WebDialog: void a(com.facebook.widget.WebDialog)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.model.UsageEventV2: flipboard.model.UsageEventV2 set(flipboard.model.UsageEventV2$CommonEventData,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser: short[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.FlipboardActivity: void onPause()>
	++ <org.askerov.dynamicgrid.DynamicGridView: long b(int)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Byte m(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.VideoActivity: void onResume()>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: void b(java.util.List,flipboard.service.Flap$CommentaryObserver)>
	++ <flipboard.util.Format: java.lang.String toString()>
	++ <flipboard.gui.discovery.SearchActivity: void onStart()>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Double v(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.model.UsageEventV2: void <init>(flipboard.model.UsageEventV2$EventAction,flipboard.model.UsageEventV2$EventCategory)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.node.ArrayNode b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object j(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.SocialFormatter: java.lang.String f(android.content.Context,flipboard.model.ConfigService)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException a(java.lang.String,java.lang.Class,java.lang.String)>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NumericNode a(double)>
	++ <com.fasterxml.jackson.databind.deser.AbstractDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.LoginActivity: void d(flipboard.activities.LoginActivity)>
	++ <flipboard.gui.section.SectionFragment$35: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.Runnable)>
	++ <flipboard.widget.FlipboardWidgetManager: int a(boolean)>
	++ <com.fasterxml.jackson.databind.ObjectReader: java.lang.Object a(java.lang.String)>
	++ <flipboard.gui.section.AttributionSocial$1: void onClick(android.view.View)>
	++ <flipboard.activities.TOCActivity: void a(flipboard.activities.TOCActivity,flipboard.service.User$Message)>
	++ <flipboard.service.DialogHandler: void a(flipboard.activities.FlipboardActivity,java.lang.String,java.lang.String)>
	++ <flipboard.util.GooglePlusSignInClient: void <init>(android.content.Context,int,flipboard.util.GooglePlusSignInClient$GooglePlusSignInListener)>
	++ <flipboard.gui.item.FlipmagDetailViewTablet: flipboard.gui.FLWebView a(flipboard.gui.item.FlipmagDetailViewTablet)>
	++ <flipboard.service.RemoteWatchedFile: void c(boolean)>
	++ <flipboard.model.FeedItem: boolean canUnlike(flipboard.model.ConfigService)>
	++ <flipboard.gui.actionbar.FLActionBar$1: void onClick(android.view.View)>
	++ <flipboard.gui.actionbar.FLActionBar$2: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer: java.lang.Enum c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Flap$ActivityRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.gui.item.FlipmagDetailViewTablet: void <clinit>()>
	++ <flipboard.gui.FLBitmapView: void setBitmap(int)>
	++ <flipboard.gui.actionbar.FLActionBarMenuItem: void <init>(android.content.Context,int,int,int,java.lang.CharSequence)>
	++ <flipboard.widget.FlipboardWidgetManager: void <clinit>()>
	++ <flipboard.gui.item.AudioItemTablet: void a(flipboard.service.audio.FLAudioManager$AudioState,flipboard.model.FeedItem)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object f(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.FLImageView: void <clinit>()>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer: void a(com.fasterxml.jackson.core.JsonParser)>
	++ <flipboard.gui.section.SectionFragment$36: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <org.askerov.dynamicgrid.DynamicGridView: void a(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: void a(java.util.List,flipboard.service.Flap$CommentaryObserver)>
	++ <flipboard.service.SyncJob$4: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.model.ConfigSetting: java.lang.String getWebViewRefererString()>
	++ <flipboard.activities.DetailActivity: android.view.View G()>
	++ <com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.gui.flipping.TextPageLoadMore: void b(float)>
	++ <flipboard.model.FLObject: boolean getBoolean(java.lang.String,boolean)>
	++ <flipboard.util.Format$CharBuf: void b(int)>
	++ <flipboard.util.Format: void a(java.lang.RuntimeException)>
	++ <flipboard.activities.ContentDrawerActivity: void a(flipboard.gui.ContentDrawerView,boolean,boolean)>
	++ <flipboard.activities.ContentDrawerActivity: void j()>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.lang.Object i(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.sstream.SstreamBroadcastReceiver: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.activities.VideoAdActivity: void onStart()>
	++ <flipboard.gui.FLImageView: void setBitmap(int)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.flipping.TextPageRefresh: void a(float)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object a_(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,int)>
	++ <flipboard.activities.JsonExplorer$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.gui.personal.SocialNetworksFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.section.SectionPage$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.User: void b(java.util.List,java.lang.String)>
	++ <flipboard.activities.LoginActivity: void a(flipboard.activities.LoginActivity,flipboard.gui.dialog.FLProgressDialogFragment)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Long r(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.remoteservice.MessengerService$IncomingHandler$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.io.UsageManager: void a(java.lang.String)>
	++ <com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] a(com.fasterxml.jackson.core.Base64Variant)>
	++ <flipboard.gui.section.UserListFragment$6: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: byte[] a(com.fasterxml.jackson.core.Base64Variant)>
	++ <flipboard.gui.FLBitmapView: void a(flipboard.io.Download,android.graphics.Point)>
	++ <flipboard.gui.actionbar.FLActionBar: android.view.View a(boolean,boolean)>
	++ <flipboard.activities.VideoActivity: void onStart()>
	++ <flipboard.activities.FirstRunActivity: void onPause()>
	++ <flipboard.activities.DetailActivity: java.lang.String m_()>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.TextNode a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,long)>
	++ <com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.AudioPlayerActivity: void onClick(android.view.View)>
	++ <flipboard.activities.FlipboardFragment: void a(android.content.Intent,int)>
	++ <net.hockeyapp.android.Constants: int a(android.content.Context,android.content.pm.PackageManager)>
	++ <flipboard.gui.personal.TocDrawerListFragment: flipboard.activities.FlipboardActivity d(flipboard.gui.personal.TocDrawerListFragment)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object B(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.core.util.JsonParserDelegate: int a(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)>
	++ <flipboard.activities.DetailActivity: java.lang.String l()>
	++ <flipboard.model.ConfigFolder: void <init>()>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.util.Observable$Proxy: java.lang.Object D()>
	++ <flipboard.service.ActivityFetcher: void a(java.util.List,flipboard.service.Flap$CommentaryObserver)>
	++ <com.fasterxml.jackson.databind.ObjectReader: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,java.lang.Object)>
	++ <flipboard.service.FlipboardManager: void a(flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.activities.ContentDrawerTabletActivity$CategoriesAdapter: void a(int,int)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.activities.TOCActivity: void onSaveInstanceState(android.os.Bundle)>
	++ <flipboard.io.UsageEvent: float f()>
	++ <com.fasterxml.jackson.databind.util.TokenBuffer$Parser: int a(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)>
	++ <flipboard.activities.ServiceSettingsActivity$1: void onClick(android.view.View)>
	++ <flipboard.activities.ContentDrawerActivity: android.content.Intent c(android.app.Activity)>
	++ <com.facebook.widget.WebDialog$3: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.activities.DetailActivity$5: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: java.lang.Object a(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.section.SectionFragment$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: flipboard.util.Observable$Proxy c(flipboard.service.FlipboardManager)>
	++ <flipboard.util.Log: void a(flipboard.util.Log$Level,java.lang.String,java.lang.Object[])>
	++ <flipboard.activities.FirstRunActivity: flipboard.gui.firstrun.FirstRunView$PageType F()>
	++ <flipboard.activities.AudioPlayerActivity: void G()>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Short n(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.AudioPlayerActivity: void onResume()>
	++ <flipboard.activities.MuteActivity: void onPause()>
	++ <flipboard.activities.SearchTabletActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: void b(flipboard.service.FlipboardManager)>
	++ <org.askerov.dynamicgrid.DynamicGridView$7: void onScroll(android.widget.AbsListView,int,int,int)>
	++ <flipboard.service.FlipboardManager$24: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ObjectMapper$1: void a(com.fasterxml.jackson.databind.PropertyNamingStrategy)>
	++ <flipboard.gui.toc.TileContainer$1$1: void a(java.lang.Object)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.activities.ChooseAvatarActivity: void onStart()>
	++ <flipboard.activities.FeedActivity: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader a(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.InjectableValues)>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: java.util.Collection b_(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.BeanDeserializer: java.lang.Object c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.CreateAccountActivity: void onResume()>
	++ <flipboard.service.Flap$FlapRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.util.JavaUtil: int a(int,int,int)>
	++ <flipboard.service.Flap: void a(flipboard.service.User,java.util.List,java.lang.String,flipboard.service.Flap$JSONResultObserver)>
	++ <flipboard.util.Format: java.lang.String a(java.lang.String,java.lang.Iterable)>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Flap: void a(boolean,flipboard.service.Flap$TypedResultObserver)>
	++ <flipboard.util.Log: void a(java.lang.String,java.lang.Object[])>
	++ <flipboard.gui.personal.TocDrawerListFragment$1: void onClick(android.view.View)>
	++ <flipboard.io.Download: void a(flipboard.io.Download$Observer)>
	++ <flipboard.activities.SwitchContentGuideActivity: void onResume()>
	++ <flipboard.gui.FLRelativeLayout: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.RemoteWatchedFile: void d(boolean)>
	++ <org.askerov.dynamicgrid.DynamicGridView: android.view.View a(long)>
	++ <flipboard.activities.CreateAccountActivity: void onPause()>
	++ <flipboard.service.User: void r()>
	++ <flipboard.service.FlipboardManager$10: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.util.SocialHelper: void a(flipboard.model.FeedItem,flipboard.service.Section,flipboard.activities.FlipboardActivity,flipboard.model.UsageEventV2$SocialCardNavFrom)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper a(com.fasterxml.jackson.databind.Module)>
	++ <flipboard.io.Download$Observer: void a(int)>
	++ <flipboard.activities.SubsectionActivity$ListItemAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.util.Observable: java.lang.Object D()>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.util.Collection a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)>
	++ <flipboard.gui.flipping.FlipTransitionBase: flipboard.gui.flipping.SinglePage a(flipboard.gui.flipping.FlipTransitionBase$Direction,float,float)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer: java.util.EnumSet c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <net.hockeyapp.android.CrashManager: void b(java.lang.ref.WeakReference,net.hockeyapp.android.CrashManagerListener,boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer: java.lang.Enum a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>
	++ <flipboard.io.BitmapManager$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.actionbar.FLActionBar: android.view.View a(boolean,flipboard.gui.actionbar.FLActionBar$HomeButtonStyle,boolean)>
	++ <flipboard.activities.ReportIssueActivity$2: void onClick(android.view.View)>
	++ <flipboard.gui.toc.TileContainer$MoreTileContainer$MoreTile: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.FlipboardManager: void a(java.lang.Class,android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.gui.personal.TocDrawerListFragment: flipboard.activities.FlipboardActivity a(flipboard.gui.personal.TocDrawerListFragment)>
	++ <flipboard.gui.FLBitmapView: void setAllowPreloadOnUIThread(boolean)>
	++ <flipboard.gui.toc.TOCView: void a(boolean)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,boolean)>
	++ <flipboard.util.Log: void <clinit>()>
	++ <flipboard.gui.FLStaticTextView: void setText(java.lang.CharSequence)>
	++ <flipboard.service.Section: flipboard.service.User E()>
	++ <flipboard.gui.personal.NotificationsFragment: void c(flipboard.gui.personal.NotificationsFragment)>
	++ <com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.JsonExplorer$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.widget.FlipboardWidgetManager: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.User: flipboard.service.Account b(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: java.lang.Object[] d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.section.scrolling.ItemActionBar$$ViewInjector$3: void onClick(android.view.View)>
	++ <flipboard.activities.AudioPlayerActivity: void a(flipboard.service.audio.Song)>
	++ <flipboard.activities.JsonExplorer: android.content.Intent a(flipboard.activities.JsonExplorer$DisplayType,java.lang.String,java.lang.String)>
	++ <flipboard.activities.FlipboardActivity: void a(android.content.Intent,int,flipboard.activities.FlipboardActivity$ActivityResultListener)>
	++ <org.askerov.dynamicgrid.DynamicGridView: void c(org.askerov.dynamicgrid.DynamicGridView,android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer: java.math.BigDecimal c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.sstream.SstreamBroadcastReceiver: void a(flipboard.sstream.SstreamBroadcastReceiver,flipboard.service.User,java.lang.String,java.lang.String)>
	++ <flipboard.util.SocialHelper: void a(flipboard.activities.FlipboardActivity,flipboard.service.Section,flipboard.model.FeedItem)>
	++ <flipboard.activities.AudioPlayerActivity: void r()>
	++ <flipboard.model.FeedItem: flipboard.model.FLObject getAdditionalUsage()>
	++ <flipboard.sstream.SstreamBroadcastReceiver$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.flipping.ViewScreenshotCreator: void a(flipboard.gui.flipping.FlippingBitmap)>
	++ <flipboard.gui.dialog.FLDialogFragment: void a(android.support.v4.app.FragmentManager,java.lang.String)>
	++ <flipboard.activities.FlipboardActivity: void a(flipboard.service.Section,java.util.List)>
	++ <flipboard.activities.ContentDrawerPhoneActivity: void onResume()>
	++ <flipboard.gui.FLImageView: void a(java.lang.String,flipboard.model.Image,android.graphics.PointF,java.lang.String)>
	++ <flipboard.activities.ContentDrawerActivity: void onPause()>
	++ <com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object a(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>
	++ <flipboard.gui.personal.NotificationsFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.model.FeedItem: java.util.List getSource()>
	++ <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.activities.ContentDrawerActivity: void b(android.app.Activity)>
	++ <flipboard.activities.JsonExplorer$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	++ <flipboard.gui.CommentaryList$12: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.service.Flap: void <clinit>()>
	++ <flipboard.gui.section.SectionFragment: void a(flipboard.model.UsageEventV2$SectionNavFrom)>
	++ <flipboard.activities.AudioPlayerActivity: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.ContentDrawerHandler$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.activities.ContentDrawerTabletActivity: void onRestoreInstanceState(android.os.Bundle)>
	++ <flipboard.service.Section: flipboard.model.FeedItem a(flipboard.model.FeedItem,java.lang.String)>
	++ <flipboard.util.AndroidUtil: void a(android.view.View,java.lang.Class,flipboard.util.Callback)>
	++ <flipboard.gui.toc.DynamicGridLayout$DragManager$3: void a(java.lang.Object)>
	++ <flipboard.util.Format$CharBuf: void a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.module.SimpleDeserializers: void a(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.activities.ChooseAvatarActivity: void i()>
	++ <flipboard.gui.section.AttributionSocial$2: void onClick(android.view.View)>
	++ <flipboard.activities.ServiceSettingsActivity$2: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.AudioPlayerActivity: void H()>
	++ <flipboard.util.VideoUtil: void a(android.app.Activity,flipboard.model.FeedItem,java.lang.String,boolean)>
	++ <flipboard.service.Flap$SectionListRequest: void <init>(flipboard.service.Flap,flipboard.service.User)>
	++ <flipboard.util.Format$CharBuf: void <init>(flipboard.util.Format,int)>
	++ <flipboard.service.Section: flipboard.service.Section a(flipboard.model.ContentDrawerListItem)>
	++ <com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer: java.lang.String[] d(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.ContentDrawerView: void a(java.lang.String,java.lang.String)>
	++ <com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException a(java.lang.Class,com.fasterxml.jackson.core.JsonToken)>
	++ <flipboard.io.DownloadManager: void b(boolean)>
	++ <flipboard.activities.FirstRunActivity: void onResume()>
	++ <flipboard.gui.flipping.FlipTransitionBase: flipboard.gui.flipping.SinglePage a(flipboard.gui.flipping.FlipTransitionBase$Direction,float,float,boolean)>
	++ <flipboard.gui.section.UserListFragment$5: void onClick(android.view.View)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: int[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.activities.ServiceSettingsActivity: void a(flipboard.activities.ServiceSettingsActivity,java.lang.reflect.Field,boolean)>
	++ <flipboard.gui.FLMaterialEditText: boolean onTouch(android.view.View,android.view.MotionEvent)>
	++ <flipboard.activities.FlipboardActivity: java.lang.String p()>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>
	++ <flipboard.activities.AudioPlayerActivity: void g_()>
	++ <com.fasterxml.jackson.databind.module.SimpleModule: com.fasterxml.jackson.databind.module.SimpleModule a(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean k(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <flipboard.gui.section.SectionFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.SocialBarTablet$1: void onClick(android.view.View)>
	++ <flipboard.service.FlipboardManager: void b(java.lang.Runnable)>
	++ <flipboard.service.FlipboardManager$3: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.util.Format: void b(java.lang.String,java.lang.Object[])>
	++ <com.fasterxml.jackson.core.JsonParseException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>
	++ <net.hockeyapp.android.CrashManager$2: void <init>(java.lang.ref.WeakReference,net.hockeyapp.android.CrashManagerListener,boolean)>
	++ <flipboard.service.Section: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>
	++ <com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Object[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.FLMaterialEditText: void a(boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.util.Date b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.LoginActivity$5: void onClick(android.view.View)>
	++ <flipboard.activities.VideoActivity: void onPause()>
	++ <com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Integer q(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.util.SocialHelper: void a(flipboard.service.Section,android.content.Context,android.os.Bundle)>
	++ <flipboard.service.FlipboardManager: void b(flipboard.activities.FlipboardActivity)>
	++ <com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser: double[] c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.util.TOCBuilder$TOCBuilderObserver: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.flipping.FlipTransitionViews: flipboard.gui.flipping.FlipTransitionViews$HopTask a(float,int)>
	++ <se.emilsjolander.stickylistheaders.StickyListHeadersListView$2: void onClick(android.view.View)>
	++ <flipboard.io.FunnelUsageEvent: void a(java.lang.String)>
	++ <org.askerov.dynamicgrid.DynamicGridView: void b(long)>
	++ <net.hockeyapp.android.utils.PrefsUtil: void a(android.content.SharedPreferences$Editor)>
	++ <flipboard.json.JsonSerializable: void <init>()>
	++ <flipboard.service.Flap: flipboard.service.Flap$UpdateRequest a(flipboard.service.User,boolean,boolean)>
	++ <flipboard.gui.flipping.SinglePage: void a(float)>
	++ <com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ValueNode a(java.lang.Object)>
	++ <flipboard.model.FLObject: void set(java.lang.String,java.lang.Object)>
	++ <flipboard.io.UsageEvent: void b(java.lang.String,long)>
	++ <flipboard.model.ContentDrawerListItemBase: void setName(java.lang.String)>
	++ <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.lang.String)>
	++ <flipboard.io.DownloadManager: void <clinit>()>
	++ <flipboard.gui.flipping.FlipTransitionViews: void b(int)>
	++ <flipboard.service.Section: void a(java.util.List)>
	++ <flipboard.util.Format: boolean a(int,int)>
	++ <com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer: java.util.Calendar c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Account: java.lang.String getService()>
	++ <flipboard.util.Log: void <init>(java.lang.String,flipboard.util.Log$Level,boolean)>
	++ <net.hockeyapp.android.CrashManager$3: void run()>
	++ <flipboard.util.Log: void b(flipboard.util.Log$Level,java.lang.String,java.lang.Object[])>
	++ <flipboard.gui.discovery.SectionSearchView$2: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.FLSearchView: void b(android.os.Bundle)>
	++ <com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.util.Map$Entry c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper a(com.fasterxml.jackson.databind.PropertyNamingStrategy)>
	++ <com.fasterxml.jackson.databind.deser.std.CollectionDeserializer: java.util.Collection b_(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.activities.ContentDrawerActivity: void a(android.app.Activity,android.content.Intent)>
	++ <flipboard.util.Format$CharBuf: boolean a(java.lang.Throwable,boolean,int)>
	++ <flipboard.activities.TOCActivity: void onPause()>
	++ <flipboard.json.JsonSerializationWrapper: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.MapDeserializer: java.util.Map a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)>
	++ <com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.service.Section: java.lang.String f()>
	++ <flipboard.service.Flap$FlapRequest: void <init>(flipboard.service.Flap,flipboard.service.User,boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.lang.Object a(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException a(com.fasterxml.jackson.core.JsonParser,java.lang.String)>
	++ <flipboard.io.BitmapManager: void a(int,boolean)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer: java.util.EnumMap c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.flipping.ViewScreenshotCreator: void a(int,int)>
	++ <flipboard.gui.ContentDrawerView: void <clinit>()>
	++ <com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.item.FlipmagDetailViewTablet$FlipmagWebViewClient$1: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.service.Section: flipboard.model.FeedItem a(java.lang.String)>
	++ <com.fasterxml.jackson.databind.ObjectReader: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)>
	++ <flipboard.activities.DetailActivity: void a(flipboard.gui.flipping.FlipTransitionBase$Direction)>
	++ <com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: com.fasterxml.jackson.databind.JsonNode c(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)>
	++ <com.fasterxml.jackson.databind.deser.std.EnumDeserializer: java.lang.Object a(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>
	++ <flipboard.gui.personal.TocDrawerListFragment: void a(java.lang.Object,java.lang.Object,java.lang.Object)>
	++ <flipboard.gui.flipping.FlipTransitionViews: void setCurrentViewIndex(int)>